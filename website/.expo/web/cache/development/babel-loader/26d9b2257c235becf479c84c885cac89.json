{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vemonet/develop/shapes-of-you/website/src/pages/SemanticIndex.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Grid, Paper, CircularProgress, Card, CardContent, Collapse, CardActions } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport ReactMarkdown from 'react-markdown';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport Config from \"../components/Config\";\nimport QueryYasguiButton from \"../components/QueryYasguiButton\";\nimport About from \"./About\";\nimport { LoggedIn, Value, useWebId } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\nimport { Alert } from '@material-ui/lab';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paperSearch: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '35ch',\n      marginRight: theme.spacing(3)\n    },\n    searchInput: {\n      marginLeft: theme.spacing(1),\n      fontSize: '16px',\n      flex: 1\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        color: theme.palette.secondary.main,\n        textDecoration: 'none'\n      }\n    }\n  };\n});\nexport default function SemanticIndex() {\n  var _this = this;\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var webId = useWebId();\n\n  var _React$useState = React.useState({\n    global_shapes_array: [],\n    expanded_files: {},\n    webid: '',\n    shapes_files_list: [],\n    search: '',\n    repositories_hash: [],\n    repositories_autocomplete: [],\n    repos_overview_chart: {},\n    files_overview_chart: {},\n    type_checkboxes: {\n      SPARQL: true,\n      OWL: true,\n      SKOS: true,\n      OBO: true,\n      SHACL: true,\n      ShEx: true,\n      RML: true,\n      R2RML: true,\n      Nanopub: true,\n      OpenAPI: true,\n      DCAT: true,\n      CSVW: true\n    },\n    search_repos_only: false,\n    show_pwa_alert: false,\n    page: 1,\n    shapes_per_page: 70,\n    show_info_card: false\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var stateRef = React.useRef(state);\n  var updateState = React.useCallback(function (update) {\n    stateRef.current = _objectSpread(_objectSpread({}, stateRef.current), update);\n    setState(stateRef.current);\n  }, [setState]);\n  var shape_types_mappings = {\n    'http://www.w3.org/ns/shacl#Shape': 'SHACL',\n    'http://www.w3.org/2002/07/owl#Ontology': 'OWL',\n    'http://www.w3.org/ns/shex#Schema': 'ShEx',\n    'http://www.w3.org/ns/shacl#SPARQLFunction': 'SPARQL',\n    'http://www.w3.org/2004/02/skos/core#ConceptScheme': 'SKOS',\n    'http://semanticscience.org/resource/SIO_000623': 'OBO',\n    'https://schema.org/APIReference': 'OpenAPI',\n    'http://www.w3.org/ns/r2rml#TriplesMap': 'R2RML',\n    'http://semweb.mmlab.be/ns/rml#LogicalSource': 'RML',\n    'https://w3id.org/np/o/ntemplate/AssertionTemplate': 'Nanopub',\n    'http://www.w3.org/ns/dcat#Dataset': 'DCAT',\n    'http://www.w3.org/ns/csvw#Schema': 'CSVW'\n  };\n\n  function getFileLabel(file_type) {\n    var icon = '📄';\n    if (shape_types_mappings[file_type] == 'OWL' || file_type == 'OWL') icon = '🦉';\n    if (shape_types_mappings[file_type] == 'ShEx' || file_type == 'ShEx') icon = '✴️';\n    if (shape_types_mappings[file_type] == 'SHACL' || file_type == 'SHACL') icon = '💠';\n    if (shape_types_mappings[file_type] == 'RML' || file_type == 'RML') icon = '🦜';\n    if (shape_types_mappings[file_type] == 'R2RML' || file_type == 'R2RML') icon = '🗄';\n    if (shape_types_mappings[file_type] == 'OBO' || file_type == 'OBO') icon = '🧪';\n    if (shape_types_mappings[file_type] == 'OpenAPI' || file_type == 'OpenAPI') icon = '📬';\n    if (shape_types_mappings[file_type] == 'SPARQL' || file_type == 'SPARQL') icon = '✨️';\n    if (shape_types_mappings[file_type] == 'SKOS' || file_type == 'SKOS') icon = '📕';\n    if (shape_types_mappings[file_type] == 'Nanopub' || file_type == 'Nanopub') icon = '🗞';\n    if (shape_types_mappings[file_type] == 'DCAT' || file_type == 'DCAT') icon = '💽';\n    if (shape_types_mappings[file_type] == 'CSVW' || file_type == 'CSVW') icon = '📑';\n    return icon;\n  }\n\n  var chart_colors = ['#4caf50', '#9575cd', '#bcaaa4', '#ef6c00', '#26c6da', '#1565c0', '#aed581', '#4caf50', '#ffeb3b', '#ffb74d', '#ce93d8', '#4db6ac'];\n  React.useEffect(function () {\n    var endpointToQuery = Config.sparql_endpoint;\n    var repos_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of repositories per resource type',\n        data: [],\n        backgroundColor: chart_colors\n      }]\n    };\n    var files_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of files per resource type',\n        data: [],\n        backgroundColor: chart_colors\n      }]\n    };\n    axios.get(endpointToQuery + \"?query=\" + encodeURIComponent(sparql_resources_overview)).then(function (res) {\n      var results_array = res.data.results.bindings;\n      results_array.map(function (result) {\n        repos_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n        repos_overview_chart.datasets[0].data.push(result.repos_count.value);\n        files_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n        files_overview_chart.datasets[0].data.push(result.files_count.value);\n      });\n      updateState({\n        repos_overview_chart: repos_overview_chart,\n        files_overview_chart: files_overview_chart\n      });\n    });\n    axios.get(endpointToQuery + \"?query=\" + encodeURIComponent(getFilesQuery)).then(function (res) {\n      var sparqlResultArray = res.data.results.bindings;\n      var global_shapes_array = [];\n      sparqlResultArray.map(function (result) {\n        var repo_url = result.repository.value;\n        var repo_index = global_shapes_array.findIndex(function (obj) {\n          return obj.url == repo_url;\n        });\n\n        if (repo_index == -1) {\n          var repo_description = '';\n          if (result.repo_description) repo_description = result.repo_description.value;\n          repo_index = global_shapes_array.push({\n            'url': repo_url,\n            'description': repo_description,\n            'files': [],\n            'search_description': ''\n          }) - 1;\n        }\n\n        var file_url = result.shapeFileUri.value;\n        var found = global_shapes_array[repo_index]['files'].some(function (obj) {\n          return obj.url === file_url;\n        });\n\n        if (!found) {\n          var file_obj = {\n            'url': file_url,\n            'type': result.shape_type.value,\n            'label': result.label.value\n          };\n          var search_description = file_url + ' ' + result.label.value;\n\n          if (result.shape_file_description) {\n            file_obj.description = result.shape_file_description.value;\n            search_description = search_description + ' ' + result.shape_file_description.value;\n          }\n\n          if (result.sparqlEndpoint) {\n            file_obj.sparqlEndpoint = result.sparqlEndpoint.value;\n            search_description = search_description + ' ' + result.sparqlEndpoint.value;\n          }\n\n          if (result.query) {\n            file_obj.query = result.query.value;\n            search_description = search_description + ' ' + result.query.value;\n          }\n\n          global_shapes_array[repo_index]['files'].push(file_obj);\n          global_shapes_array[repo_index]['search_description'] = global_shapes_array[repo_index]['search_description'] + search_description;\n        }\n      });\n      updateState({\n        global_shapes_array: global_shapes_array\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    var repositories_hash = [];\n    axios.get(endpointToQuery + \"?query=\" + encodeURIComponent(countRepositoriesQuery)).then(function (res) {\n      var sparqlResultArray = res.data.results.bindings;\n      sparqlResultArray.map(function (result) {\n        var repo_description = '';\n\n        if (result.repo_description) {\n          repo_description = result.repo_description.value;\n        }\n\n        repositories_hash.push({\n          label: result.repository.value,\n          count: result.shapeFileCount.value,\n          description: repo_description\n        });\n      });\n      updateState({\n        repositories_hash: repositories_hash\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n\n    if (webId) {\n      createSolidFile(webId);\n    }\n  }, [webId]);\n\n  function createSolidFile(webId) {\n    var location = webId.replace(\"profile/card#me\", \"public/shapes-of-you/preferences.ttl\");\n    return data[location].put();\n  }\n\n  var searchChange = function searchChange(event) {\n    updateState({\n      search: event.target.value,\n      page: 1\n    });\n  };\n\n  var handleCheckboxes = function handleCheckboxes(event) {\n    updateState({\n      type_checkboxes: _objectSpread(_objectSpread({}, state.type_checkboxes), {}, _defineProperty({}, event.target.name, event.target.checked))\n    });\n  };\n\n  var handleExpandClick = function handleExpandClick(e) {\n    updateState({\n      expanded_files: _objectSpread(_objectSpread({}, state.expanded_files), {}, _defineProperty({}, e.currentTarget.name, !state.expanded_files[e.currentTarget.name]))\n    });\n  };\n\n  var filtered_files = state.global_shapes_array.filter(function (repo) {\n    var search_description = repo.url + ' ';\n    if (repo.description) search_description = search_description + ' ' + repo.description;\n    if (repo.search_description) search_description = search_description + ' ' + repo.search_description;\n    return search_description.toLowerCase().indexOf(state.search.toLowerCase()) !== -1;\n  }).reduce(function (filtered, repo) {\n    var filtered_repo = {};\n    filtered_repo.files = repo.files.filter(function (file) {\n      var search_description = repo.url + ' ';\n      if (file.label) search_description = search_description + ' ' + file.label;\n      if (file.description) search_description = search_description + ' ' + file.description;\n      if (repo.description) search_description = search_description + ' ' + repo.description;\n\n      if (state.type_checkboxes['ShEx'] === true && file.type == 'http://www.w3.org/ns/shex#Schema' || state.type_checkboxes['SPARQL'] === true && file.type == 'http://www.w3.org/ns/shacl#SPARQLFunction' || state.type_checkboxes['SHACL'] === true && file.type == 'http://www.w3.org/ns/shacl#Shape' || state.type_checkboxes['OWL'] === true && file.type == 'http://www.w3.org/2002/07/owl#Ontology' || state.type_checkboxes['OBO'] === true && file.type == 'http://semanticscience.org/resource/SIO_000623' || state.type_checkboxes['SKOS'] === true && file.type == 'http://www.w3.org/2004/02/skos/core#ConceptScheme' || state.type_checkboxes['R2RML'] === true && file.type == 'http://www.w3.org/ns/r2rml#TriplesMap' || state.type_checkboxes['RML'] === true && file.type == 'http://semweb.mmlab.be/ns/rml#LogicalSource' || state.type_checkboxes['OpenAPI'] === true && file.type == 'https://schema.org/APIReference' || state.type_checkboxes['DCAT'] === true && file.type == 'http://www.w3.org/ns/dcat#Dataset' || state.type_checkboxes['Nanopub'] === true && file.type == 'https://w3id.org/np/o/ntemplate/AssertionTemplate' || state.type_checkboxes['CSVW'] === true && file.type == 'http://www.w3.org/ns/csvw#Schema') {\n        if (state.search && !state.search_repos_only) {\n          return search_description.toLowerCase().indexOf(state.search.toLowerCase()) !== -1;\n        } else {\n          return true;\n        }\n      }\n    });\n    filtered_repo.url = repo.url;\n    if (repo.description) filtered_repo.description = repo.description;\n    filtered.push(filtered_repo);\n    return filtered;\n  }, []).filter(function (repo) {\n    if (repo.files.length > 0) {\n      return true;\n    } else {\n      return false;\n    }\n  });\n  return React.createElement(Container, {\n    style: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 5\n    }\n  }, React.createElement(Alert, {\n    severity: \"warning\",\n    style: {\n      marginBottom: theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 7\n    }\n  }, \"Shapes of You is currently under active development. Be patient when it loads the data (especially the 60k files on the main page). And feel free to \", React.createElement(\"a\", {\n    href: \"https://github.com/vemonet/shapes-of-you/issues\",\n    className: classes.link,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 26\n    }\n  }, \"create new issues\"), \" if you think of improvements or want to notify us about a problem!\"), React.createElement(About, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 7\n    }\n  }), React.createElement(LoggedIn, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 7\n    }\n  }, React.createElement(Typography, {\n    style: {\n      textAlign: 'center',\n      margin: theme.spacing(2, 2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 429,\n      columnNumber: 9\n    }\n  }, \"Welcome to your semantic resources index \", React.createElement(Value, {\n    src: \"user.name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 52\n    }\n  }), \"!\"), React.createElement(Typography, {\n    style: {\n      textAlign: 'center',\n      marginBottom: theme.spacing(3)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 9\n    }\n  }, \"Hopefully, soon you will be able to bookmark your favourites resources using your SOLID account! \\uD83D\\uDD16\")), state.repos_overview_chart['datasets'] && state.files_overview_chart['datasets'] && React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    style: {\n      textAlign: 'center',\n      marginTop: theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 9\n    }\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 11\n    }\n  }, React.createElement(Paper, {\n    style: {\n      padding: theme.spacing(2, 2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 13\n    }\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      marginBottom: theme.spacing(1)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 444,\n      columnNumber: 15\n    }\n  }, \"Number of repositories per resource type\"), React.createElement(Bar, {\n    data: state.repos_overview_chart,\n    options: chart_options(state.repos_overview_chart['datasets'][0]['data']),\n    plugins: [ChartDataLabels],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 15\n    }\n  }))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 11\n    }\n  }, React.createElement(Paper, {\n    style: {\n      padding: theme.spacing(2, 2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 13\n    }\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    style: {\n      marginBottom: theme.spacing(1)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }, \"Number of files per resource type\"), React.createElement(Bar, {\n    data: state.files_overview_chart,\n    options: chart_options(state.files_overview_chart['datasets'][0]['data']),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 15\n    }\n  })))), React.createElement(Paper, {\n    elevation: 6,\n    style: {\n      padding: theme.spacing(3, 2),\n      margin: theme.spacing(3, 0)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 7\n    }\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 9\n    }\n  }, filtered_files.reduce(function (filtered, repo) {\n    return filtered + repo.files.length;\n  }, 0), \" files in\\xA0\", Object.keys(filtered_files).length, \" repositories\"), React.createElement(Box, {\n    display: \"flex\",\n    style: {\n      margin: theme.spacing(2, 0)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 9\n    }\n  }, React.createElement(Paper, {\n    component: \"form\",\n    className: classes.paperSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 11\n    }\n  }, React.createElement(InputBase, {\n    className: classes.searchInput,\n    inputProps: {\n      'aria-label': 'search input'\n    },\n    placeholder: \"🔎 Quick search\",\n    onChange: searchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 13\n    }\n  }), React.createElement(IconButton, {\n    \"aria-label\": \"search button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 15\n    }\n  }))), React.createElement(TextField, {\n    id: \"shapes-per-page\",\n    value: state.shapes_per_page,\n    onChange: function onChange(e) {\n      updateState({\n        shapes_per_page: e.target.value\n      });\n    },\n    label: \"Repos per page\",\n    type: \"number\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 11\n    }\n  })), React.createElement(FormGroup, {\n    style: {\n      marginTop: theme.spacing(2)\n    },\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 9\n    }\n  }, Object.keys(state.type_checkboxes).map(function (checkbox, key) {\n    return React.createElement(FormControlLabel, {\n      key: key,\n      control: React.createElement(Checkbox, {\n        checked: state.type_checkboxes[checkbox],\n        onChange: handleCheckboxes,\n        name: checkbox,\n        color: \"primary\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 17\n        }\n      }),\n      label: checkbox,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 20\n      }\n    });\n  }), React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: theme.spacing(0, 2)\n    },\n    onClick: function onClick() {\n      var checkboxes = {};\n      Object.keys(state.type_checkboxes).map(function (type) {\n        checkboxes[type] = false;\n      });\n      updateState({\n        type_checkboxes: checkboxes\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 11\n    }\n  }, React.createElement(CheckBoxOutlineBlankIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 13\n    }\n  }), \"\\xA0 Uncheck all\"), React.createElement(Button, {\n    size: \"small\",\n    variant: \"contained\",\n    color: \"primary\",\n    style: {\n      margin: theme.spacing(0, 2)\n    },\n    onClick: function onClick() {\n      var checkboxes = {};\n      Object.keys(state.type_checkboxes).map(function (type) {\n        checkboxes[type] = true;\n      });\n      updateState({\n        type_checkboxes: checkboxes\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 517,\n      columnNumber: 11\n    }\n  }, React.createElement(CheckBoxIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 13\n    }\n  }), \"\\xA0 Check all\"), React.createElement(FormControlLabel, {\n    control: React.createElement(Checkbox, {\n      checked: state.search_repos_only,\n      onChange: function onChange() {\n        updateState({\n          search_repos_only: !state.search_repos_only\n        });\n      },\n      name: \"search_repos_only\",\n      color: \"primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 15\n      }\n    }),\n    label: \"Disable file filter ☕️ \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 11\n    }\n  }))), Object.keys(state.global_shapes_array).length < 1 && React.createElement(\"div\", {\n    style: {\n      textAlign: 'center',\n      padding: theme.spacing(10, 10)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 9\n    }\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    style: {\n      marginBottom: theme.spacing(2)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 542,\n      columnNumber: 11\n    }\n  }, \"It usually takes between 10 and 30 seconds to retrieve resources\"), React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 11\n    }\n  })), filtered_files.slice((state.page - 1) * state.shapes_per_page, state.page * state.shapes_per_page - 1).map(function (repo_obj, key) {\n    return React.createElement(Card, {\n      key: key.toString(),\n      elevation: 2,\n      style: {\n        padding: theme.spacing(1, 1),\n        margin: theme.spacing(2, 0)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 553,\n        columnNumber: 16\n      }\n    }, React.createElement(CardContent, {\n      style: {\n        paddingBottom: theme.spacing(0),\n        margin: theme.spacing(0, 0)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 11\n      }\n    }, React.createElement(Typography, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 13\n      }\n    }, React.createElement(\"a\", {\n      href: repo_obj.url,\n      className: classes.link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556,\n        columnNumber: 15\n      }\n    }, \"\\uD83D\\uDCC1\\xA0\", repo_obj.url.replace('https://github.com/', '')), repo_obj.description && React.createElement(React.Fragment, null, \"\\xA0-\\xA0\", repo_obj.description))), React.createElement(CardActions, {\n      disableSpacing: true,\n      style: {\n        padding: theme.spacing(0, 1),\n        margin: theme.spacing(0, 0)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 11\n      }\n    }, React.createElement(IconButton, {\n      style: {\n        fontSize: '16px'\n      },\n      onClick: handleExpandClick,\n      name: repo_obj.url,\n      \"aria-expanded\": state.expanded_files[repo_obj.url],\n      \"aria-label\": \"show about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 13\n      }\n    }, repo_obj.files.length, \" files\", !state.expanded_files[repo_obj.url] && React.createElement(ExpandMoreIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 17\n      }\n    }), state.expanded_files[repo_obj.url] && React.createElement(ExpandLessIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }\n    }))), React.createElement(Collapse, {\n      in: state.expanded_files[repo_obj.url],\n      timeout: \"auto\",\n      unmountOnExit: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585,\n        columnNumber: 11\n      }\n    }, React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 586,\n        columnNumber: 13\n      }\n    }, repo_obj.files.map(function (file_obj, key) {\n      return React.createElement(Card, {\n        key: key.toString(),\n        style: {\n          padding: theme.spacing(1, 1),\n          margin: theme.spacing(1, 0)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 24\n        }\n      }, React.createElement(Typography, {\n        style: {\n          margin: theme.spacing(1, 0)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 19\n        }\n      }, React.createElement(\"a\", {\n        href: file_obj.url,\n        className: classes.link,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 21\n        }\n      }, React.createElement(Chip, {\n        label: shape_types_mappings[file_obj.type],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 593,\n          columnNumber: 23\n        }\n      }), \" \", file_obj.label), React.createElement(QueryYasguiButton, {\n        endpoint: file_obj.sparqlEndpoint,\n        query: file_obj.query,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 21\n        }\n      }), file_obj.description && React.createElement(\"div\", {\n        style: {\n          margin: theme.spacing(1, 0)\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 23\n        }\n      }, React.createElement(ReactMarkdown, {\n        source: file_obj.description.substring(0, 1000),\n        renderers: {\n          paragraph: Typography\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 25\n        }\n      }))));\n    }))));\n  }), React.createElement(Pagination, {\n    count: Math.floor(Object.keys(filtered_files).length / state.shapes_per_page) + 1,\n    color: \"primary\",\n    onChange: function onChange(event, val) {\n      return updateState({\n        page: val\n      });\n    },\n    style: {\n      display: 'flex',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 705,\n      columnNumber: 7\n    }\n  }));\n}\nvar getFilesQuery = \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX dcterms: <http://purl.org/dc/terms/>\\nPREFIX schema: <https://schema.org/>\\nPREFIX sh: <http://www.w3.org/ns/shacl#>\\nPREFIX shex: <http://www.w3.org/ns/shex#>\\nPREFIX void: <http://rdfs.org/ns/void#>\\nSELECT DISTINCT * WHERE { \\n    ?shapeFileUri a schema:SoftwareSourceCode ;\\n        a ?shape_type ;\\n        rdfs:label ?label ;\\n        schema:codeRepository ?repository .\\n    FILTER(?shape_type != schema:SoftwareSourceCode)\\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\\n    OPTIONAL { ?shapeFileUri schema:query ?query }\\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\\n    OPTIONAL { ?shapeFileUri rdfs:comment ?shape_file_description }\\n}\";\nvar getShapesQuery = \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX dcterms: <http://purl.org/dc/terms/>\\nPREFIX schema: <https://schema.org/>\\nPREFIX sh: <http://www.w3.org/ns/shacl#>\\nPREFIX shex: <http://www.w3.org/ns/shex#>\\nPREFIX void: <http://rdfs.org/ns/void#>\\nSELECT DISTINCT * WHERE { \\n    ?shapeFileUri a schema:SoftwareSourceCode ;\\n        a ?shape_type ;\\n        rdfs:label ?label ;\\n        schema:codeRepository ?repository ;\\n        dcterms:hasPart ?shapes .\\n    FILTER(?shape_type != schema:SoftwareSourceCode)\\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\\n    OPTIONAL { ?shapeFileUri schema:query ?query }\\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\\n    OPTIONAL { ?shapeFileUri rdfs:comment ?shape_file_description }\\n}\";\nvar countRepositoriesQuery = \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX dcterms: <http://purl.org/dc/terms/>\\nPREFIX schema: <https://schema.org/>\\nPREFIX sh: <http://www.w3.org/ns/shacl#>\\nPREFIX shex: <http://www.w3.org/ns/shex#>\\nSELECT ?repository (count(?shapeFileUri) AS ?shapeFileCount) ?repo_description WHERE { \\n  ?shapeFileUri a <https://schema.org/SoftwareSourceCode> ;\\n    rdfs:label ?label ;\\n    schema:codeRepository ?repository .\\n  OPTIONAL { ?repository rdfs:comment ?repo_description }\\n} GROUP BY ?repository ?repo_description\\n\";\nvar sparql_resources_overview = \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX dcterms: <http://purl.org/dc/terms/>\\nPREFIX schema: <https://schema.org/>\\nPREFIX sh: <http://www.w3.org/ns/shacl#>\\nPREFIX shex: <http://www.w3.org/ns/shex#>\\nPREFIX void: <http://rdfs.org/ns/void#>\\nSELECT DISTINCT ?shape_type (count(distinct ?repository) AS ?repos_count) (count(distinct ?shape_file) AS ?files_count)\\nWHERE { \\n    ?shape_file a schema:SoftwareSourceCode ;\\n        a ?shape_type ;\\n        schema:codeRepository ?repository .\\n    FILTER(?shape_type != schema:SoftwareSourceCode)\\n} GROUP BY ?shape_type\\n\";\n\nfunction chart_options(data_array) {\n  return {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    plugins: {\n      datalabels: {\n        display: true,\n        color: 'black'\n      }\n    }\n  };\n}","map":{"version":3,"sources":["/home/vemonet/develop/shapes-of-you/website/src/pages/SemanticIndex.tsx"],"names":["React","makeStyles","useTheme","Typography","Container","Box","Button","Chip","Grid","Paper","CircularProgress","Card","CardContent","Collapse","CardActions","IconButton","InputBase","FormGroup","FormControlLabel","Checkbox","TextField","Pagination","SearchIcon","ExpandMoreIcon","ExpandLessIcon","CheckBoxOutlineBlankIcon","CheckBoxIcon","ReactMarkdown","axios","Bar","ChartDataLabels","Config","QueryYasguiButton","About","LoggedIn","Value","useWebId","data","Alert","useStyles","theme","paperSearch","padding","display","alignItems","width","marginRight","spacing","searchInput","marginLeft","fontSize","flex","link","textDecoration","color","palette","primary","main","secondary","SemanticIndex","classes","webId","useState","global_shapes_array","expanded_files","webid","shapes_files_list","search","repositories_hash","repositories_autocomplete","repos_overview_chart","files_overview_chart","type_checkboxes","SPARQL","OWL","SKOS","OBO","SHACL","ShEx","RML","R2RML","Nanopub","OpenAPI","DCAT","CSVW","search_repos_only","show_pwa_alert","page","shapes_per_page","show_info_card","state","setState","stateRef","useRef","updateState","useCallback","update","current","shape_types_mappings","getFileLabel","file_type","icon","chart_colors","useEffect","endpointToQuery","sparql_endpoint","labels","datasets","label","backgroundColor","get","encodeURIComponent","sparql_resources_overview","then","res","results_array","results","bindings","map","result","push","shape_type","value","repos_count","files_count","getFilesQuery","sparqlResultArray","repo_url","repository","repo_index","findIndex","obj","url","repo_description","file_url","shapeFileUri","found","some","file_obj","search_description","shape_file_description","description","sparqlEndpoint","query","catch","error","console","log","countRepositoriesQuery","count","shapeFileCount","createSolidFile","location","replace","put","searchChange","event","target","handleCheckboxes","name","checked","handleExpandClick","e","currentTarget","filtered_files","filter","repo","toLowerCase","indexOf","reduce","filtered","filtered_repo","files","file","type","length","marginTop","marginBottom","textAlign","margin","chart_options","Object","keys","checkbox","key","checkboxes","slice","repo_obj","toString","paddingBottom","substring","paragraph","Math","floor","val","justifyContent","getShapesQuery","data_array","scales","yAxes","ticks","beginAtZero","xAxes","legend","plugins","datalabels"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAsBC,QAAtB,QAAsC,0BAAtC;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,GAAhC,EAAqCC,MAArC,EAA6CC,IAA7C,EAA4DC,IAA5D,EAAkEC,KAAlE,EAAyEC,gBAAzE,EAA2FC,IAA3F,EAAiGC,WAAjG,EAA0HC,QAA1H,EAAoIC,WAApI,QAAuJ,mBAAvJ;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,mBAAtC;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,QAAtC,EAAgDC,SAAhD,QAAiE,mBAAjE;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,wBAAP,MAAqC,yCAArC;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AAIA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AAEA,OAAOC,MAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,KAAP;AAEA,SAASC,QAAT,EAA8BC,KAA9B,EAAqCC,QAArC,QAAoF,cAApF;AAEA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,SAASC,KAAT,QAAsB,kBAAtB;AAOA,IAAMC,SAAS,GAAGtC,UAAU,CAAC,UAAAuC,KAAK;AAAA,SAAK;AACrCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,OAAO,EAAE,SADE;AAEXC,MAAAA,OAAO,EAAE,MAFE;AAGXC,MAAAA,UAAU,EAAE,QAHD;AAIXC,MAAAA,KAAK,EAAE,MAJI;AAKXC,MAAAA,WAAW,EAAEN,KAAK,CAACO,OAAN,CAAc,CAAd;AALF,KADwB;AAQrCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,UAAU,EAAET,KAAK,CAACO,OAAN,CAAc,CAAd,CADD;AAEXG,MAAAA,QAAQ,EAAE,MAFC;AAGXC,MAAAA,IAAI,EAAE;AAHK,KARwB;AAarCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,cAAc,EAAE,MADZ;AAEJC,MAAAA,KAAK,EAAEd,KAAK,CAACe,OAAN,CAAcC,OAAd,CAAsBC,IAFzB;AAGJ,iBAAW;AACTH,QAAAA,KAAK,EAAEd,KAAK,CAACe,OAAN,CAAcG,SAAd,CAAwBD,IADtB;AAETJ,QAAAA,cAAc,EAAE;AAFP;AAHP;AAb+B,GAAL;AAAA,CAAN,CAA5B;AAuBA,eAAe,SAASM,aAAT,GAAyB;AAAA;;AACtC,MAAMC,OAAO,GAAGrB,SAAS,EAAzB;AACA,MAAMC,KAAK,GAAGtC,QAAQ,EAAtB;AACA,MAAM2D,KAAK,GAAGzB,QAAQ,EAAtB;;AAHsC,wBAMZpC,KAAK,CAAC8D,QAAN,CAAe;AACvCC,IAAAA,mBAAmB,EAAE,EADkB;AAEvCC,IAAAA,cAAc,EAAE,EAFuB;AAGvCC,IAAAA,KAAK,EAAE,EAHgC;AAIvCC,IAAAA,iBAAiB,EAAE,EAJoB;AAKvCC,IAAAA,MAAM,EAAE,EAL+B;AAMvCC,IAAAA,iBAAiB,EAAE,EANoB;AAOvCC,IAAAA,yBAAyB,EAAE,EAPY;AAQvCC,IAAAA,oBAAoB,EAAE,EARiB;AASvCC,IAAAA,oBAAoB,EAAE,EATiB;AAUvCC,IAAAA,eAAe,EAAE;AACfC,MAAAA,MAAM,EAAE,IADO;AAEfC,MAAAA,GAAG,EAAE,IAFU;AAGfC,MAAAA,IAAI,EAAE,IAHS;AAIfC,MAAAA,GAAG,EAAE,IAJU;AAKfC,MAAAA,KAAK,EAAE,IALQ;AAMfC,MAAAA,IAAI,EAAE,IANS;AAOfC,MAAAA,GAAG,EAAE,IAPU;AAQfC,MAAAA,KAAK,EAAE,IARQ;AASfC,MAAAA,OAAO,EAAE,IATM;AAUfC,MAAAA,OAAO,EAAE,IAVM;AAWfC,MAAAA,IAAI,EAAE,IAXS;AAYfC,MAAAA,IAAI,EAAE;AAZS,KAVsB;AAwBvCC,IAAAA,iBAAiB,EAAE,KAxBoB;AAyBvCC,IAAAA,cAAc,EAAE,KAzBuB;AA0BvCC,IAAAA,IAAI,EAAE,CA1BiC;AA2BvCC,IAAAA,eAAe,EAAE,EA3BsB;AA4BvCC,IAAAA,cAAc,EAAE;AA5BuB,GAAf,CANY;AAAA;AAAA,MAM/BC,KAN+B;AAAA,MAMxBC,QANwB;;AAoCtC,MAAMC,QAAQ,GAAG5F,KAAK,CAAC6F,MAAN,CAAaH,KAAb,CAAjB;AAEA,MAAMI,WAAW,GAAG9F,KAAK,CAAC+F,WAAN,CAAkB,UAACC,MAAD,EAAY;AAChDJ,IAAAA,QAAQ,CAACK,OAAT,mCAAuBL,QAAQ,CAACK,OAAhC,GAA4CD,MAA5C;AACAL,IAAAA,QAAQ,CAACC,QAAQ,CAACK,OAAV,CAAR;AACD,GAHmB,EAGjB,CAACN,QAAD,CAHiB,CAApB;AAKA,MAAMO,oBAAoB,GAAG;AAC3B,wCAAoC,OADT;AAE3B,8CAA0C,KAFf;AAG3B,wCAAoC,MAHT;AAI3B,iDAA6C,QAJlB;AAK3B,yDAAqD,MAL1B;AAM3B,sDAAkD,KANvB;AAO3B,uCAAmC,SAPR;AAQ3B,6CAAyC,OARd;AAS3B,mDAA+C,KATpB;AAU3B,yDAAqD,SAV1B;AAW3B,yCAAqC,MAXV;AAY3B,wCAAoC;AAZT,GAA7B;;AAeA,WAASC,YAAT,CAAsBC,SAAtB,EAAyC;AACvC,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,KAAnC,IAA4CA,SAAS,IAAI,KAA7D,EAAoEC,IAAI,GAAG,IAAP;AACpE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,MAAnC,IAA6CA,SAAS,IAAI,MAA9D,EAAsEC,IAAI,GAAG,IAAP;AACtE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,OAAnC,IAA8CA,SAAS,IAAI,OAA/D,EAAwEC,IAAI,GAAG,IAAP;AACxE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,KAAnC,IAA4CA,SAAS,IAAI,KAA7D,EAAoEC,IAAI,GAAG,IAAP;AACpE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,OAAnC,IAA8CA,SAAS,IAAI,OAA/D,EAAwEC,IAAI,GAAG,IAAP;AACxE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,KAAnC,IAA4CA,SAAS,IAAI,KAA7D,EAAoEC,IAAI,GAAG,IAAP;AACpE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,SAAnC,IAAgDA,SAAS,IAAI,SAAjE,EAA4EC,IAAI,GAAG,IAAP;AAC5E,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,QAAnC,IAA+CA,SAAS,IAAI,QAAhE,EAA0EC,IAAI,GAAG,IAAP;AAC1E,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,MAAnC,IAA6CA,SAAS,IAAI,MAA9D,EAAsEC,IAAI,GAAG,IAAP;AACtE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,SAAnC,IAAgDA,SAAS,IAAI,SAAjE,EAA4EC,IAAI,GAAG,IAAP;AAC5E,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,MAAnC,IAA6CA,SAAS,IAAI,MAA9D,EAAsEC,IAAI,GAAG,IAAP;AACtE,QAAIH,oBAAoB,CAACE,SAAD,CAApB,IAAmC,MAAnC,IAA6CA,SAAS,IAAI,MAA9D,EAAsEC,IAAI,GAAG,IAAP;AAEtE,WAAOA,IAAP;AACD;;AAED,MAAMC,YAAY,GAAG,CAAC,SAAD,EAAW,SAAX,EAAsB,SAAtB,EAAiC,SAAjC,EAA4C,SAA5C,EACnB,SADmB,EACR,SADQ,EACG,SADH,EACc,SADd,EACyB,SADzB,EACoC,SADpC,EAC+C,SAD/C,CAArB;AAIAtG,EAAAA,KAAK,CAACuG,SAAN,CAAgB,YAAM;AACpB,QAAMC,eAAe,GAAGzE,MAAM,CAAC0E,eAA/B;AAWA,QAAInC,oBAAoB,GAAG;AACzBoC,MAAAA,MAAM,EAAE,EADiB;AAEzBC,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,KAAK,EAAE,0CADE;AAETvE,QAAAA,IAAI,EAAE,EAFG;AAGTwE,QAAAA,eAAe,EAAEP;AAHR,OAAD;AAFe,KAA3B;AAQA,QAAI/B,oBAAoB,GAAG;AACzBmC,MAAAA,MAAM,EAAE,EADiB;AAEzBC,MAAAA,QAAQ,EAAE,CAAC;AACTC,QAAAA,KAAK,EAAE,mCADE;AAETvE,QAAAA,IAAI,EAAE,EAFG;AAGTwE,QAAAA,eAAe,EAAEP;AAHR,OAAD;AAFe,KAA3B;AASA1E,IAAAA,KAAK,CAACkF,GAAN,CAAUN,eAAe,YAAf,GAA8BO,kBAAkB,CAACC,yBAAD,CAA1D,EACGC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,UAAMC,aAAkB,GAAGD,GAAG,CAAC7E,IAAJ,CAAS+E,OAAT,CAAiBC,QAA5C;AACAF,MAAAA,aAAa,CAACG,GAAd,CAAkB,UAACC,MAAD,EAAuB;AAEvCjD,QAAAA,oBAAoB,CAACoC,MAArB,CAA4Bc,IAA5B,CAAiCtB,oBAAoB,CAACqB,MAAM,CAACE,UAAP,CAAkBC,KAAnB,CAArD;AAEApD,QAAAA,oBAAoB,CAACqC,QAArB,CAA8B,CAA9B,EAAiCtE,IAAjC,CAAsCmF,IAAtC,CAA2CD,MAAM,CAACI,WAAP,CAAmBD,KAA9D;AAEAnD,QAAAA,oBAAoB,CAACmC,MAArB,CAA4Bc,IAA5B,CAAiCtB,oBAAoB,CAACqB,MAAM,CAACE,UAAP,CAAkBC,KAAnB,CAArD;AAEAnD,QAAAA,oBAAoB,CAACoC,QAArB,CAA8B,CAA9B,EAAiCtE,IAAjC,CAAsCmF,IAAtC,CAA2CD,MAAM,CAACK,WAAP,CAAmBF,KAA9D;AACD,OATD;AAWA5B,MAAAA,WAAW,CAAC;AACVxB,QAAAA,oBAAoB,EAAEA,oBADZ;AAEVC,QAAAA,oBAAoB,EAAEA;AAFZ,OAAD,CAAX;AAID,KAlBH;AAqBA3C,IAAAA,KAAK,CAACkF,GAAN,CAAUN,eAAe,YAAf,GAA8BO,kBAAkB,CAACc,aAAD,CAA1D,EACGZ,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,UAAMY,iBAAiB,GAAGZ,GAAG,CAAC7E,IAAJ,CAAS+E,OAAT,CAAiBC,QAA3C;AACA,UAAItD,mBAAwB,GAAG,EAA/B;AAEA+D,MAAAA,iBAAiB,CAACR,GAAlB,CAAsB,UAACC,MAAD,EAAuB;AAG3C,YAAMQ,QAAQ,GAAGR,MAAM,CAACS,UAAP,CAAkBN,KAAnC;AACA,YAAIO,UAAU,GAAGlE,mBAAmB,CAACmE,SAApB,CAA+B,UAACC,GAAD;AAAA,iBAAcA,GAAG,CAACC,GAAJ,IAAWL,QAAzB;AAAA,SAA/B,CAAjB;;AACA,YAAIE,UAAU,IAAI,CAAC,CAAnB,EAAsB;AAEpB,cAAII,gBAAgB,GAAG,EAAvB;AACA,cAAId,MAAM,CAACc,gBAAX,EAA6BA,gBAAgB,GAAGd,MAAM,CAACc,gBAAP,CAAwBX,KAA3C;AAC7BO,UAAAA,UAAU,GAAGlE,mBAAmB,CAACyD,IAApB,CAAyB;AACpC,mBAAOO,QAD6B;AAEpC,2BAAeM,gBAFqB;AAGpC,qBAAS,EAH2B;AAIpC,kCAAsB;AAJc,WAAzB,IAKR,CALL;AAMD;;AAGD,YAAMC,QAAQ,GAAGf,MAAM,CAACgB,YAAP,CAAoBb,KAArC;AAEA,YAAMc,KAAK,GAAGzE,mBAAmB,CAACkE,UAAD,CAAnB,CAAgC,OAAhC,EAAyCQ,IAAzC,CAA+C,UAACN,GAAD;AAAA,iBAAcA,GAAG,CAACC,GAAJ,KAAYE,QAA1B;AAAA,SAA/C,CAAd;;AACA,YAAI,CAACE,KAAL,EAAY;AACV,cAAIE,QAAa,GAAG;AAClB,mBAAOJ,QADW;AAElB,oBAAQf,MAAM,CAACE,UAAP,CAAkBC,KAFR;AAGlB,qBAASH,MAAM,CAACX,KAAP,CAAac;AAHJ,WAApB;AAKA,cAAIiB,kBAAkB,GAAGL,QAAQ,GAAG,GAAX,GAAiBf,MAAM,CAACX,KAAP,CAAac,KAAvD;;AACA,cAAIH,MAAM,CAACqB,sBAAX,EAAmC;AACjCF,YAAAA,QAAQ,CAACG,WAAT,GAAuBtB,MAAM,CAACqB,sBAAP,CAA8BlB,KAArD;AACAiB,YAAAA,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2BpB,MAAM,CAACqB,sBAAP,CAA8BlB,KAA9E;AACD;;AACD,cAAIH,MAAM,CAACuB,cAAX,EAA2B;AACzBJ,YAAAA,QAAQ,CAACI,cAAT,GAA0BvB,MAAM,CAACuB,cAAP,CAAsBpB,KAAhD;AACAiB,YAAAA,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2BpB,MAAM,CAACuB,cAAP,CAAsBpB,KAAtE;AACD;;AACD,cAAIH,MAAM,CAACwB,KAAX,EAAkB;AAChBL,YAAAA,QAAQ,CAACK,KAAT,GAAiBxB,MAAM,CAACwB,KAAP,CAAarB,KAA9B;AACAiB,YAAAA,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2BpB,MAAM,CAACwB,KAAP,CAAarB,KAA7D;AACD;;AAGD3D,UAAAA,mBAAmB,CAACkE,UAAD,CAAnB,CAAgC,OAAhC,EAAyCT,IAAzC,CAA8CkB,QAA9C;AACA3E,UAAAA,mBAAmB,CAACkE,UAAD,CAAnB,CAAgC,oBAAhC,IAAwDlE,mBAAmB,CAACkE,UAAD,CAAnB,CAAgC,oBAAhC,IAAwDU,kBAAhH;AACD;AACF,OA7CD;AA+CA7C,MAAAA,WAAW,CAAC;AAAC/B,QAAAA,mBAAmB,EAAEA;AAAtB,OAAD,CAAX;AAED,KAtDH,EAuDGiF,KAvDH,CAuDS,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAzDH;AAwGA,QAAI7E,iBAAsB,GAAG,EAA7B;AACAxC,IAAAA,KAAK,CAACkF,GAAN,CAAUN,eAAe,YAAf,GAA8BO,kBAAkB,CAACqC,sBAAD,CAA1D,EACGnC,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,UAAMY,iBAAiB,GAAGZ,GAAG,CAAC7E,IAAJ,CAAS+E,OAAT,CAAiBC,QAA3C;AAEAS,MAAAA,iBAAiB,CAACR,GAAlB,CAAsB,UAACC,MAAD,EAAkB;AAEtC,YAAIc,gBAAgB,GAAG,EAAvB;;AACA,YAAId,MAAM,CAACc,gBAAX,EAA6B;AAC3BA,UAAAA,gBAAgB,GAAGd,MAAM,CAACc,gBAAP,CAAwBX,KAA3C;AACD;;AACDtD,QAAAA,iBAAiB,CAACoD,IAAlB,CAAuB;AACrBZ,UAAAA,KAAK,EAAEW,MAAM,CAACS,UAAP,CAAkBN,KADJ;AAErB2B,UAAAA,KAAK,EAAE9B,MAAM,CAAC+B,cAAP,CAAsB5B,KAFR;AAGrBmB,UAAAA,WAAW,EAAER;AAHQ,SAAvB;AAKD,OAXD;AAaAvC,MAAAA,WAAW,CAAC;AAAC1B,QAAAA,iBAAiB,EAAEA;AAApB,OAAD,CAAX;AACD,KAlBH,EAmBG4E,KAnBH,CAmBS,UAAAC,KAAK,EAAI;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KArBH;;AAsCA,QAAIpF,KAAJ,EAAW;AACT0F,MAAAA,eAAe,CAAC1F,KAAD,CAAf;AACD;AAEF,GArMD,EAqMG,CAACA,KAAD,CArMH;;AAwMA,WAAS0F,eAAT,CAAyB1F,KAAzB,EAAwC;AAGtC,QAAM2F,QAAQ,GAAG3F,KAAK,CAAC4F,OAAN,CAAc,iBAAd,EAAiC,sCAAjC,CAAjB;AAEA,WAAOpH,IAAI,CAACmH,QAAD,CAAJ,CAAeE,GAAf,EAAP;AACD;;AAED,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAgD;AACnE9D,IAAAA,WAAW,CAAC;AAAE3B,MAAAA,MAAM,EAAEyF,KAAK,CAACC,MAAN,CAAanC,KAAvB;AAA8BnC,MAAAA,IAAI,EAAE;AAApC,KAAD,CAAX;AACD,GAFD;;AAIA,MAAMuE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACF,KAAD,EAAgD;AACvE9D,IAAAA,WAAW,CAAC;AAACtB,MAAAA,eAAe,kCAAMkB,KAAK,CAAClB,eAAZ,2BAA8BoF,KAAK,CAACC,MAAN,CAAaE,IAA3C,EAAkDH,KAAK,CAACC,MAAN,CAAaG,OAA/D;AAAhB,KAAD,CAAX;AACD,GAFD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,CAAD,EAAY;AACpCpE,IAAAA,WAAW,CAAC;AAAC9B,MAAAA,cAAc,kCAAM0B,KAAK,CAAC1B,cAAZ,2BAA6BkG,CAAC,CAACC,aAAF,CAAgBJ,IAA7C,EAAoD,CAACrE,KAAK,CAAC1B,cAAN,CAAqBkG,CAAC,CAACC,aAAF,CAAgBJ,IAArC,CAArD;AAAf,KAAD,CAAX;AACD,GAFD;;AAYA,MAAMK,cAAc,GAAG1E,KAAK,CAAC3B,mBAAN,CACpBsG,MADoB,CACb,UAACC,IAAD,EAAe;AAErB,QAAI3B,kBAAkB,GAAG2B,IAAI,CAAClC,GAAL,GAAW,GAApC;AACA,QAAIkC,IAAI,CAACzB,WAAT,EAAsBF,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2B2B,IAAI,CAACzB,WAArD;AACtB,QAAIyB,IAAI,CAAC3B,kBAAT,EAA6BA,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2B2B,IAAI,CAAC3B,kBAArD;AAC7B,WAAOA,kBAAkB,CAAC4B,WAAnB,GAAiCC,OAAjC,CAA0C9E,KAAK,CAACvB,MAAN,CAAaoG,WAAb,EAA1C,MAA2E,CAAC,CAAnF;AACD,GAPoB,EAQpBE,MARoB,CAQb,UAACC,QAAD,EAAgBJ,IAAhB,EAA8B;AAEpC,QAAIK,aAAkB,GAAG,EAAzB;AAEAA,IAAAA,aAAa,CAACC,KAAd,GAAsBN,IAAI,CAACM,KAAL,CAAWP,MAAX,CAAkB,UAACQ,IAAD,EAAe;AACrD,UAAIlC,kBAAkB,GAAG2B,IAAI,CAAClC,GAAL,GAAW,GAApC;AACA,UAAIyC,IAAI,CAACjE,KAAT,EAAgB+B,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2BkC,IAAI,CAACjE,KAArD;AAChB,UAAIiE,IAAI,CAAChC,WAAT,EAAsBF,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2BkC,IAAI,CAAChC,WAArD;AACtB,UAAIyB,IAAI,CAACzB,WAAT,EAAsBF,kBAAkB,GAAGA,kBAAkB,GAAG,GAArB,GAA2B2B,IAAI,CAACzB,WAArD;;AAEtB,UAAKnD,KAAK,CAAClB,eAAN,CAAsB,MAAtB,MAAkC,IAAlC,IAA0CqG,IAAI,CAACC,IAAL,IAAa,kCAAxD,IACApF,KAAK,CAAClB,eAAN,CAAsB,QAAtB,MAAoC,IAApC,IAA4CqG,IAAI,CAACC,IAAL,IAAa,2CADzD,IAEApF,KAAK,CAAClB,eAAN,CAAsB,OAAtB,MAAmC,IAAnC,IAA2CqG,IAAI,CAACC,IAAL,IAAa,kCAFxD,IAGApF,KAAK,CAAClB,eAAN,CAAsB,KAAtB,MAAiC,IAAjC,IAAyCqG,IAAI,CAACC,IAAL,IAAa,wCAHtD,IAIApF,KAAK,CAAClB,eAAN,CAAsB,KAAtB,MAAiC,IAAjC,IAAyCqG,IAAI,CAACC,IAAL,IAAa,gDAJtD,IAKApF,KAAK,CAAClB,eAAN,CAAsB,MAAtB,MAAkC,IAAlC,IAA0CqG,IAAI,CAACC,IAAL,IAAa,mDALvD,IAMApF,KAAK,CAAClB,eAAN,CAAsB,OAAtB,MAAmC,IAAnC,IAA2CqG,IAAI,CAACC,IAAL,IAAa,uCANxD,IAOApF,KAAK,CAAClB,eAAN,CAAsB,KAAtB,MAAiC,IAAjC,IAAyCqG,IAAI,CAACC,IAAL,IAAa,6CAPtD,IAQApF,KAAK,CAAClB,eAAN,CAAsB,SAAtB,MAAqC,IAArC,IAA6CqG,IAAI,CAACC,IAAL,IAAa,iCAR1D,IASApF,KAAK,CAAClB,eAAN,CAAsB,MAAtB,MAAkC,IAAlC,IAA0CqG,IAAI,CAACC,IAAL,IAAa,mCATvD,IAUApF,KAAK,CAAClB,eAAN,CAAsB,SAAtB,MAAqC,IAArC,IAA6CqG,IAAI,CAACC,IAAL,IAAa,mDAV1D,IAWApF,KAAK,CAAClB,eAAN,CAAsB,MAAtB,MAAkC,IAAlC,IAA0CqG,IAAI,CAACC,IAAL,IAAa,kCAX3D,EAYE;AACA,YAAIpF,KAAK,CAACvB,MAAN,IAAgB,CAACuB,KAAK,CAACL,iBAA3B,EAA8C;AAC5C,iBAAOsD,kBAAkB,CAAC4B,WAAnB,GAAiCC,OAAjC,CAA0C9E,KAAK,CAACvB,MAAN,CAAaoG,WAAb,EAA1C,MAA2E,CAAC,CAAnF;AACD,SAFD,MAEO;AAEL,iBAAO,IAAP;AACD;AACF;AACF,KA1BqB,CAAtB;AA2BAI,IAAAA,aAAa,CAACvC,GAAd,GAAoBkC,IAAI,CAAClC,GAAzB;AACA,QAAIkC,IAAI,CAACzB,WAAT,EAAsB8B,aAAa,CAAC9B,WAAd,GAA4ByB,IAAI,CAACzB,WAAjC;AACtB6B,IAAAA,QAAQ,CAAClD,IAAT,CAAcmD,aAAd;AACA,WAAOD,QAAP;AACD,GA3CoB,EA2ClB,EA3CkB,EA4CpBL,MA5CoB,CA4Cb,UAACC,IAAD,EAAe;AAErB,QAAIA,IAAI,CAACM,KAAL,CAAWG,MAAX,GAAoB,CAAxB,EAA2B;AACzB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAnDoB,CAAvB;AAsDA,SACE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACC,MAAAA,SAAS,EAAExI,KAAK,CAACO,OAAN,CAAc,CAAd,CAAZ;AAA8BkI,MAAAA,YAAY,EAAEzI,KAAK,CAACO,OAAN,CAAc,CAAd;AAA5C,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,QAAQ,EAAC,SAAhB;AAA0B,IAAA,KAAK,EAAE;AAACkI,MAAAA,YAAY,EAAEzI,KAAK,CAACO,OAAN,CAAc,CAAd;AAAf,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8JAEmB;AAAG,IAAA,IAAI,EAAC,iDAAR;AAA0D,IAAA,SAAS,EAAEa,OAAO,CAACR,IAA7E;AAAmF,IAAA,MAAM,EAAC,QAA1F;AAAmG,IAAA,GAAG,EAAC,qBAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAFnB,wEADF,EAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAQE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAC8H,MAAAA,SAAS,EAAE,QAAZ;AAAsBC,MAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAA9B,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDAC2C,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD3C,MADF,EAOE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAACmI,MAAAA,SAAS,EAAE,QAAZ;AAAsBD,MAAAA,YAAY,EAAEzI,KAAK,CAACO,OAAN,CAAc,CAAd;AAApC,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qHAPF,CARF,EAoBI2C,KAAK,CAACpB,oBAAN,CAA2B,UAA3B,KAA0CoB,KAAK,CAACnB,oBAAN,CAA2B,UAA3B,CAA1C,IACA,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAA4B,IAAA,KAAK,EAAE;AAAC2G,MAAAA,SAAS,EAAE,QAAZ;AAAsBF,MAAAA,SAAS,EAAExI,KAAK,CAACO,OAAN,CAAc,CAAd;AAAjC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACL,MAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAACkI,MAAAA,YAAY,EAAEzI,KAAK,CAACO,OAAN,CAAc,CAAd;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gDADF,EAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE2C,KAAK,CAACpB,oBAAjB;AACE,IAAA,OAAO,EAAE8G,aAAa,CAAC1F,KAAK,CAACpB,oBAAN,CAA2B,UAA3B,EAAuC,CAAvC,EAA0C,MAA1C,CAAD,CADxB;AAEE,IAAA,OAAO,EAAE,CAACxC,eAAD,CAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CADF,EAUE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAE;AAACY,MAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAV,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAyB,IAAA,KAAK,EAAE;AAACkI,MAAAA,YAAY,EAAEzI,KAAK,CAACO,OAAN,CAAc,CAAd;AAAf,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADF,EAEE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE2C,KAAK,CAACnB,oBAAjB;AAAuC,IAAA,OAAO,EAAE6G,aAAa,CAAC1F,KAAK,CAACnB,oBAAN,CAA2B,UAA3B,EAAuC,CAAvC,EAA0C,MAA1C,CAAD,CAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,CAVF,CArBJ,EAwCE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAE,CAAlB;AAAqB,IAAA,KAAK,EAAE;AAAC7B,MAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAV;AAA+BoI,MAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAvC,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGqH,cAAc,CAACK,MAAf,CAAsB,UAACC,QAAD,EAAgBJ,IAAhB;AAAA,WAA8BI,QAAQ,GAAGJ,IAAI,CAACM,KAAL,CAAWG,MAApD;AAAA,GAAtB,EAAkF,CAAlF,CADH,mBAEGM,MAAM,CAACC,IAAP,CAAYlB,cAAZ,EAA4BW,MAF/B,kBADF,EAOE,oBAAC,GAAD;AAAK,IAAA,OAAO,EAAC,MAAb;AAAoB,IAAA,KAAK,EAAE;AAACI,MAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAT,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAwB,IAAA,SAAS,EAAEa,OAAO,CAACnB,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,SAAS,EAAEmB,OAAO,CAACZ,WADrB;AACkC,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KAD9C;AAEE,IAAA,WAAW,EAAE,iBAFf;AAGE,IAAA,QAAQ,EAAE2G,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,UAAD;AAAY,kBAAW,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CAFF,EAaE,oBAAC,SAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,KAAK,EAAEjE,KAAK,CAACF,eAFf;AAGE,IAAA,QAAQ,EAAE,kBAAC0E,CAAD,EAAY;AAACpE,MAAAA,WAAW,CAAC;AAACN,QAAAA,eAAe,EAAE0E,CAAC,CAACL,MAAF,CAASnC;AAA3B,OAAD,CAAX;AAA+C,KAHxE;AAIE,IAAA,KAAK,EAAC,gBAJR;AAKE,IAAA,IAAI,EAAC,QALP;AAME,IAAA,OAAO,EAAC,UANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CAPF,EAgCE,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAE;AAACsD,MAAAA,SAAS,EAAExI,KAAK,CAACO,OAAN,CAAc,CAAd;AAAZ,KAAlB;AAAiD,IAAA,GAAG,MAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGsI,MAAM,CAACC,IAAP,CAAY5F,KAAK,CAAClB,eAAlB,EAAmC8C,GAAnC,CAAuC,UAACiE,QAAD,EAAgBC,GAAhB,EAAgC;AACtE,WAAO,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA,GAAvB;AACL,MAAA,OAAO,EACL,oBAAC,QAAD;AACE,QAAA,OAAO,EAAE9F,KAAK,CAAClB,eAAN,CAAsB+G,QAAtB,CADX;AAEE,QAAA,QAAQ,EAAEzB,gBAFZ;AAGE,QAAA,IAAI,EAAEyB,QAHR;AAIE,QAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG;AAQL,MAAA,KAAK,EAAEA,QARF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AAUD,GAXA,CADH,EAcE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAC,WAA7B;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAyD,IAAA,KAAK,EAAE;AAACJ,MAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAT,KAAhE;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI0I,UAAe,GAAG,EAAtB;AACAJ,MAAAA,MAAM,CAACC,IAAP,CAAY5F,KAAK,CAAClB,eAAlB,EAAmC8C,GAAnC,CAAuC,UAACwD,IAAD,EAAe;AACpDW,QAAAA,UAAU,CAACX,IAAD,CAAV,GAAmB,KAAnB;AACD,OAFD;AAGAhF,MAAAA,WAAW,CAAC;AAAEtB,QAAAA,eAAe,EAAEiH;AAAnB,OAAD,CAAX;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,qBAdF,EAyBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,OAAb;AAAqB,IAAA,OAAO,EAAC,WAA7B;AAAyC,IAAA,KAAK,EAAC,SAA/C;AAAyD,IAAA,KAAK,EAAE;AAACN,MAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAT,KAAhE;AACE,IAAA,OAAO,EAAE,mBAAM;AACb,UAAI0I,UAAe,GAAG,EAAtB;AACAJ,MAAAA,MAAM,CAACC,IAAP,CAAY5F,KAAK,CAAClB,eAAlB,EAAmC8C,GAAnC,CAAuC,UAACwD,IAAD,EAAe;AACpDW,QAAAA,UAAU,CAACX,IAAD,CAAV,GAAmB,IAAnB;AACD,OAFD;AAGAhF,MAAAA,WAAW,CAAC;AAAEtB,QAAAA,eAAe,EAAEiH;AAAnB,OAAD,CAAX;AACD,KAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,mBAzBF,EAoCE,oBAAC,gBAAD;AAAkB,IAAA,OAAO,EACrB,oBAAC,QAAD;AACE,MAAA,OAAO,EAAE/F,KAAK,CAACL,iBADjB;AAEE,MAAA,QAAQ,EAAE,oBAAM;AAAES,QAAAA,WAAW,CAAC;AAAET,UAAAA,iBAAiB,EAAE,CAACK,KAAK,CAACL;AAA5B,SAAD,CAAX;AAA+D,OAFnF;AAGE,MAAA,IAAI,EAAC,mBAHP;AAIE,MAAA,KAAK,EAAC,SAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAOE,IAAA,KAAK,EAAE,yBAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApCF,CAhCF,CAxCF,EAwHGgG,MAAM,CAACC,IAAP,CAAY5F,KAAK,CAAC3B,mBAAlB,EAAuCgH,MAAvC,GAAgD,CAAhD,IACC;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,SAAS,EAAE,QAAZ;AAAsBxI,MAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,EAAd,EAAkB,EAAlB;AAA/B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAC,OAApB;AAA4B,IAAA,KAAK,EAAE;AAACkI,MAAAA,YAAY,EAAEzI,KAAK,CAACO,OAAN,CAAc,CAAd;AAAf,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEADF,EAIE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CAzHJ,EAkIGqH,cAAc,CACVsB,KADJ,CACW,CAAChG,KAAK,CAACH,IAAN,GAAa,CAAd,IAAkBG,KAAK,CAACF,eADnC,EACwDE,KAAK,CAACH,IAAP,GAAcG,KAAK,CAACF,eAApB,GAAuC,CAD9F,EAEI8B,GAFJ,CAEQ,UAASqE,QAAT,EAAwBH,GAAxB,EAAoC;AAC3C,WAAO,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEA,GAAG,CAACI,QAAJ,EAAX;AAA2B,MAAA,SAAS,EAAE,CAAtC;AAAyC,MAAA,KAAK,EAAE;AAAClJ,QAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAV;AAA+BoI,QAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAvC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAE;AAAC8I,QAAAA,aAAa,EAAErJ,KAAK,CAACO,OAAN,CAAc,CAAd,CAAhB;AAAkCoI,QAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAA1C,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,IAAI,EAAE4I,QAAQ,CAACvD,GAAlB;AAAuB,MAAA,SAAS,EAAExE,OAAO,CAACR,IAA1C;AAAgD,MAAA,MAAM,EAAC,QAAvD;AAAgE,MAAA,GAAG,EAAC,qBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACWuI,QAAQ,CAACvD,GAAT,CAAaqB,OAAb,CAAqB,qBAArB,EAA4C,EAA5C,CADX,CADF,EAIGkC,QAAQ,CAAC9C,WAAT,IACC,uDACgB8C,QAAQ,CAAC9C,WADzB,CALJ,CADF,CADK,EAeL,oBAAC,WAAD;AAAa,MAAA,cAAc,MAA3B;AAA4B,MAAA,KAAK,EAAE;AAACnG,QAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAV;AAA+BoI,QAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAvC,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,UAAD;AAAY,MAAA,KAAK,EAAE;AAACG,QAAAA,QAAQ,EAAE;AAAX,OAAnB;AACE,MAAA,OAAO,EAAE+G,iBADX;AAEE,MAAA,IAAI,EAAE0B,QAAQ,CAACvD,GAFjB;AAGE,uBAAe1C,KAAK,CAAC1B,cAAN,CAAqB2H,QAAQ,CAACvD,GAA9B,CAHjB;AAIE,oBAAW,YAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMGuD,QAAQ,CAACf,KAAT,CAAeG,MANlB,YAOG,CAACrF,KAAK,CAAC1B,cAAN,CAAqB2H,QAAQ,CAACvD,GAA9B,CAAD,IACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,EAUG1C,KAAK,CAAC1B,cAAN,CAAqB2H,QAAQ,CAACvD,GAA9B,KACC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CADF,CAfK,EAgCL,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE1C,KAAK,CAAC1B,cAAN,CAAqB2H,QAAQ,CAACvD,GAA9B,CAAd;AAAkD,MAAA,OAAO,EAAC,MAA1D;AAAiE,MAAA,aAAa,MAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEGuD,QAAQ,CAACf,KAAT,CAAetD,GAAf,CAAmB,UAASoB,QAAT,EAAwB8C,GAAxB,EAAoC;AACtD,aAAO,oBAAC,IAAD;AAAM,QAAA,GAAG,EAAEA,GAAG,CAACI,QAAJ,EAAX;AAA2B,QAAA,KAAK,EAAE;AAAClJ,UAAAA,OAAO,EAAEF,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB,CAAV;AAA+BoI,UAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAvC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAC,UAAD;AAAY,QAAA,KAAK,EAAE;AAACoI,UAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAT,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAE2F,QAAQ,CAACN,GAAlB;AAAuB,QAAA,SAAS,EAAExE,OAAO,CAACR,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE8C,oBAAoB,CAACwC,QAAQ,CAACoC,IAAV,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,OAEuDpC,QAAQ,CAAC9B,KAFhE,CADF,EAKE,oBAAC,iBAAD;AAAmB,QAAA,QAAQ,EAAE8B,QAAQ,CAACI,cAAtC;AAAsD,QAAA,KAAK,EAAEJ,QAAQ,CAACK,KAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,EAMGL,QAAQ,CAACG,WAAT,IAEC;AAAK,QAAA,KAAK,EAAE;AAACsC,UAAAA,MAAM,EAAE3I,KAAK,CAACO,OAAN,CAAc,CAAd,EAAiB,CAAjB;AAAT,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,aAAD;AACE,QAAA,MAAM,EAAE2F,QAAQ,CAACG,WAAT,CAAqBiD,SAArB,CAA+B,CAA/B,EAAkC,IAAlC,CADV;AAEE,QAAA,SAAS,EAAE;AAAEC,UAAAA,SAAS,EAAE5L;AAAb,SAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CARJ,CADK,CAAP;AAmBD,KApBA,CAFH,CADF,CAhCK,CAAP;AAuJD,GA1JA,CAlIH,EA6RE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE6L,IAAI,CAACC,KAAL,CAAWZ,MAAM,CAACC,IAAP,CAAYlB,cAAZ,EAA4BW,MAA5B,GAAqCrF,KAAK,CAACF,eAAtD,IAAyE,CAA5F;AACE,IAAA,KAAK,EAAC,SADR;AACkB,IAAA,QAAQ,EAAE,kBAACoE,KAAD,EAAOsC,GAAP;AAAA,aAAcpG,WAAW,CAAC;AAACP,QAAAA,IAAI,EAAE2G;AAAP,OAAD,CAAzB;AAAA,KAD5B;AAEE,IAAA,KAAK,EAAE;AAAEvJ,MAAAA,OAAO,EAAC,MAAV;AAAkBwJ,MAAAA,cAAc,EAAE;AAAlC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7RF,CADF;AAoSD;AAGD,IAAMtE,aAAa,4xBAAnB;AAoBA,IAAMuE,cAAc,+zBAApB;AAsBA,IAAMhD,sBAAsB,+kBAA5B;AAeA,IAAMpC,yBAAyB,ioBAA/B;;AAgBA,SAASoE,aAAT,CAAuBiB,UAAvB,EAAwC;AACtC,SAAO;AACLC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE,CAAC;AACNC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AADD,OAAD,CADD;AAONC,MAAAA,KAAK,EAAE,CAAC;AACNF,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE;AADR;AADD,OAAD;AAPD,KADH;AAcLE,IAAAA,MAAM,EAAE;AACNhK,MAAAA,OAAO,EAAE;AADH,KAdH;AAkBLiK,IAAAA,OAAO,EAAE;AACPC,MAAAA,UAAU,EAAE;AACVlK,QAAAA,OAAO,EAAE,IADC;AAEVW,QAAAA,KAAK,EAAE;AAFG;AADL;AAlBJ,GAAP;AAyDD","sourcesContent":["import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader, Collapse, CardActions } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import Alert from '@material-ui/lab/Alert';\n\nimport ReactMarkdown from 'react-markdown'\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\nimport Config from \"../components/Config\";\nimport QueryYasguiButton from \"../components/QueryYasguiButton\";\nimport About from \"./About\";\n\nimport { LoggedIn, LoggedOut, Value, useWebId, useLDflexValue, useLDflexList } from '@solid/react';\nimport { Like } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\nimport { Alert } from '@material-ui/lab';\n// import { data } from \"@solid/query-ldflex\";\n// import SolidStar from \"./SolidStar\";\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SemanticIndex() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const webId = useWebId();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    global_shapes_array: [],\n    expanded_files: {},\n    webid: '',\n    shapes_files_list: [],\n    search: '',\n    repositories_hash: [],\n    repositories_autocomplete: [],\n    repos_overview_chart: {},\n    files_overview_chart: {},\n    type_checkboxes: {\n      SPARQL: true,\n      OWL: true,\n      SKOS: true,\n      OBO: true,\n      SHACL: true,\n      ShEx: true,\n      RML: true,\n      R2RML: true,\n      Nanopub: true,\n      OpenAPI: true,\n      DCAT: true,\n      CSVW: true\n    },\n    search_repos_only: false,\n    show_pwa_alert: false,\n    page: 1,\n    shapes_per_page: 70,\n    show_info_card: false,\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const shape_types_mappings = {\n    'http://www.w3.org/ns/shacl#Shape': 'SHACL',\n    'http://www.w3.org/2002/07/owl#Ontology': 'OWL',\n    'http://www.w3.org/ns/shex#Schema': 'ShEx',\n    'http://www.w3.org/ns/shacl#SPARQLFunction': 'SPARQL',\n    'http://www.w3.org/2004/02/skos/core#ConceptScheme': 'SKOS',\n    'http://semanticscience.org/resource/SIO_000623': 'OBO',\n    'https://schema.org/APIReference': 'OpenAPI',\n    'http://www.w3.org/ns/r2rml#TriplesMap': 'R2RML',\n    'http://semweb.mmlab.be/ns/rml#LogicalSource': 'RML',\n    'https://w3id.org/np/o/ntemplate/AssertionTemplate': 'Nanopub',\n    'http://www.w3.org/ns/dcat#Dataset': 'DCAT',\n    'http://www.w3.org/ns/csvw#Schema': 'CSVW'\n  }\n\n  function getFileLabel(file_type: string) {\n    let icon = '📄';\n    if (shape_types_mappings[file_type] == 'OWL' || file_type == 'OWL') icon = '🦉'\n    if (shape_types_mappings[file_type] == 'ShEx' || file_type == 'ShEx') icon = '✴️'\n    if (shape_types_mappings[file_type] == 'SHACL' || file_type == 'SHACL') icon = '💠'\n    if (shape_types_mappings[file_type] == 'RML' || file_type == 'RML') icon = '🦜'\n    if (shape_types_mappings[file_type] == 'R2RML' || file_type == 'R2RML') icon = '🗄'\n    if (shape_types_mappings[file_type] == 'OBO' || file_type == 'OBO') icon = '🧪'\n    if (shape_types_mappings[file_type] == 'OpenAPI' || file_type == 'OpenAPI') icon = '📬'\n    if (shape_types_mappings[file_type] == 'SPARQL' || file_type == 'SPARQL') icon = '✨️'\n    if (shape_types_mappings[file_type] == 'SKOS' || file_type == 'SKOS') icon = '📕'\n    if (shape_types_mappings[file_type] == 'Nanopub' || file_type == 'Nanopub') icon = '🗞'\n    if (shape_types_mappings[file_type] == 'DCAT' || file_type == 'DCAT') icon = '💽'\n    if (shape_types_mappings[file_type] == 'CSVW' || file_type == 'CSVW') icon = '📑'\n\n    return icon;\n  }\n\n  const chart_colors = ['#4caf50','#9575cd', '#bcaaa4', '#ef6c00', '#26c6da',\n    '#1565c0', '#aed581', '#4caf50', '#ffeb3b', '#ffb74d', '#ce93d8', '#4db6ac']\n\n  // At start: query SPARQL endpoint to get the shapes files infos (componentDidMount)\n  React.useEffect(() => {\n    const endpointToQuery = Config.sparql_endpoint;\n\n    // Check if PWA, and hide message if already installed\n    // if (window.matchMedia('(display-mode: standalone)').matches) {  \n    //   updateState({ show_pwa_alert: false })\n    // }\n\n    // Check SOLID pod for a shapes preference file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n    let repos_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of repositories per resource type',\n        data: [ ],\n        backgroundColor: chart_colors\n        // hoverBackgroundColor: ['#4caf50']\n    }]}\n    let files_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of files per resource type',\n        data: [ ],\n        backgroundColor: chart_colors\n    }]}\n\n    // Get stats about shapes types\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(sparql_resources_overview))\n      .then(res => {\n        const results_array: any = res.data.results.bindings;\n        results_array.map((result: any): any =>  {\n          // @ts-ignore\n          repos_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n          // @ts-ignore\n          repos_overview_chart.datasets[0].data.push(result.repos_count.value);\n          // @ts-ignore\n          files_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n          // @ts-ignore\n          files_overview_chart.datasets[0].data.push(result.files_count.value);\n        })\n        // console.log(repos_overview_chart.labels)\n        updateState({\n          repos_overview_chart: repos_overview_chart,\n          files_overview_chart: files_overview_chart\n        })\n      })\n\n    // Get all files\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(getFilesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n        let global_shapes_array: any = []\n        // Iterates over shapes files\n        sparqlResultArray.map((result: any): any =>  {\n\n          // Get repo in array if exist\n          const repo_url = result.repository.value;\n          let repo_index = global_shapes_array.findIndex(((obj: any) => obj.url == repo_url));\n          if (repo_index == -1) {\n            // Add repository to global repos array if not present\n            let repo_description = ''\n            if (result.repo_description) repo_description = result.repo_description.value;\n            repo_index = global_shapes_array.push({\n              'url': repo_url,\n              'description': repo_description,\n              'files': [],\n              'search_description': ''\n            }) - 1\n          }\n\n          // Create shape file entry\n          const file_url = result.shapeFileUri.value;\n          // Avoid duplicates\n          const found = global_shapes_array[repo_index]['files'].some(((obj: any) => obj.url === file_url));\n          if (!found) {\n            let file_obj: any = {\n              'url': file_url,\n              'type': result.shape_type.value,\n              'label': result.label.value,\n            }\n            let search_description = file_url + ' ' + result.label.value\n            if (result.shape_file_description) {\n              file_obj.description = result.shape_file_description.value;\n              search_description = search_description + ' ' + result.shape_file_description.value\n            }\n            if (result.sparqlEndpoint) {\n              file_obj.sparqlEndpoint = result.sparqlEndpoint.value;\n              search_description = search_description + ' ' + result.sparqlEndpoint.value\n            }\n            if (result.query) {\n              file_obj.query = result.query.value;\n              search_description = search_description + ' ' + result.query.value\n            }\n\n            // Add shapes file to repo entry\n            global_shapes_array[repo_index]['files'].push(file_obj)\n            global_shapes_array[repo_index]['search_description'] = global_shapes_array[repo_index]['search_description'] + search_description\n          }\n        })\n        // console.log(global_shapes_array)\n        updateState({global_shapes_array: global_shapes_array})\n\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // TODO: Get all shapes in files. Disabled, too big: 3m2. \n    // Considering doing a separated \"deep search\" for shapes parts\n    // axios.get(endpointToQuery + `?query=` + encodeURIComponent(getShapesQuery))\n    //   .then(res => {\n    //     const sparqlResultArray = res.data.results.bindings;\n    //     // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n    //     const projects_converted_hash = { ...sparqlResultArray }\n    //     let projects_hash: any = {}\n    //     // Iterate over projects\n    //     Object.keys(projects_converted_hash).forEach(function(project) {\n    //       const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n    //       // Use the project URI as key in the hash\n    //       if (!projects_hash[projectName]){\n    //         projects_hash[projectName] = {shapes: []}\n    //       }\n    //       // Iterate over project properties\n    //       Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n    //         const propertyHash = projects_converted_hash[project][property]\n    //         if (propertyHash) {\n    //           if (property == 'shapes') {\n    //             // Exception for shapes which is a list\n    //             let shape_label = propertyHash.value;\n    //             if (shape_label.length > 100) {\n    //               const n = shape_label.lastIndexOf('#');\n    //               shape_label = shape_label.substring(n + 1);\n    //             }\n    //             if (shape_label.length > 150) {\n    //               shape_label = shape_label.substring(0, 150)\n    //             }\n    //             projects_hash[projectName][property].push(shape_label);\n    //           } else {\n    //             projects_hash[projectName][property] = propertyHash.value \n    //           }\n    //         }\n    //       })\n    //     })\n    //     // Convert back to array for filtering\n    //     const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n    //     updateState({shapes_files_list: project_final_array})\n    //   })\n    //   .catch(error => {\n    //     console.log(error)\n    //   })\n\n    // Get repositories and their files counts\n    let repositories_hash: any = []\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(countRepositoriesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        sparqlResultArray.map((result: any) =>  {\n          // repositories_hash[result.repository.value] = {\n          let repo_description = '';\n          if (result.repo_description) {\n            repo_description = result.repo_description.value;\n          }\n          repositories_hash.push({\n            label: result.repository.value,\n            count: result.shapeFileCount.value,\n            description: repo_description,\n          })\n        });\n\n        updateState({repositories_hash: repositories_hash})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Query with the Comunica engine. Not working on SPARQL endpoint, only on the examples they provide\n    // https://comunica.dev/docs/query/getting_started/query_app/\n    // const comunicaEngine = newEngine();\n    // comunicaEngine.query(`\n    //   SELECT ?s ?o WHERE {\n    //    ?s a ?o .\n    //   } LIMIT 100`, {\n    //   sources: ['https://dbpedia.org/sparql'],\n    // }).then((res: any) => {\n    //   console.log(res);\n    //   res.bindingsStream.on('data', (binding: any) => {\n    //     // console.log(binding.get('?s').value);\n    //     // console.log(binding.get('?s').termType);\n    // }); });\n\n    if (webId) {\n      createSolidFile(webId);\n    }\n\n  }, [webId])\n  // This useless array needs to be added for React to understand he needs to use the state inside\n\n  function createSolidFile(webId: string) {\n    // console.log(webId);\n    // const location = webId + \"/public/shapes-of-you/preferences.ttl\";\n    const location = webId.replace(\"profile/card#me\", \"public/shapes-of-you/preferences.ttl\");\n    // console.log('Try to create file ' + location);\n    return data[location].put();\n  }\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value, page: 1 })\n  }\n\n  const handleCheckboxes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({type_checkboxes: {...state.type_checkboxes, [event.target.name]: event.target.checked} });\n  }\n\n  const handleExpandClick = (e: any) => {\n    updateState({expanded_files: {...state.expanded_files, [e.currentTarget.name]: !state.expanded_files[e.currentTarget.name]} });\n  };\n\n  // function handleAutocompleteRepositories(event: any, value: string[]) {\n  //   updateState({ repositories_autocomplete: value})\n  // }\n  // const pluralize = (count: any, noun: string, suffix = 's') =>\n  // `${count} ${noun}${parseInt(count) !== 1 ? suffix : ''}`;\n  \n  // Filtering for faceted search\n  // https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d\n  const filtered_files = state.global_shapes_array\n    .filter((repo: any) => {\n      // First filter by repo/files descriptions, the search_description field allow to search also in files at this level\n      let search_description = repo.url + ' ';\n      if (repo.description) search_description = search_description + ' ' + repo.description;\n      if (repo.search_description) search_description = search_description + ' ' + repo.search_description;\n      return search_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n    })\n    .reduce((filtered: any, repo: any) => {\n      // Then filter files in the repo\n      let filtered_repo: any = {}\n      // Filter files for search input\n      filtered_repo.files = repo.files.filter((file: any) => {\n        let search_description = repo.url + ' ';\n        if (file.label) search_description = search_description + ' ' + file.label;\n        if (file.description) search_description = search_description + ' ' + file.description;\n        if (repo.description) search_description = search_description + ' ' + repo.description;\n        // Filter depending on shape type checkboxes:\n        if ((state.type_checkboxes['ShEx'] === true && file.type == 'http://www.w3.org/ns/shex#Schema')\n        || (state.type_checkboxes['SPARQL'] === true && file.type == 'http://www.w3.org/ns/shacl#SPARQLFunction')\n        || (state.type_checkboxes['SHACL'] === true && file.type == 'http://www.w3.org/ns/shacl#Shape')\n        || (state.type_checkboxes['OWL'] === true && file.type == 'http://www.w3.org/2002/07/owl#Ontology')\n        || (state.type_checkboxes['OBO'] === true && file.type == 'http://semanticscience.org/resource/SIO_000623')\n        || (state.type_checkboxes['SKOS'] === true && file.type == 'http://www.w3.org/2004/02/skos/core#ConceptScheme')\n        || (state.type_checkboxes['R2RML'] === true && file.type == 'http://www.w3.org/ns/r2rml#TriplesMap')\n        || (state.type_checkboxes['RML'] === true && file.type == 'http://semweb.mmlab.be/ns/rml#LogicalSource')\n        || (state.type_checkboxes['OpenAPI'] === true && file.type == 'https://schema.org/APIReference')\n        || (state.type_checkboxes['DCAT'] === true && file.type == 'http://www.w3.org/ns/dcat#Dataset')\n        || (state.type_checkboxes['Nanopub'] === true && file.type == 'https://w3id.org/np/o/ntemplate/AssertionTemplate')\n        || (state.type_checkboxes['CSVW'] === true && file.type == 'http://www.w3.org/ns/csvw#Schema')\n        ) {\n          if (state.search && !state.search_repos_only) {\n            return search_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n          } else {\n            // If no search text provided, we only filter by type \n            return true\n          }\n        }\n      });\n      filtered_repo.url = repo.url;\n      if (repo.description) filtered_repo.description = repo.description;\n      filtered.push(filtered_repo)\n      return filtered;\n    }, [])\n    .filter((repo: any) => {\n      // Remove repos with no files\n      if (repo.files.length > 0) {\n        return true\n      } else {\n        return false\n      }\n    });\n\n  // Define rendering of the page:\n  return(\n    <Container style={{marginTop: theme.spacing(4), marginBottom: theme.spacing(3)}}>\n      <Alert severity=\"warning\" style={{marginBottom: theme.spacing(2)}}>\n        Shapes of You is currently under active development. Be patient when it loads the data (especially the 60k files on the main page). \n        And feel free to <a href=\"https://github.com/vemonet/shapes-of-you/issues\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">create new issues</a> if you think of improvements or want to notify us about a problem!\n      </Alert>\n\n      <About />\n\n      <LoggedIn>\n        <Typography style={{textAlign: 'center', margin: theme.spacing(2, 2)}}>\n          Welcome to your semantic resources index <Value src=\"user.name\"/>!\n        </Typography>\n        {/* <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          {webId}\n        </Typography> */}\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          Hopefully, soon you will be able to bookmark your favourites resources using your SOLID account! 🔖\n        </Typography>\n      </LoggedIn>\n\n      { state.repos_overview_chart['datasets'] && state.files_overview_chart['datasets'] &&\n        <Grid container spacing={3} style={{textAlign: 'center', marginTop: theme.spacing(2)}}>\n          <Grid item xs={12} md={6}>\n            <Paper style={{padding: theme.spacing(2, 2)}}>\n              <Typography variant=\"h6\" style={{marginBottom: theme.spacing(1)}}>Number of repositories per resource type</Typography>\n              <Bar data={state.repos_overview_chart} \n                options={chart_options(state.repos_overview_chart['datasets'][0]['data'])}\n                plugins={[ChartDataLabels]}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Paper style={{padding: theme.spacing(2, 2)}}>\n              <Typography variant=\"h6\" style={{marginBottom: theme.spacing(1)}}>Number of files per resource type</Typography>\n              <Bar data={state.files_overview_chart} options={chart_options(state.files_overview_chart['datasets'][0]['data'])}/>\n            </Paper>\n          </Grid>\n        </Grid>\n      }\n\n      <Paper elevation={6} style={{padding: theme.spacing(3, 2), margin: theme.spacing(3, 0)}}>\n        <Typography variant=\"h5\">\n          {filtered_files.reduce((filtered: any, repo: any) => filtered + repo.files.length, 0)} files in&nbsp;\n          {Object.keys(filtered_files).length} repositories \n        </Typography>\n\n        {/* Filtering options */}\n        <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}>\n          {/* Search box */}\n          <Paper component=\"form\" className={classes.paperSearch}>\n            <InputBase\n              className={classes.searchInput} inputProps={{ 'aria-label': 'search input' }}\n              placeholder={\"🔎 Quick search\"}\n              onChange={searchChange}\n            />\n            <IconButton aria-label=\"search button\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n\n          <TextField\n            id=\"shapes-per-page\"\n            value={state.shapes_per_page}\n            onChange={(e: any) => {updateState({shapes_per_page: e.target.value})}}\n            label=\"Repos per page\"\n            type=\"number\"\n            variant=\"outlined\"\n            // style={{ backgroundColor: '#ffffff' }}\n          />\n        </Box>\n\n        {/* Display checkboxes to filter on shape type */}\n        <FormGroup style={{marginTop: theme.spacing(2)}} row>\n          {Object.keys(state.type_checkboxes).map((checkbox: any, key: number) => {\n            return <FormControlLabel key={key}\n              control={\n                <Checkbox\n                  checked={state.type_checkboxes[checkbox]}\n                  onChange={handleCheckboxes}\n                  name={checkbox}\n                  color=\"primary\"\n                /> }\n              label={checkbox}\n            />\n          })}\n          {/* Button to check and uncheck all checkboxes */}\n          <Button size=\"small\" variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}\n            onClick={() => {\n              let checkboxes: any = {}\n              Object.keys(state.type_checkboxes).map((type: any) => {\n                checkboxes[type] = false;\n              })\n              updateState({ type_checkboxes: checkboxes });\n            }}>\n            <CheckBoxOutlineBlankIcon />&nbsp;\n            Uncheck all\n          </Button>\n          <Button size=\"small\" variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}\n            onClick={() => {\n              let checkboxes: any = {}\n              Object.keys(state.type_checkboxes).map((type: any) => {\n                checkboxes[type] = true;\n              })\n              updateState({ type_checkboxes: checkboxes });\n            }}>\n            <CheckBoxIcon />&nbsp;\n            Check all\n          </Button>\n          <FormControlLabel control={\n              <Checkbox\n                checked={state.search_repos_only}\n                onChange={() => { updateState({ search_repos_only: !state.search_repos_only }); }}\n                name='search_repos_only'\n                color=\"primary\"\n              /> }\n            label={\"Disable file filter ☕️ \"}\n          />\n        </FormGroup>\n      </Paper>\n\n      {Object.keys(state.global_shapes_array).length < 1 && (\n        <div style={{textAlign: 'center', padding: theme.spacing(10, 10)}}>\n          <Typography variant='body1' style={{marginBottom: theme.spacing(2)}}>\n            It usually takes between 10 and 30 seconds to retrieve resources\n          </Typography>\n          <CircularProgress />\n        </div>\n      )}\n\n      {/* Display Shapes files */}\n      {filtered_files\n          .slice(((state.page - 1)*(state.shapes_per_page)), ((state.page)*(state.shapes_per_page) - 1))\n          .map(function(repo_obj: any, key: number){\n        return <Card key={key.toString()} elevation={2} style={{padding: theme.spacing(1, 1), margin: theme.spacing(2, 0)}}>\n          <CardContent style={{paddingBottom: theme.spacing(0), margin: theme.spacing(0, 0)}}>\n            <Typography >\n              <a href={repo_obj.url} className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                📁&nbsp;{repo_obj.url.replace('https://github.com/', '')}\n              </a>\n              {repo_obj.description &&\n                <>\n                  &nbsp;-&nbsp;{repo_obj.description}\n                </>\n              }\n            </Typography>\n\n          </CardContent>\n\n          <CardActions disableSpacing style={{padding: theme.spacing(0, 1), margin: theme.spacing(0, 0)}}>\n            <IconButton style={{fontSize: '16px'}}\n              onClick={handleExpandClick}\n              name={repo_obj.url}\n              aria-expanded={state.expanded_files[repo_obj.url]}\n              aria-label=\"show about\"\n            >\n              {repo_obj.files.length} files\n              {!state.expanded_files[repo_obj.url] &&\n                <ExpandMoreIcon />\n              }\n              {state.expanded_files[repo_obj.url] &&\n                <ExpandLessIcon />\n              }\n            </IconButton>\n          </CardActions>\n\n          <Collapse in={state.expanded_files[repo_obj.url]} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              {/* TODO: also filter files? */}\n              {repo_obj.files.map(function(file_obj: any, key: number){\n                return <Card key={key.toString()} style={{padding: theme.spacing(1, 1), margin: theme.spacing(1, 0)}}>\n                  <Typography style={{margin: theme.spacing(1, 0)}}>\n                    <a href={file_obj.url} className={classes.link}>\n                      {/* {getFileLabel(file_obj.type)} */}\n                      <Chip label={shape_types_mappings[file_obj.type]}/> {file_obj.label}\n                    </a>\n                    <QueryYasguiButton endpoint={file_obj.sparqlEndpoint} query={file_obj.query} />\n                    {file_obj.description &&\n                      // Limit description to 1500 chars\n                      <div style={{margin: theme.spacing(1, 0)}}>\n                        <ReactMarkdown \n                          source={file_obj.description.substring(0, 1000)}\n                          renderers={{ paragraph: Typography }}\n                        />\n                      </div>\n\n                    }\n                  </Typography>\n                </Card>\n              })}\n            </CardContent>\n          </Collapse>\n\n          {/* Older codeblocks to get shapes for each files */}\n          {/* <Typography variant=\"h6\">\n            File:&nbsp;\n            <b><a href={project.shapeFileUri} className={classes.link}>{project.label}</a></b>\n            {project.query && project.sparqlEndpoint &&\n              // Add YASGUI link if relevant\n              // https://yasgui.triply.cc/#query=  &endpoint=\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query) + '&endpoint=' + project.sparqlEndpoint}\n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SendIcon />\n                  &nbsp;Query on YASGUI\n                </Button>\n              </a>\n            }\n            {project.query && !project.sparqlEndpoint &&\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query)} \n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SearchIcon />\n                  &nbsp;See on YASGUI\n                </Button>\n              </a>\n            }\n            <LoggedIn>\n              <Like object={project.shapeFileUri}>the Shape</Like>\n            </LoggedIn>\n          </Typography>\n          {project.shape_file_description &&\n            <Typography style={{fontStyle: 'italic', margin: theme.spacing(1, 0)}}>\n              {project.shape_file_description}\n            </Typography>\n          }\n          {project.shapes &&\n            <>\n              <Typography style={{marginTop: theme.spacing(1)}}>\n                Contains {pluralize(project.shapes.length, 'Shape')}:\n              </Typography>\n              {project.shapes.map((shapeLabel: string, key: number) => {\n                // Limit shape label size to 150 chars\n                return <Chip label={shapeLabel} color='primary' key={key.toString()}\n                    style={{margin: theme.spacing(1, 1)}}/>\n                // <Tooltip title={shapeLabel} key={key.toString()}>\n                // </Tooltip>\n              })}\n            </>\n          } */}\n\n          {/* Alert for PWA */}\n          {/* {state.show_pwa_alert &&\n          <Alert onClose={() => {updateState({ show_pwa_alert: false}) }} style={{marginBottom: theme.spacing(2)}}> \n            This web page is a Progressive Web App (PWA), it can be installed as a regular smartphone app, or desktop app on a laptop in a simple click! \n            <br/>On Google Chrome click the + button to the right in the URL bar. Checkout <a href=\"https://medium.com/progressivewebapps/how-to-install-a-pwa-to-your-device-68a8d37fadc1\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">this article for more details</a> about installing on various platforms.\n          </Alert>\n          } */}\n\n          {/* Autocomplete to filter by repositories or resource type */}\n          {/* <Autocomplete\n            multiple\n            value={state.repositories_autocomplete}\n            onChange={handleAutocompleteRepositories}\n            id=\"autocomplete-repositories\"\n            options={state.repositories_hash.filter( (repo: any) =>{ return (filtered_repos.indexOf(repo.label) > -1) })\n              .map((option: any) => option.label+ \",\" + option.count + \",\" + option.description)}\n            getOptionLabel={(option) => option.split(\",\")[0].replace('https://github.com/', '')}\n            renderOption={(option: any) => (\n              <React.Fragment>\n                {option.split(\",\")[0].replace('https://github.com/', '')} ({option.split(\",\")[1]} files) \n                {option.split(\",\")[2] && \n                  <React.Fragment>\n                    &nbsp;- {option.split(\",\")[2]}\n                  </React.Fragment>\n                }\n              </React.Fragment>\n            )}\n            renderInput={params => <TextField {...params} \n              label=\"📁 Filter by repositories\" \n              variant=\"outlined\" \n              // style={{ backgroundColor: '#ffffff' }}\n              // onInputChange={handleAutocompleteRepositories}\n              // size='small'\n              // InputProps={{\n              //   className: classes.whiteColor\n              // }}\n              // ListboxProps={{\n              //   className: classes.whiteColor,\n              // }}\n              // getOptionLabel={option => option.title}\n              // style={{ width: '60ch' }}\n            />}\n          /> */}\n        </Card>\n      })}\n      <Pagination count={Math.floor(Object.keys(filtered_files).length / state.shapes_per_page) + 1} \n        color=\"primary\" onChange={(event,val)=> updateState({page: val})} \n        style={{ display:'flex', justifyContent: 'center' }}\n      />\n    </Container>\n  )\n}\n\n// SPARQL select query to get all shapes files without the list of their shapes (much faster)\nconst getFilesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        schema:codeRepository ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri rdfs:comment ?shape_file_description }\n}`\n\n// SPARQL select query to get all shapes files and the list of their shapes\nconst getShapesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        schema:codeRepository ?repository ;\n        dcterms:hasPart ?shapes .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri rdfs:comment ?shape_file_description }\n}`\n// } LIMIT 1000`\n\n// SPARQL select query to get all GitHub repos, their description and the count of shapes file in it\nconst countRepositoriesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nSELECT ?repository (count(?shapeFileUri) AS ?shapeFileCount) ?repo_description WHERE { \n  ?shapeFileUri a <https://schema.org/SoftwareSourceCode> ;\n    rdfs:label ?label ;\n    schema:codeRepository ?repository .\n  OPTIONAL { ?repository rdfs:comment ?repo_description }\n} GROUP BY ?repository ?repo_description\n`\n\n// SPARQL select query which returns the count of repositories and shapes files per semantic resources types\nconst sparql_resources_overview = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT ?shape_type (count(distinct ?repository) AS ?repos_count) (count(distinct ?shape_file) AS ?files_count)\nWHERE { \n    ?shape_file a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        schema:codeRepository ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n} GROUP BY ?shape_type\n`\n\nfunction chart_options(data_array: any) {\n  return {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          // suggestedMax: Math.max(...data_array) + 50\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    // maintainAspectRatio: false,\n    plugins: {\n      datalabels: {\n        display: true,\n        color: 'black'\n      },\n      // labels: {\n      //   // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'\n      //   render: 'value',\n      //   overlap: true,\n      //   // fontSize: 12,\n\n      //   // font color, can be color array for each data or function for dynamic color, default is defaultFontColor\n      //   // fontColor: '#fff',\n      //   // // draw text shadows under labels, default is false\n      //   // textShadow: true,\n      //   // text shadow intensity, default is 6\n      //   // shadowBlur: 10,\n      //   // // text shadow X offset, default is 3\n      //   // shadowOffsetX: -5,\n      //   // // text shadow Y offset, default is 3\n      //   // shadowOffsetY: 5,\n      //   // // text shadow color, default is 'rgba(0,0,0,0.3)'\n      //   // shadowColor: 'rgba(255,0,0,0.75)',\n      //   // position to draw label, available value is 'default', 'border' and 'outside'\n      //   // bar chart ignores this\n      //   // default is 'default'\n      //   position: 'border',\n\n      //   // set images when `render` is 'image'\n      //   // images: [\n      //   //   {\n      //   //     src: 'image.png',\n      //   //     width: 16,\n      //   //     height: 16\n      //   //   }\n      //   // ]\n      // }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}