{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vemonet/develop/shapes-of-you/website/src/pages/Yasgui.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, Typography, Paper, CircularProgress } from \"@material-ui/core\";\nimport axios from 'axios';\nimport 'datatables.net-dt/css/jquery.dataTables.min.css';\n\nvar $ = require('jquery');\n\n$.DataTable = require('datatables.net');\nimport Yasgui from \"@triply/yasgui\";\nimport \"@triply/yasgui/build/yasgui.min.css\";\nimport Config from \"../components/Config\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    margin: {\n      marginTop: theme.spacing(2),\n      marginBottom: theme.spacing(2)\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        color: theme.palette.secondary.main,\n        textDecoration: 'none'\n      }\n    },\n    paperPadding: {\n      padding: theme.spacing(2, 2),\n      margin: theme.spacing(2, 0)\n    }\n  };\n});\nexport default function YasguiPage(props) {\n  var _this = this;\n\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState({\n    entities_relations_overview_results: [],\n    loadingMetadata: true\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var stateRef = React.useRef(state);\n  var updateState = React.useCallback(function (update) {\n    stateRef.current = _objectSpread(_objectSpread({}, stateRef.current), update);\n    setState(stateRef.current);\n  }, [setState]);\n\n  function shortenUri(uriToShorten) {\n    for (var prefix in Config.prefix_registry) {\n      if (uriToShorten.startsWith(Config.prefix_registry[prefix])) {\n        return uriToShorten.replace(Config.prefix_registry[prefix], prefix + ':');\n      }\n    }\n\n    return uriToShorten;\n  }\n\n  React.useEffect(function () {\n    if (props.endpoint) {\n      axios.get(Config.sparql_endpoint + \"?query=\" + encodeURIComponent(entities_relations_query.replace('?_metadataGraph', props.endpoint))).then(function (res) {\n        if (res.data.results && res.data.results.bindings.length > 0) {\n          updateState({\n            entities_relations_overview_results: res.data.results.bindings\n          });\n          updateState({\n            loadingMetadata: false\n          });\n          $('#datatableEntitiesRelationOverview').DataTable({\n            \"autoWidth\": false\n          });\n        } else {\n          axios.get(Config.sparql_endpoint + \"?query=\" + encodeURIComponent(entities_query.replace('?_metadataGraph', props.endpoint))).then(function (res) {\n            updateState({\n              loadingMetadata: false\n            });\n\n            if (res.data.results) {\n              updateState({\n                entities_relations_overview_results: res.data.results.bindings\n              });\n              $('#datatableEntitiesRelationOverview').DataTable({\n                \"autoWidth\": false\n              });\n            }\n          }).catch(function (error) {\n            updateState({\n              loadingMetadata: false\n            });\n            console.log(error);\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n\n    if (props.endpoint && props.query) {\n      var sparql_endpoint = props.endpoint;\n      Yasgui.defaults.requestConfig.endpoint = sparql_endpoint;\n      var yasgui = new Yasgui(document.getElementById('yasguiDiv'), {\n        requestConfig: {\n          endpoint: sparql_endpoint\n        },\n        copyEndpointOnNewTab: true\n      });\n      yasgui.addTab(true, _objectSpread(_objectSpread({}, Yasgui.Tab.getDefaults()), {}, {\n        yasqe: {\n          value: props.query\n        }\n      }));\n      window.scrollTo(0, 0);\n    } else if (props.endpoint) {\n      var _sparql_endpoint = props.endpoint;\n      var get_sparql_endpoints_query = \"PREFIX schema: <https://schema.org/>\\n        PREFIX void: <http://rdfs.org/ns/void#>\\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\n        SELECT DISTINCT * WHERE { \\n          ?sparql_endpoint a schema:EntryPoint .\\n          ?query_file void:sparqlEndpoint ?sparql_endpoint ;\\n            rdfs:label ?file_label ;\\n            schema:query ?query .\\n          FILTER (?sparql_endpoint = <\" + _sparql_endpoint + \">)\\n          OPTIONAL { ?query_file rdfs:comment ?file_description }\\n        }\";\n      var endpointToQuery = Config.sparql_endpoint;\n      axios.get(endpointToQuery + \"?query=\" + encodeURIComponent(get_sparql_endpoints_query)).then(function (res) {\n        Yasgui.defaults.requestConfig.endpoint = _sparql_endpoint;\n        var yasgui = new Yasgui(document.getElementById('yasguiDiv'), {\n          requestConfig: {\n            endpoint: _sparql_endpoint\n          },\n          copyEndpointOnNewTab: true\n        });\n        var results_array = res.data.results.bindings;\n        var queries_obj = {};\n        results_array.map(function (result) {\n          queries_obj[result.file_label.value] = result.query.value;\n        });\n\n        if (Object.keys(yasgui._tabs).length > 1) {\n          Object.keys(yasgui._tabs).map(function (tab_id) {\n            var tab = yasgui.getTab(tab_id);\n            tab.close();\n          });\n        }\n\n        Object.keys(queries_obj).map(function (file_label) {\n          yasgui.addTab(true, _objectSpread(_objectSpread({}, Yasgui.Tab.getDefaults()), {}, {\n            name: file_label.substring(0, 30),\n            yasqe: {\n              value: queries_obj[file_label]\n            }\n          }));\n        });\n        window.scrollTo(0, 0);\n      }).catch(function (error) {\n        console.log(error);\n      });\n    } else if (props.query) {\n      var _yasgui = new Yasgui(document.getElementById('yasguiDiv'), {});\n\n      _yasgui.addTab(true, _objectSpread(_objectSpread({}, Yasgui.Tab.getDefaults()), {}, {\n        yasqe: {\n          value: props.query\n        }\n      }));\n\n      window.scrollTo(0, 0);\n    }\n  }, [setState]);\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 5\n    }\n  }, state.loadingMetadata && React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), Object.keys(state.entities_relations_overview_results).length > 0 && React.createElement(React.Fragment, null, React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(0)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, \"Endpoint metadata\"), React.createElement(Paper, {\n    elevation: 4,\n    className: classes.paperPadding,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, React.createElement(\"table\", {\n    id: \"datatableEntitiesRelationOverview\",\n    style: {\n      wordBreak: 'break-all'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 11\n    }\n  }, React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }, React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 15\n    }\n  }, React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 17\n    }\n  }, \"Graph\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, \"# of instance of subject\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, \"Subject class\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, \"Have relation\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, \"With Object class\"), React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, \"# of instance of object\"))), React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }\n  }, state.entities_relations_overview_results.map(function (row, key) {\n    return React.createElement(\"tr\", {\n      key: key,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 24\n      }\n    }, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, React.createElement(\"a\", {\n      href: row.graph.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 25\n      }\n    }), shortenUri(row.graph.value)), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 21\n      }\n    }, React.createElement(Typography, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, row.subjectCount.value)), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    }, React.createElement(\"a\", {\n      href: row.subject.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }), shortenUri(row.subject.value)), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, React.createElement(\"a\", {\n      href: row.predicate.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }), shortenUri(row.predicate.value)), row.object && React.createElement(React.Fragment, null, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }, React.createElement(\"a\", {\n      href: row.object.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }), shortenUri(row.object.value)), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 29\n      }\n    }, row.objectCount.value))), !row.object && React.createElement(React.Fragment, null, React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, \"No metadata\")), React.createElement(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 25\n      }\n    }, React.createElement(Typography, {\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 29\n      }\n    }, \"No metadata\"))));\n  }))))), React.createElement(Typography, {\n    variant: \"h5\",\n    style: {\n      marginBottom: theme.spacing(3),\n      marginTop: theme.spacing(4)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, \"Query with YASGUI\"), React.createElement(\"div\", {\n    id: \"yasguiDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }));\n}\nvar entities_relations_query = \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX dct: <http://purl.org/dc/terms/>\\nPREFIX bl: <http://w3id.org/biolink/vocab/>\\nPREFIX dctypes: <http://purl.org/dc/dcmitype/>\\nPREFIX idot: <http://identifiers.org/idot/>\\nPREFIX dcat: <http://www.w3.org/ns/dcat#>\\nPREFIX void: <http://rdfs.org/ns/void#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\\nPREFIX void-ext: <http://ldf.fi/void-ext#>\\nSELECT DISTINCT ?graph ?subjectCount ?subject ?predicate ?objectCount ?object\\nWHERE {\\n  GRAPH <?_metadataGraph> {\\n    ?graph void:propertyPartition ?propertyPartition . \\n    ?propertyPartition void:property ?predicate ;\\n      void:classPartition [\\n        void:class ?subject ;\\n        void:distinctSubjects ?subjectCount ;\\n      ] ;\\n      void-ext:objectClassPartition [\\n        void:class ?object ;\\n        void:distinctObjects ?objectCount ;\\n      ] .\\n  }\\n} ORDER BY DESC(?subjectCount)\";\nvar entities_query = \"PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nPREFIX dct: <http://purl.org/dc/terms/>\\nPREFIX bl: <http://w3id.org/biolink/vocab/>\\nPREFIX dctypes: <http://purl.org/dc/dcmitype/>\\nPREFIX idot: <http://identifiers.org/idot/>\\nPREFIX dcat: <http://www.w3.org/ns/dcat#>\\nPREFIX void: <http://rdfs.org/ns/void#>\\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\\nPREFIX void-ext: <http://ldf.fi/void-ext#>\\nSELECT DISTINCT ?graph ?subjectCount ?subject ?predicate ?objectCount ?object\\nWHERE {\\n  GRAPH <?_metadataGraph> {\\n    ?graph void:propertyPartition ?propertyPartition . \\n    ?propertyPartition void:property ?predicate ;\\n      void:classPartition [\\n        void:class ?subject ;\\n        void:distinctSubjects ?subjectCount ;\\n      ] .\\n  }\\n} ORDER BY DESC(?subjectCount)\";","map":{"version":3,"sources":["/home/vemonet/develop/shapes-of-you/website/src/pages/Yasgui.tsx"],"names":["React","makeStyles","useTheme","Container","Typography","Paper","CircularProgress","axios","$","require","DataTable","Yasgui","Config","useStyles","theme","margin","marginTop","spacing","marginBottom","link","textDecoration","color","palette","primary","main","secondary","paperPadding","padding","YasguiPage","props","classes","useState","entities_relations_overview_results","loadingMetadata","state","setState","stateRef","useRef","updateState","useCallback","update","current","shortenUri","uriToShorten","prefix","prefix_registry","startsWith","replace","useEffect","endpoint","get","sparql_endpoint","encodeURIComponent","entities_relations_query","then","res","data","results","bindings","length","entities_query","catch","error","console","log","query","defaults","requestConfig","yasgui","document","getElementById","copyEndpointOnNewTab","addTab","Tab","getDefaults","yasqe","value","window","scrollTo","get_sparql_endpoints_query","endpointToQuery","results_array","queries_obj","map","result","file_label","Object","keys","_tabs","tab_id","tab","getTab","close","name","substring","wordBreak","row","key","graph","subjectCount","subject","predicate","object","objectCount"],"mappings":"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","sourcesContent":["import React from \"react\";\n// import { useLocation } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, Typography, Paper, CircularProgress } from \"@material-ui/core\";\nimport axios from 'axios';\n\n// Import jquery datatables.net\nimport 'datatables.net-dt/css/jquery.dataTables.min.css'\nconst $ = require('jquery');\n$.DataTable = require('datatables.net');\n\nimport Yasgui from \"@triply/yasgui\";\nimport \"@triply/yasgui/build/yasgui.min.css\";\n\nimport Config from \"../components/Config\";\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n    // textAlign: 'center',\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 0),\n  },\n}));\n\nexport default function YasguiPage(props: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n  // useLocation hook to get URL params\n  // let location = useLocation();\n\n  const [state, setState] = React.useState({\n    entities_relations_overview_results: [],\n    loadingMetadata: true\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  function shortenUri(uriToShorten: string) {\n    for (const prefix in Config.prefix_registry) {\n      if (uriToShorten.startsWith(Config.prefix_registry[prefix])) {\n        return uriToShorten.replace(Config.prefix_registry[prefix], prefix + ':');\n      }\n    }\n    return uriToShorten;\n  }\n\n  React.useEffect(() => {\n    // Get params from URL\n    // const params = new URLSearchParams(location.search + location.hash);\n    // let sparql_endpoint: any = params.get('endpoint');\n\n    if (props.endpoint) {\n      axios.get(Config.sparql_endpoint + `?query=` + encodeURIComponent(entities_relations_query.replace('?_metadataGraph', props.endpoint)))\n      .then((res: any) => {\n        if (res.data.results && res.data.results.bindings.length > 0){\n          // Found metadata for classes relations\n          updateState( { entities_relations_overview_results: res.data.results.bindings } );\n          updateState({ loadingMetadata: false });\n          $('#datatableEntitiesRelationOverview').DataTable({\n            \"autoWidth\": false\n          });\n        } else {\n          // Get only subject class counts\n          axios.get(Config.sparql_endpoint + `?query=` + encodeURIComponent(entities_query.replace('?_metadataGraph', props.endpoint)))\n            .then((res: any) => {\n              updateState({ loadingMetadata: false });\n              if (res.data.results){\n                updateState( { entities_relations_overview_results: res.data.results.bindings } );\n                $('#datatableEntitiesRelationOverview').DataTable({\n                  \"autoWidth\": false\n                });\n              }\n            })\n            .catch(error => {\n              updateState({ loadingMetadata: false });\n              console.log(error)\n            })\n        }\n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }\n    \n    if (props.endpoint && props.query) {\n      // If endpoint and query provided we add 1 tab for this query to query this endpoint\n      const sparql_endpoint = props.endpoint\n      Yasgui.defaults.requestConfig.endpoint = sparql_endpoint;\n      // @ts-ignore If endpoint and query provided\n      let yasgui: any = new Yasgui(document.getElementById('yasguiDiv'), {\n        requestConfig: { endpoint: sparql_endpoint },\n        // endpoint: sparql_endpoint,\n        copyEndpointOnNewTab: true,\n      });\n      yasgui.addTab(\n        true, // set as active tab\n        { ...Yasgui.Tab.getDefaults(), yasqe: { value: props.query }}\n      );\n      window.scrollTo(0, 0)\n\n    } else if (props.endpoint) {\n      // If only the endpoint is provided, we import all queries for this endpoint\n      let sparql_endpoint: any = props.endpoint\n      const get_sparql_endpoints_query = `PREFIX schema: <https://schema.org/>\n        PREFIX void: <http://rdfs.org/ns/void#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        SELECT DISTINCT * WHERE { \n          ?sparql_endpoint a schema:EntryPoint .\n          ?query_file void:sparqlEndpoint ?sparql_endpoint ;\n            rdfs:label ?file_label ;\n            schema:query ?query .\n          FILTER (?sparql_endpoint = <` + sparql_endpoint + `>)\n          OPTIONAL { ?query_file rdfs:comment ?file_description }\n        }`\n      const endpointToQuery = Config.sparql_endpoint;\n      axios.get(endpointToQuery + `?query=` + encodeURIComponent(get_sparql_endpoints_query))\n        .then((res: any) => {\n          Yasgui.defaults.requestConfig.endpoint = sparql_endpoint;\n          // @ts-ignore Set YASGUI to serve all queries of the selected endpoint\n          let yasgui: any = new Yasgui(document.getElementById('yasguiDiv'), {\n            requestConfig: { endpoint: sparql_endpoint },\n            // endpoint: sparql_endpoint,\n            copyEndpointOnNewTab: true,\n          });\n\n          const results_array = res.data.results.bindings;\n          let queries_obj: any = {}\n          results_array.map((result: any): any =>  {\n            // let endpoint_obj = {'endpoint': result.sparql_endpoint.value}\n            queries_obj[result.file_label.value] = result.query.value\n          })\n          if (Object.keys(yasgui._tabs).length > 1) {\n            Object.keys(yasgui._tabs).map((tab_id: any): any =>  {\n              // console.log(tab_id);\n              let tab: any = yasgui.getTab(tab_id);\n              tab.close();\n            })\n          }\n          // let tab: any = yasgui.getTab();\n          \n          // Add tab to yasgui for each file\n          Object.keys(queries_obj).map((file_label: any) => {\n            // if (!yasgui.getTab(file_label)) {\n            yasgui.addTab(\n              true, // set as active tab\n              { ...Yasgui.Tab.getDefaults(), name: file_label.substring(0,30),\n                yasqe: { value: queries_obj[file_label] }}\n            );\n          })\n          window.scrollTo(0, 0)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n\n    } else if (props.query) {\n      // @ts-ignore Add tab if only query provided\n      let yasgui: any = new Yasgui(document.getElementById('yasguiDiv'), {});\n      yasgui.addTab(\n        true, // set as active tab\n        { ...Yasgui.Tab.getDefaults(), yasqe: { value: props.query }}\n      );\n      window.scrollTo(0, 0)\n    }\n  }, [setState])\n\n  return (\n    <Container>\n      {state.loadingMetadata && \n        <CircularProgress />\n      }\n      {Object.keys(state.entities_relations_overview_results).length > 0 && (<>\n        <Typography variant=\"h5\" style={{marginBottom: theme.spacing(3), marginTop: theme.spacing(0)}}>\n          Endpoint metadata\n        </Typography>\n        <Paper elevation={4} className={classes.paperPadding}>\n          <table id='datatableEntitiesRelationOverview' style={{ wordBreak: 'break-all' }}>\n            <thead>\n              <tr>\n                <th>Graph</th>\n                <th># of instance of subject</th>\n                <th>Subject class</th>\n                <th>Have relation</th>\n                <th>With Object class</th>\n                <th># of instance of object</th>\n              </tr>\n            </thead>\n            <tbody>\n              {/* Iterate Describe query results array */}\n              {state.entities_relations_overview_results.map((row: any, key: number) => {\n                return <tr key={key}>\n                    <td><a href={row.graph.value}/>{shortenUri(row.graph.value)}</td>\n                    <td><Typography>{row.subjectCount.value}</Typography></td>\n                    <td><a href={row.subject.value} />{shortenUri(row.subject.value)}</td>\n                    <td><a href={row.predicate.value} />{shortenUri(row.predicate.value)}</td>\n                    {row.object && (\n                      <>\n                        <td><a href={row.object.value} />{shortenUri(row.object.value)}</td>\n                        <td><Typography variant=\"body2\">{row.objectCount.value}</Typography></td>\n                      </>\n                    )}\n                    {!row.object && (\n                      <>\n                        <td><Typography variant=\"body2\">No metadata</Typography></td>\n                        <td><Typography variant=\"body2\">No metadata</Typography></td>\n                      </>\n                    )}\n                  </tr>\n              })}\n            </tbody>\n          </table>\n        </Paper>\n      </>)}\n      \n      <Typography variant=\"h5\" style={{marginBottom: theme.spacing(3), marginTop: theme.spacing(4)}}>\n        Query with YASGUI \n      </Typography>\n\n      <div id=\"yasguiDiv\"></div>\n    </Container>\n  )\n}\n\nconst entities_relations_query = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX bl: <http://w3id.org/biolink/vocab/>\nPREFIX dctypes: <http://purl.org/dc/dcmitype/>\nPREFIX idot: <http://identifiers.org/idot/>\nPREFIX dcat: <http://www.w3.org/ns/dcat#>\nPREFIX void: <http://rdfs.org/ns/void#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX void-ext: <http://ldf.fi/void-ext#>\nSELECT DISTINCT ?graph ?subjectCount ?subject ?predicate ?objectCount ?object\nWHERE {\n  GRAPH <?_metadataGraph> {\n    ?graph void:propertyPartition ?propertyPartition . \n    ?propertyPartition void:property ?predicate ;\n      void:classPartition [\n        void:class ?subject ;\n        void:distinctSubjects ?subjectCount ;\n      ] ;\n      void-ext:objectClassPartition [\n        void:class ?object ;\n        void:distinctObjects ?objectCount ;\n      ] .\n  }\n} ORDER BY DESC(?subjectCount)`\n\n\nconst entities_query = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dct: <http://purl.org/dc/terms/>\nPREFIX bl: <http://w3id.org/biolink/vocab/>\nPREFIX dctypes: <http://purl.org/dc/dcmitype/>\nPREFIX idot: <http://identifiers.org/idot/>\nPREFIX dcat: <http://www.w3.org/ns/dcat#>\nPREFIX void: <http://rdfs.org/ns/void#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX foaf: <http://xmlns.com/foaf/0.1/>\nPREFIX void-ext: <http://ldf.fi/void-ext#>\nSELECT DISTINCT ?graph ?subjectCount ?subject ?predicate ?objectCount ?object\nWHERE {\n  GRAPH <?_metadataGraph> {\n    ?graph void:propertyPartition ?propertyPartition . \n    ?propertyPartition void:property ?predicate ;\n      void:classPartition [\n        void:class ?subject ;\n        void:distinctSubjects ?subjectCount ;\n      ] .\n  }\n} ORDER BY DESC(?subjectCount)`\n"]},"metadata":{},"sourceType":"module"}