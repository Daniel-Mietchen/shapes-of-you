{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/vemonet/develop/shapes-of-you/website/src/pages/SparqlEndpointsList.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container, CircularProgress, Typography, Paper, InputBase, IconButton, Box } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\nimport Config from \"../components/Config\";\nimport QueryYasguiButton from \"../components/QueryYasguiButton\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    paperSearch: {\n      padding: '2px 4px',\n      display: 'flex',\n      alignItems: 'center',\n      width: '35ch',\n      marginLeft: theme.spacing(3)\n    },\n    searchInput: {\n      marginLeft: theme.spacing(1),\n      fontSize: '16px',\n      flex: 1\n    },\n    link: {\n      textDecoration: 'none',\n      color: theme.palette.primary.main,\n      '&:hover': {\n        color: theme.palette.secondary.main,\n        textDecoration: 'none'\n      }\n    }\n  };\n});\nexport default function SparqlEndpointsList() {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  var _React$useState = React.useState({\n    sparql_endpoints_array: [],\n    search: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var stateRef = React.useRef(state);\n  var updateState = React.useCallback(function (update) {\n    stateRef.current = _objectSpread(_objectSpread({}, stateRef.current), update);\n    setState(stateRef.current);\n  }, [setState]);\n\n  var searchChange = function searchChange(event) {\n    updateState({\n      search: event.target.value\n    });\n  };\n\n  React.useEffect(function () {\n    var endpointToQuery = Config.sparql_endpoint;\n    axios.get(endpointToQuery + \"?query=\" + encodeURIComponent(get_sparql_endpoints_query)).then(function (res) {\n      var results_array = res.data.results.bindings;\n      var sparql_endpoints_array = [];\n      results_array.map(function (result) {\n        var endpoint_url = result.sparql_endpoint.value;\n        var endpoint_index = sparql_endpoints_array.findIndex(function (obj) {\n          return obj.url == endpoint_url;\n        });\n\n        if (endpoint_index == -1) {\n          endpoint_index = sparql_endpoints_array.push({\n            'url': endpoint_url,\n            'queries_count': result.queries_count.value,\n            'datasets_graph_count': result.datasets_graph_count.value\n          }) - 1;\n        }\n      });\n      updateState({\n        sparql_endpoints_array: sparql_endpoints_array\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n  }, []);\n  var filtered_endpoints = state.sparql_endpoints_array.filter(function (endpoint) {\n    return endpoint.url.toLowerCase().indexOf(state.search.toLowerCase()) !== -1;\n  });\n  return React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 5\n    }\n  }, state.sparql_endpoints_array.length < 1 && React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, React.createElement(CircularProgress, {\n    style: {\n      padding: theme.spacing(10, 10)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  })), state.sparql_endpoints_array.length >= 1 && React.createElement(React.Fragment, null, React.createElement(Box, {\n    display: \"flex\",\n    style: {\n      margin: theme.spacing(2, 0)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, React.createElement(Typography, {\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, filtered_endpoints.length, \" active SPARQL endpoints\"), React.createElement(Paper, {\n    component: \"form\",\n    className: classes.paperSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, React.createElement(InputBase, {\n    className: classes.searchInput,\n    inputProps: {\n      'aria-label': 'search input'\n    },\n    placeholder: \"ðŸ”Ž Quick search\",\n    onChange: searchChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 15\n    }\n  }), React.createElement(IconButton, {\n    \"aria-label\": \"search button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  })))), React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, filtered_endpoints.sort(function (a, b) {\n    return b.queries_count - a.queries_count;\n  }).map(function (sparql_endpoint, key) {\n    return React.createElement(ListItem, {\n      key: key,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 22\n      }\n    }, React.createElement(ListItemAvatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, React.createElement(QueryYasguiButton, {\n      endpoint: sparql_endpoint.url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    })), React.createElement(ListItemText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 19\n      }\n    }, React.createElement(\"a\", {\n      href: sparql_endpoint.url,\n      className: classes.link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 22\n      }\n    }, sparql_endpoint.url)), sparql_endpoint.queries_count > 0 && React.createElement(React.Fragment, null, \"\\xA0- \", sparql_endpoint.queries_count, \" SPARQL queries\"), sparql_endpoint.datasets_graph_count > 1 && React.createElement(React.Fragment, null, \"\\xA0- Metadata computed for \", React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 53\n      }\n    }, sparql_endpoint.datasets_graph_count), \" graphs\")));\n  }))));\n}\nvar get_sparql_endpoints_query = \"PREFIX schema: <https://schema.org/>\\nPREFIX void: <http://rdfs.org/ns/void#>\\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\\nSELECT DISTINCT ?sparql_endpoint (count(distinct ?query_file) AS ?queries_count) (count(distinct ?datasets_graph) AS ?datasets_graph_count)\\nWHERE { \\n  ?sparql_endpoint a schema:EntryPoint .\\n  OPTIONAL {\\n    ?query_file void:sparqlEndpoint ?sparql_endpoint ;\\n      schema:query ?query\\n  }\\n  OPTIONAL {\\n    GRAPH ?sparql_endpoint {\\n      ?datasets_graph a void:Dataset .\\n      FILTER EXISTS { ?datasets_graph void:propertyPartition ?propertyPartition . }\\n    } \\n  }\\n} GROUP BY ?sparql_endpoint ORDER BY DESC(?queries_count) DESC(?datasets_graph_count)\\n\";","map":{"version":3,"sources":["/home/vemonet/develop/shapes-of-you/website/src/pages/SparqlEndpointsList.tsx"],"names":["React","makeStyles","useTheme","Container","CircularProgress","Typography","Paper","InputBase","IconButton","Box","List","ListItem","ListItemAvatar","ListItemText","SearchIcon","axios","Config","QueryYasguiButton","useStyles","theme","paperSearch","padding","display","alignItems","width","marginLeft","spacing","searchInput","fontSize","flex","link","textDecoration","color","palette","primary","main","secondary","SparqlEndpointsList","classes","useState","sparql_endpoints_array","search","state","setState","stateRef","useRef","updateState","useCallback","update","current","searchChange","event","target","value","useEffect","endpointToQuery","sparql_endpoint","get","encodeURIComponent","get_sparql_endpoints_query","then","res","results_array","data","results","bindings","map","result","endpoint_url","endpoint_index","findIndex","obj","url","push","queries_count","datasets_graph_count","catch","error","console","log","filtered_endpoints","filter","endpoint","toLowerCase","indexOf","length","textAlign","margin","sort","a","b","key"],"mappings":"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","sourcesContent":["  import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Container, CircularProgress, Typography, Paper, InputBase, IconButton, Box } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\n\nimport Config from \"../components/Config\";\nimport QueryYasguiButton from \"../components/QueryYasguiButton\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginLeft: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SparqlEndpointsList() {\n  const classes = useStyles();\n  const theme = useTheme();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    sparql_endpoints_array: [],\n    search: '',\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value })\n  }\n\n  // At start: query SPARQL endpoint to get the SPARQL endpoints infos\n  React.useEffect(() => {\n    const endpointToQuery = Config.sparql_endpoint;\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(get_sparql_endpoints_query))\n      .then(res => {\n        const results_array = res.data.results.bindings;\n        let sparql_endpoints_array: any = []\n        // let sparql_endpoints_obj: any = {}\n        results_array.map((result: any): any =>  {\n        //   // @ts-ignore\n        //   // sparql_endpoints_array.push([{\n        //   //   'endpoint': result.sparql_endpoint.value\n        //   // }]);\n          const endpoint_url = result.sparql_endpoint.value\n        //   if (!sparql_endpoints_obj[endpoint_url]) {\n        //     sparql_endpoints_obj[endpoint_url] = {\n        //       'url': endpoint_url,\n        //       'queries_count': result.queries_count.value,\n        //       'datasets_graph_count': result.datasets_graph_count.value\n        //     }\n        //   }\n\n          // TODO: use array\n          let endpoint_index = sparql_endpoints_array.findIndex(((obj: any) => obj.url == endpoint_url));\n          if (endpoint_index == -1) {\n            // Add endpoint to array if not present\n            endpoint_index = sparql_endpoints_array.push({\n              'url': endpoint_url,\n              'queries_count': result.queries_count.value,\n              'datasets_graph_count': result.datasets_graph_count.value\n            }) - 1\n          }\n\n          // let query_obj = {'url': result.query_file.value}\n          // if (result.file_description) query_obj['description'] = result.file_description.value\n          // if (result.query) query_obj['query'] = result.query.value\n          // sparql_endpoints_obj[endpoint_url]['queries'].push(query_obj)\n        })\n        updateState({ sparql_endpoints_array: sparql_endpoints_array })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n  \n  const filtered_endpoints = state.sparql_endpoints_array\n    .filter((endpoint: any) => {\n      return endpoint.url.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n    })\n\n  // Define rendering of the page:\n  return(\n    <Container>\n      {state.sparql_endpoints_array.length < 1 && (\n        <div style={{textAlign: 'center'}}>\n          <CircularProgress style={{padding: theme.spacing(10, 10)}} />\n        </div>\n      )}\n\n      {state.sparql_endpoints_array.length >= 1 && (\n        <>\n          <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}>\n            <Typography variant='body1'>\n              {filtered_endpoints.length} active SPARQL endpoints\n            </Typography>\n\n            <Paper component=\"form\" className={classes.paperSearch}>\n              <InputBase\n                className={classes.searchInput} inputProps={{ 'aria-label': 'search input' }}\n                placeholder={\"ðŸ”Ž Quick search\"}\n                onChange={searchChange}\n              />\n              <IconButton aria-label=\"search button\">\n                <SearchIcon />\n              </IconButton>\n            </Paper>\n          </Box>\n\n          <List>\n            {filtered_endpoints\n              .sort((a: any, b: any): number => {\n                // state.sparql_endpoints_obj[a].datasets_graph_count - state.sparql_endpoints_obj[b].datasets_graph_count;\n                return b.queries_count - a.queries_count;\n              })\n              .map(function(sparql_endpoint: any, key: number){\n              return <ListItem key={key}>\n                <ListItemAvatar>\n                  <QueryYasguiButton endpoint={sparql_endpoint.url} />\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href={sparql_endpoint.url} className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">{sparql_endpoint.url}</a></b>\n                  {sparql_endpoint.queries_count > 0 &&\n                    <>\n                      &nbsp;- {sparql_endpoint.queries_count} SPARQL queries\n                    </>\n                  }\n                  {sparql_endpoint.datasets_graph_count > 1 &&\n                    <>\n                      &nbsp;- Metadata computed for <b>{sparql_endpoint.datasets_graph_count}</b> graphs\n                    </>\n                  }\n                </ListItemText>\n              </ListItem>\n              })\n            }\n          </List>\n        </>\n      )}\n    </Container>\n  )\n}\n\n// SPARQL select query which returns the count of repositories and shapes files per semantic resources types\nconst get_sparql_endpoints_query = `PREFIX schema: <https://schema.org/>\nPREFIX void: <http://rdfs.org/ns/void#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT ?sparql_endpoint (count(distinct ?query_file) AS ?queries_count) (count(distinct ?datasets_graph) AS ?datasets_graph_count)\nWHERE { \n  ?sparql_endpoint a schema:EntryPoint .\n  OPTIONAL {\n    ?query_file void:sparqlEndpoint ?sparql_endpoint ;\n      schema:query ?query\n  }\n  OPTIONAL {\n    GRAPH ?sparql_endpoint {\n      ?datasets_graph a void:Dataset .\n      FILTER EXISTS { ?datasets_graph void:propertyPartition ?propertyPartition . }\n    } \n  }\n} GROUP BY ?sparql_endpoint ORDER BY DESC(?queries_count) DESC(?datasets_graph_count)\n`\n"]},"metadata":{},"sourceType":"module"}