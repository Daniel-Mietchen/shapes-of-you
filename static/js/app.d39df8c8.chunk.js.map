{"version":3,"sources":["assets/icon.png","src/NavBar.tsx","src/Footer.tsx","src/ShapeRegistry.tsx","src/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/shapes-of-you/shapes-of-you/App.css?048e","App.css"],"names":["module","exports","useStyles","makeStyles","theme","menuButton","color","palette","common","white","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","href","target","Button","darkLink","primary","light","whiteLink","dark","footer","padding","spacing","marginTop","backgroundColor","main","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","paperSearch","searchInput","marginLeft","fontSize","flex","link","cardSubtitle","pos","ShapeRegistry","React","useState","projects_list","search","repositories_hash","category_pie","state","setState","stateRef","useRef","updateState","useCallback","update","current","pluralize","count","noun","suffix","parseInt","useEffect","endpointToQuery","console","log","axios","get","encodeURIComponent","getShapesQuery","then","res","projects_converted_hash","data","results","bindings","projects_hash","Object","keys","forEach","project","projectName","shapes","property","propertyHash","push","value","project_final_array","map","key","catch","error","countRepositoriesQuery","result","repository","shapeFileCount","filteredProjects","filter","label","toLowerCase","indexOf","shapeFileUri","join","marginBottom","length","Grid","container","repo","item","xs","Paper","elevation","replace","Box","component","InputBase","inputProps","placeholder","onChange","event","IconButton","aria-label","toString","shapeLabel","Chip","margin","gitUrl","settingsForm","saveButton","fullWidth","normalFont","smallerFont","alignLeft","paperPadding","paperTitle","fontWeight","About","open","dialogOpen","project_license","language_autocomplete","nodes","id","x","y","name","image","story","edges","source","renderNode","ProfileTemplate","createMuiTheme","secondary","typography","App","basename","View","exact","path","navigator","window","addEventListener","serviceWorker","register","scope","info","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.d39df8c8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport iconImage from '../assets/icon.png';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='IDS Projects dashboard'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        {/* <Link to=\"/create-doap\" className={classes.linkButton}>\n          <Tooltip title='Create a DOAP description for your project'>\n            <Button className={classes.menuButton}>\n              <CreateNewFolderIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <div className=\"flexGrow\"></div>\n        <a href=\"https://github.com/MaastrichtU-IDS/shapes-of-you/blob/main/FAILED_IMPORT_REPORT.md\" \n            target=\"_blank\" className={classes.linkButton}>\n          <Tooltip title='List of shapes we failed to process'>\n            <Button className={classes.menuButton}>\n              {/* <WarningIcon /> */}\n              <AssignmentIcon />\n              &nbsp;Import report\n            </Button>\n          </Tooltip>\n        </a>\n        {/* <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link>\n        <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip> */}\n        <Tooltip title='Go to https://github.com/MaastrichtU-IDS/shapes-of-you'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/shapes-of-you\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            This website is licensed under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\"\n            href=\"https://github.com/MaastrichtU-IDS/shapes-of-you/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport HomeIcon from '@material-ui/icons/Home';\nimport CloudDownloadIcon from '@material-ui/icons/CloudDownload';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport BugReportIcon from '@material-ui/icons/BugReport';\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'axios';\nimport { Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels';\n\nimport {newEngine} from '@comunica/actor-init-sparql';\nimport {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\nimport {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\n// Import UM logo from assets\n// import iconImage from '../assets/icon.png';\nimport idsLogo from '../assets/ids_logo.png';\n// import { ActionYoutubeSearchedFor } from 'material-ui/svg-icons';\n\n// import { normalize, schema } from 'normalizr';\n// import { ColorPropType } from 'react-native';\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '30%',\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    width: '50%',\n    fontSize: '14px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.main,\n      textDecoration: 'none',\n    },\n  },\n  cardSubtitle: {\n    fontSize: 14,\n    marginTop: 8,\n  },\n  pos: {\n    // marginBottom: 12,\n  },\n}))\n\nexport default function ShapeRegistry() {\n  const classes = useStyles();\n  \n  const [state, setState] = React.useState({\n    projects_list: [],\n    search: '',\n    repositories_hash: {},\n    category_pie: {}\n  });\n\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const pluralize = (count: any, noun: string, suffix = 's') =>\n    `${count} ${noun}${parseInt(count) !== 1 ? suffix : ''}`;\n\n  // componentDidMount: Query SPARQL endpoint to get the projects infos\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n    console.log(endpointToQuery);\n\n    // Query directly using Axios\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(getShapesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n        const projects_converted_hash = { ...sparqlResultArray }\n        let projects_hash: any = {}\n        // Iterate over projects\n        Object.keys(projects_converted_hash).forEach(function(project) {\n          const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n          // Use the project URI as key in the hash\n          if (!projects_hash[projectName]){\n            projects_hash[projectName] = {shapes: []}\n          }\n          // Iterate over project properties\n          Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n            const propertyHash = projects_converted_hash[project][property]\n            if (propertyHash) {\n              if (property == 'shapes') {\n                // Exception for programming language which is a list\n                projects_hash[projectName][property].push(propertyHash.value);\n              } else {\n                projects_hash[projectName][property] = propertyHash.value \n              }\n            }\n          })\n        })\n        // Convert back to array for filtering\n        const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n        // setState({...state, projects_list: project_final_array})\n        updateState({projects_list: project_final_array})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Get repositories and their files counts\n    let repositories_hash = {}\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(countRepositoriesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        sparqlResultArray.map((result: any) =>  {\n          repositories_hash[result.repository.value] = result.shapeFileCount.value;\n        });\n\n        updateState({repositories_hash: repositories_hash})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Query with the Comunica engine\n    // Not working on SPARQL endpoint, only on the examples they provide\n    // https://comunica.dev/docs/query/getting_started/query_app/\n    // const comunicaEngine = newEngine();\n    // comunicaEngine.query(`\n    //   SELECT ?s ?o WHERE {\n    //    ?s a ?o .\n    //   } LIMIT 100`, {\n    //   sources: ['https://dbpedia.org/sparql'],\n    // }).then((res: any) => {\n    //   console.log(res);\n    //   res.bindingsStream.on('data', (binding: any) => {\n    //     // console.log(binding.get('?s').value);\n    //     // console.log(binding.get('?s').termType);\n    //     // console.log(binding.get('?o').value);\n    //   });\n    // });\n\n  }, [])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setState({...state, search: event.target.value})\n  }\n\n  const filteredProjects = state.projects_list.filter( (project: any) =>{\n    if (project.label) {\n      return (project.label.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1 \n        || project.shapeFileUri.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n        || project.shapes.join(' ').toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n      )\n    }\n  })\n  console.log('Filtered project:')\n  console.log(state.projects_list);\n\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" style={{textAlign: 'center'}}>\n        💠 Shapes of You\n        {/* <img src={idsLogo} style={{maxWidth: '200px'}} alt=\"IDS Logo\" /> */}\n      </Typography>\n      <Typography style={{textAlign: 'center', marginBottom: '20px'}}>\n        Your SHACL Shapes registry\n      </Typography>\n\n      <Typography>\n        Add the tag <code>shacl-shape</code> to your GitHub repository, we will automatically index all <code>.ttl</code> and <code>.rdf</code> files containing at least one <code>sh:NodeShape</code> from your repository everyday at 1:00 and 13:00 🕐\n      </Typography>\n\n      <Typography variant=\"h5\" style={{marginTop: '25px'}}>\n        {Object.keys(state.repositories_hash).length} Shapes repositories\n      </Typography>\n      <Grid container spacing={2} style={{textAlign: 'center', marginTop: '10px'}}>\n        {Object.keys(state.repositories_hash).map(function(repo: any){\n          return <Grid item xs={6}>\n              <Paper elevation={3} style={{padding: '15px'}}>\n                <a href={repo} key={repo} >\n                  <img src={'https://gh-card.dev/repos/' + repo.replace('https://github.com/', '') + '.svg?fullname'} alt={repo} key={'img' + repo}/>\n                </a>\n                <Typography>{pluralize(state.repositories_hash[repo], 'Shapes file')}</Typography>\n              </Paper>\n            </Grid>\n        })}\n      </Grid>\n    \n      <Typography variant=\"h5\" style={{marginTop: '25px'}}>\n        {filteredProjects.length} Shapes files\n      </Typography>\n      {/* Search box */}\n      <Box display=\"flex\" style={{marginTop: '20px'}}>\n        <Paper component=\"form\" className={classes.paperSearch}>\n          <InputBase  // https://material-ui.com/api/input-base/\n            className={classes.searchInput} inputProps={{ 'aria-label': 'search' }}\n            placeholder={\"Search shapes\"}\n            onChange={searchChange}\n          />\n          <IconButton aria-label=\"search\">\n            <SearchIcon />\n          </IconButton>\n        </Paper>\n      </Box>\n      \n      {/* Iterate over projects */}\n      {filteredProjects.map(function(project: any, key: number){\n        return <Paper key={key.toString()} elevation={4} style={{padding: '15px', marginTop: '25px', marginBottom: '25px'}}>\n          <Typography variant=\"h5\">\n            Shapes file:&nbsp;\n            <a href={project.shapeFileUri} className={classes.link}>{project.label}</a>&nbsp;&nbsp;\n          </Typography>\n          <Typography style={{marginBottom: '5px', marginTop: '5px'}}>\n            In repository:&nbsp;\n            <a href={project.repository} className={classes.link}>\n              {project.repository}\n            </a>\n          </Typography>\n          <Typography style={{marginTop: '5px'}}>\n            Contains {pluralize(project.shapes.length, 'Shape')}:\n          </Typography>\n          {project.shapes.map((shapeLabel: string, key: number) => {\n            return <Chip label={shapeLabel} color='primary' style={{margin: '5px'}} key={key.toString()}/>\n          })}\n          {project.gitUrl && ( \n            <div>\n              <a href={project.gitUrl} key={project.gitUrl} >\n                <img src={'https://gh-card.dev/repos/' + project.gitUrl.replace('https://github.com/', '') + '.svg?fullname'} alt={project.gitUrl} key={'img' + project.gitUrl}/>\n              </a>\n            </div>\n          )}\n        </Paper>\n      })}\n    </Container>\n  )\n}\n\nconst getShapesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nselect distinct * where { \n    ?shapeFileUri a <https://schema.org/DataDownload> ;\n        rdfs:label ?label ;\n        dc:source ?repository ;\n        dcterms:hasPart ?shapes .\n}`\n\nconst countRepositoriesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nselect ?repository (count(?shapeFileUri) as ?shapeFileCount) where { \n  ?shapeFileUri a <https://schema.org/DataDownload> ;\n    rdfs:label ?label ;\n    dc:source ?repository .\n} GROUP BY ?repository\n`\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button } from \"@material-ui/core\";\nimport { Graph } from \"perfect-graph\";\n\nimport iconImage from '../assets/icon.png';\n\nimport { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/shapes-of-you/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/shapes-of-you/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      />\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport { Text, View, Platform } from \"react-native\";\nimport { Router, Route, Link } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport './App.css';\nimport NavBar from \"./src/NavBar\";\nimport Footer from \"./src/Footer\";\nimport ShapeRegistry from \"./src/ShapeRegistry\";\nimport About from \"./src/About\";\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    secondary: { light: '#4caf50', main: '#087f23', dark: '#00600f' },\n    // main: blue[700]\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Router basename=\"/shapes-of-you/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        <Route exact path=\"/\" component={ShapeRegistry} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/shapes-of-you/expo-service-worker.js', { scope: '/shapes-of-you/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}