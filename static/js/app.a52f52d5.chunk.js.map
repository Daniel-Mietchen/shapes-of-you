{"version":3,"sources":["assets/icon.png","src/NavBar.tsx","src/Footer.tsx","src/ShapeRegistry.tsx","src/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/shapes-of-you/shapes-of-you/App.css?048e","App.css"],"names":["module","exports","useStyles","makeStyles","theme","menuButton","color","palette","common","white","solidButton","backgroundColor","primary","main","borderRadius","padding","dark","cursor","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","href","target","rel","Button","AuthButton","popup","darkLink","light","whiteLink","footer","spacing","marginTop","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","paperSearch","searchInput","marginLeft","fontSize","flex","link","secondary","ShapeRegistry","useTheme","webId","useWebId","React","useState","webid","shapes_files_list","search","repositories_hash","repositories_autocomplete","category_pie","checkbox_shacl","checkbox_shex","checkbox_sparql","page","shapes_per_page","state","setState","stateRef","useRef","updateState","useCallback","update","current","useEffect","endpointToQuery","axios","get","encodeURIComponent","getShapesQuery","then","res","projects_converted_hash","data","results","bindings","projects_hash","Object","keys","forEach","project","projectName","shapes","property","propertyHash","shape_label","value","length","n","lastIndexOf","substring","push","project_final_array","map","key","catch","error","console","log","countRepositoriesQuery","result","repo_description","label","repository","count","shapeFileCount","description","location","replace","put","createSolidFile","handleCheckboxes","event","name","checked","filtered_files","filter","shapes_file","find","repo","includes","endsWith","toLowerCase","indexOf","shapeFileUri","join","filtered_repos","item","i","ar","LoggedIn","marginBottom","Value","LoggedOut","List","ListItem","ListItemAvatar","Avatar","ListItemText","Paper","elevation","margin","Box","component","InputBase","inputProps","placeholder","onChange","IconButton","aria-label","FormGroup","row","FormControlLabel","control","Checkbox","TextField","id","e","type","Autocomplete","multiple","options","option","getOptionLabel","split","renderOption","Fragment","renderInput","params","slice","toString","object","noun","suffix","parseInt","pluralize","shapeLabel","Chip","Pagination","Math","floor","val","justifyContent","settingsForm","saveButton","fullWidth","normalFont","smallerFont","alignLeft","paperPadding","paperTitle","fontWeight","About","open","dialogOpen","project_license","language_autocomplete","createMuiTheme","typography","App","Helmet","content","itemprop","basename","View","exact","path","navigator","window","addEventListener","serviceWorker","register","scope","info","api","__esModule","default","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.a52f52d5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport InfoIcon from '@material-ui/icons/Info';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\n\nimport { AuthButton, Value } from '@solid/react';\n\nimport iconImage from '../assets/icon.png';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='IDS Projects dashboard'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        {/* <Link to=\"/create-doap\" className={classes.linkButton}>\n          <Tooltip title='Create a DOAP description for your project'>\n            <Button className={classes.menuButton}>\n              <CreateNewFolderIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <div className=\"flexGrow\"></div>\n        <a href=\"https://github.com/MaastrichtU-IDS/shapes-of-you/blob/report/FAILED_IMPORT_REPORT.md\" \n            target=\"_blank\" rel=\"noopener noreferrer\" className={classes.linkButton}>\n          <Tooltip title='List of shapes we failed to process'>\n            <Button className={classes.menuButton}>\n              {/* <WarningIcon /> */}\n              <AssignmentIcon />\n              &nbsp;Import report\n            </Button>\n          </Tooltip>\n        </a>\n        {/* <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link>\n        <Tooltip title='Go to IDS Best Practices documentation'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://maastrichtu-ids.github.io/best-practices\">\n            <MenuBookIcon />\n          </Button>\n        </Tooltip> */}\n        <Tooltip  title='Go to https://github.com/MaastrichtU-IDS/shapes-of-you'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/MaastrichtU-IDS/shapes-of-you\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <Tooltip title='Login with SOLID'> */}\n        <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/>\n        {/* </Tooltip> */}\n        {/* <AuthButton popup=\"https://solidcommunity.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Institute of Data Science at Maastricht University\n      </a>{' '}\n      {'2020.'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  // Set state in functional style:\n  // const [state, setState] = React.useState({search: '', name: 'Vincent'});\n  // console.log(state.search);\n  // // Set search without chaging name\n  // setState({...state, search: 'yo'})\n  // const onNameChange = React.useCallback((filterName) => {\n  //   console.log('callback', state.name);\n  // },\n  // [state.name]);\n  // // Tells callback to reload when change to state.name\n\n  // React.useEffect(() => {\n  //   console.log('componentDID mount');\n  //   return () => {\n  //     console.log('willMount');\n  //   }\n  // }, []) \n  // Empty dep list: will only run when componentDidMount\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" >\n            Built for you, to explore the semantic space ✨️ website under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/MaastrichtU-IDS/shapes-of-you/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}","import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText, Avatar } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport SquareFootIcon from '@material-ui/icons/SquareFoot';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\n\nimport axios from 'axios';\n\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { LoggedIn, LoggedOut, Value, useWebId, useLDflexValue, useLDflexList } from '@solid/react';\nimport { Like } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\n// import { data } from \"@solid/query-ldflex\";\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function ShapeRegistry() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const webId = useWebId();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    shapes_files_list: [],\n    search: '',\n    repositories_hash: [],\n    repositories_autocomplete: [],\n    category_pie: {},\n    checkbox_shacl: true,\n    checkbox_shex: true,\n    checkbox_sparql: true,\n    page: 1,\n    shapes_per_page: 100,\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n\n  // componentDidMount: Query SPARQL endpoint to get the shapes files infos\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n\n    // Check SOLID pod for a shapes preference file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n    // Query directly using Axios\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(getShapesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n        const projects_converted_hash = { ...sparqlResultArray }\n        let projects_hash: any = {}\n        // Iterate over projects\n        Object.keys(projects_converted_hash).forEach(function(project) {\n          const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n          // Use the project URI as key in the hash\n          if (!projects_hash[projectName]){\n            projects_hash[projectName] = {shapes: []}\n          }\n          // Iterate over project properties\n          Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n            const propertyHash = projects_converted_hash[project][property]\n            if (propertyHash) {\n              if (property == 'shapes') {\n                // Exception for shapes which is a list\n                let shape_label = propertyHash.value;\n                if (shape_label.length > 100) {\n                  const n = shape_label.lastIndexOf('#');\n                  shape_label = shape_label.substring(n + 1);\n                }\n                if (shape_label.length > 150) {\n                  shape_label = shape_label.substring(0, 150)\n                }\n                projects_hash[projectName][property].push(shape_label);\n              } else {\n                projects_hash[projectName][property] = propertyHash.value \n              }\n            }\n          })\n        })\n        // Convert back to array for filtering\n        const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n        updateState({shapes_files_list: project_final_array})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Get repositories and their files counts\n    let repositories_hash: any = []\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(countRepositoriesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        sparqlResultArray.map((result: any) =>  {\n          // repositories_hash[result.repository.value] = {\n          let repo_description = '';\n          if (result.repo_description) {\n            repo_description = result.repo_description.value;\n          }\n          repositories_hash.push({\n            label: result.repository.value,\n            count: result.shapeFileCount.value,\n            description: repo_description,\n          })\n        });\n\n        updateState({repositories_hash: repositories_hash})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Query with the Comunica engine\n    // Not working on SPARQL endpoint, only on the examples they provide\n    // https://comunica.dev/docs/query/getting_started/query_app/\n    // const comunicaEngine = newEngine();\n    // comunicaEngine.query(`\n    //   SELECT ?s ?o WHERE {\n    //    ?s a ?o .\n    //   } LIMIT 100`, {\n    //   sources: ['https://dbpedia.org/sparql'],\n    // }).then((res: any) => {\n    //   console.log(res);\n    //   res.bindingsStream.on('data', (binding: any) => {\n    //     // console.log(binding.get('?s').value);\n    //     // console.log(binding.get('?s').termType);\n    //     // console.log(binding.get('?o').value);\n    //   });\n    // });\n\n    if (webId) {\n      createSolidFile(webId);\n    }\n\n  }, [webId])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  function createSolidFile(webId: string) {\n    // console.log(webId);\n    // const location = webId + \"/public/shapes-of-you/preferences.ttl\";\n    const location = webId.replace(\"profile/card#me\", \"public/shapes-of-you/preferences.ttl\");\n    // console.log('Try to create file ' + location);\n    return data[location].put();\n  }\n\n  const pluralize = (count: any, noun: string, suffix = 's') =>\n  `${count} ${noun}${parseInt(count) !== 1 ? suffix : ''}`;\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value })\n  }\n\n  const handleCheckboxes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ [event.target.name]: event.target.checked });\n  }\n\n  function handleAutocompleteRepositories(event: any, value: string[]) {\n    updateState({ repositories_autocomplete: value})\n  }\n  \n  // Each faceted search filter can be added here (on the shapes files array)\n  const filtered_files = state.shapes_files_list.filter( (shapes_file: any) =>{\n    if (shapes_file.label) {\n      // Filter by repo if 1 selected\n      // @ts-ignore Useless warning on indexOf(shapes_file.repository)\n      if (state.repositories_autocomplete.length == 0 || state.repositories_autocomplete.find((repo: string) => repo.includes(shapes_file.repository))) {\n        // Filter depending on shacl/shex checkboxes:\n        if ((state.checkbox_shex === true && shapes_file.label.endsWith('.shex'))\n        || (state.checkbox_sparql === true && (shapes_file.label.endsWith('.rq') || shapes_file.label.endsWith('.sparql')) )\n        || (state.checkbox_shacl === true && !shapes_file.label.endsWith('.shex') && !shapes_file.label.endsWith('.rq'))\n        // TODO: improve, some RDF files are shex)\n        ) {\n          // Filter on search:\n          return (shapes_file.label.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1 \n            || shapes_file.shapeFileUri.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n            || shapes_file.shapes.join(' ').toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n            || shapes_file.repository.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n          )\n        }\n      }\n    }\n  })\n\n  // TODO: If no repo filter, then we user the filtered list to have the search filtered\n  // As soon as a repo is selected we use full list\n  // issue: when a repo is selected, all other repo\n  // Return unique list of filtered repos\n  let filtered_repos: any = []\n  if (state.repositories_autocomplete.length == 0) {\n    filtered_repos = filtered_files.map( (shapes_file: any) =>{\n      return shapes_file.repository\n    }).filter((item, i, ar) => ar.indexOf(item) === i)\n  } else {\n    filtered_repos = state.shapes_files_list.map( (shapes_file: any) =>{\n      return shapes_file.repository\n    }).filter((item, i, ar) => ar.indexOf(item) === i)\n  }\n\n  // Define rendering of the page:\n  return(\n    <Container className='mainContainer'>\n      <Typography variant=\"h4\" style={{textAlign: 'center'}}>\n        💠 Shapes of You\n      </Typography>\n      <LoggedIn>\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          Welcome to your SPARQL, SHACL & ShEx Shapes registry <Value src=\"user.name\"/>!\n        </Typography>\n        {/* <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          {webId}\n        </Typography> */}\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          Soon you will be able to bookmark your favourites Shapes using your SOLID account! 🔖\n        </Typography>\n      </LoggedIn>\n      <LoggedOut>\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          A registry for SPARQL, SHACL & ShEx Shapes publicly available\n        </Typography>\n      </LoggedOut>\n\n      <Typography style={{marginBottom: theme.spacing(2)}}>\n        Shapes of you is the best place to search and explore existing semantic shapes and queries. You need to validate RDF using SHACL or ShEx? There might be a shape out there waiting for you! You can also explore shapes to find inspirations. You might even find a grlc API serving data relevant for your projects, who knows? Linked Open Data are full of surprise!\n      </Typography>\n\n      <a href=\"https://github.com/MaastrichtU-IDS/shapes-of-you/actions?query=workflow%3A%22Get+shapes+from+GitHub%22\">\n        <img src=\"https://github.com/MaastrichtU-IDS/shapes-of-you/workflows/Get%20shapes%20from%20GitHub/badge.svg\" \n        style={{marginBottom: theme.spacing(2)}} />\n      </a>\n\n      {/* <Typography>\n        Add the tag <code>shacl-shapes</code> or <code>shex</code> or <code>grlc</code> to your GitHub repository, we automatically index all SPARQL queries (<code>.rq</code>, <code>.sparql</code>), ShEx (<code>.shex</code>), SHACL files (<code>.ttl</code>, <code>.rdf</code>, <code>.jsonld</code>, <code>.trig</code>, <code>.nq</code>, etc) containing at least one <code>sh:NodeShape</code> from all repositories everyday at 1:00 and 13:00 🕐\n      </Typography> */}\n      <Typography>\n        Add one of these topics to your GitHub repository, we automatically index files from public repositories everyday at 1:00 and 13:00 🕐\n      </Typography>\n      <List>\n      <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <CheckBoxIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText\n            // secondary=\"shacl-shapes\"\n          > \n            <b>SHACL shapes</b>: add the topic <code>shacl-shapes</code>, we index RDF files such as <code>.ttl</code>, <code>.rdf</code>, <code>.jsonld</code>, etc), with all <code>sh:NodeShape</code> they contain\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <BubbleChartIcon />\n              {/* <SquareFootIcon /> */}\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText>\n            <b>ShEx expressions</b>: add the topic <code>shex</code>, we index <code>.shex</code> files, and ShEx shapes defined in RDF files\n          </ListItemText>\n        </ListItem>\n        <ListItem>\n          <ListItemAvatar>\n            <Avatar>\n              <CodeIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText>\n            <b>SPARQL queries</b>: add the topic <code>grlc</code>, we index <code>.rq</code> and <code>.sparql</code> files, and parse <a href=\"http://grlc.io\" className={classes.link}>grlc.io</a> APIs metadata\n          </ListItemText>\n        </ListItem>\n      </List>\n\n      {/* <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}></Box> */}\n      <Paper elevation={6} style={{padding: theme.spacing(3, 2), margin: theme.spacing(2, 0)}}>\n        <Typography variant=\"h5\">\n          {filtered_files.length} shapes files in&nbsp;\n          {filtered_repos.length} repositories \n          {/* {(state.repositories_autocomplete.length > 0 && state.repositories_autocomplete.length) || Object.keys(state.repositories_hash).length} Shapes repositories  */}\n        </Typography>\n\n        {/* Filtering options */}\n        <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}>\n          {/* Search box */}\n          <Paper component=\"form\" className={classes.paperSearch}>\n            <InputBase\n              className={classes.searchInput} inputProps={{ 'aria-label': 'search' }}\n              placeholder={\"🔎 Search shapes\"}\n              onChange={searchChange}\n            />\n            <IconButton aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n\n          {/* shacl/shex checkboxes */}\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_shacl}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_shacl\"\n                  color=\"primary\"\n                /> }\n              label=\"SHACL\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_shex}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_shex\"\n                  color=\"primary\"\n                /> }\n              label=\"ShEx\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_sparql}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_sparql\"\n                  color=\"primary\"\n                /> }\n              label=\"SPARQL\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"shapes-per-page\"\n            value={state.shapes_per_page}\n            onChange={(e: any) => {updateState({shapes_per_page: e.target.value})}}\n            label=\"Files per page\"\n            type=\"number\"\n            variant=\"outlined\"\n            // style={{ backgroundColor: '#ffffff' }}\n          />\n        </Box>\n\n        {/* Autocomplete to filter by repositories */}\n        <Autocomplete\n          multiple\n          value={state.repositories_autocomplete}\n          onChange={handleAutocompleteRepositories}\n          id=\"autocomplete-repositories\"\n          options={state.repositories_hash.filter( (repo: any) =>{ return (filtered_repos.indexOf(repo.label) > -1) })\n            .map((option: any) => option.label+ \",\" + option.count + \",\" + option.description)}\n          getOptionLabel={(option) => option.split(\",\")[0].replace('https://github.com/', '')}\n          renderOption={(option: any) => (\n            <React.Fragment>\n              {option.split(\",\")[0].replace('https://github.com/', '')} ({option.split(\",\")[1]} files) \n              {option.split(\",\")[2] && \n                <React.Fragment>\n                  &nbsp;- {option.split(\",\")[2]}\n                </React.Fragment>\n              }\n            </React.Fragment>\n          )}\n          renderInput={params => <TextField {...params} \n            label=\"📁 Filter by repositories\" \n            variant=\"outlined\" \n            // style={{ backgroundColor: '#ffffff' }}\n            // onInputChange={handleAutocompleteRepositories}\n            // size='small'\n            // InputProps={{\n            //   className: classes.whiteColor\n            // }}\n            // ListboxProps={{\n            //   className: classes.whiteColor,\n            // }}\n            // getOptionLabel={option => option.title}\n            // style={{ width: '60ch' }}\n          />}\n        />\n      </Paper>\n\n      {/* Iterate over shapes files */}\n      {filtered_files.slice(((state.page - 1)*(state.shapes_per_page)), ((state.page)*(state.shapes_per_page) - 1)).map(function(project: any, key: number){\n        return <Paper key={key.toString()} elevation={2} style={{padding: theme.spacing(2, 2), margin: theme.spacing(2, 0)}}>\n          <Typography variant=\"h6\">\n            Shapes file:&nbsp;\n            <b><a href={project.shapeFileUri} className={classes.link}>{project.label}</a></b>&nbsp;&nbsp;\n            <LoggedIn>\n              <Like object={project.shapeFileUri}>the Shape</Like>\n            </LoggedIn>\n          </Typography>\n          <Typography style={{margin: theme.spacing(1, 0)}}>\n            {/* In repository:&nbsp; */}\n            <a href={project.repository} className={classes.link}>\n              📁&nbsp;{project.repository.replace('https://github.com/', '')}\n            </a>\n          </Typography>\n          <Typography style={{marginTop: theme.spacing(1)}}>\n            Contains {pluralize(project.shapes.length, 'Shape')}:\n          </Typography>\n          {project.shapes.map((shapeLabel: string, key: number) => {\n            // Limit shape label size to 150 chars\n            return <Chip label={shapeLabel} color='primary' key={key.toString()}\n                style={{margin: theme.spacing(1, 1)}}/>\n            // <Tooltip title={shapeLabel} key={key.toString()}>\n            // </Tooltip>\n          })}\n        </Paper>\n      })}\n      <Pagination count={Math.floor(filtered_files.length / state.shapes_per_page) + 1} \n        color=\"primary\" onChange={(event,val)=> updateState({page: val})} \n        style={{ display:'flex', justifyContent: 'center' }}\n      />\n    </Container>\n  )\n}\n\n// SPARQL select query to get all shapes files and the list of their shapes\nconst getShapesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nselect distinct * where { \n    ?shapeFileUri a <https://schema.org/DataDownload> ;\n        rdfs:label ?label ;\n        dc:source ?repository ;\n        dcterms:hasPart ?shapes .\n}`\n// } LIMIT 1000`\n\n// SPARQL select query to get all GitHub repos, their description and the count of shapes file in it\nconst countRepositoriesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nselect ?repository (count(?shapeFileUri) as ?shapeFileCount) ?repo_description where { \n  ?shapeFileUri a <https://schema.org/DataDownload> ;\n    rdfs:label ?label ;\n    dc:source ?repository .\n  OPTIONAL { ?repository rdfs:comment ?repo_description }\n} GROUP BY ?repository ?repo_description\n`\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button } from \"@material-ui/core\";\n// import { Graph } from \"perfect-graph\";\n\nimport iconImage from '../assets/icon.png';\n\nimport { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/shapes-of-you/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/MaastrichtU-IDS/shapes-of-you/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { View } from \"react-native\";\nimport { Router, Route } from \"./react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/NavBar\";\nimport Footer from \"./src/Footer\";\nimport ShapeRegistry from \"./src/ShapeRegistry\";\nimport About from \"./src/About\";\n// import blue from '@material-ui/core/colors/blue';\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    // Blue\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    // Green\n    secondary: { light: '#4caf50', main: '#7e57c2', dark: '#00600f' },\n    // main: blue[700]\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Helmet>\n      <title>Shapes of you</title>\n      <meta name=\"description\" content=\"Registry for publicly available SPARQL queries, ShEx, and SHACL shapes validation files\"/>\n\n      {/* Google / Search Engine Tags */}\n      <meta itemprop=\"name\" content=\"Shapes of you\"/>\n      <meta itemprop=\"description\" content=\"Registry for publicly available SPARQL queries, ShEx, and SHACL shapes validation files\"/>\n      <meta itemprop=\"image\" content=\"\"/>\n\n      {/* Facebook Meta Tags */}\n      <meta property=\"og:url\" content=\"https://maastrichtu-ids.github.io/shapes-of-you\"/>\n      <meta property=\"og:type\" content=\"website\"/>\n      <meta property=\"og:title\" content=\"Shapes of you\"/>\n      <meta property=\"og:description\" content=\"Registry for publicly available SPARQL queries, ShEx, and SHACL shapes validation files\"/>\n      <meta property=\"og:image\" content=\"\"/>\n\n      {/* Twitter Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n      <meta name=\"twitter:title\" content=\"Shapes of you\"/>\n      <meta name=\"twitter:description\" content=\"Registry for publicly available SPARQL queries, ShEx, and SHACL shapes validation files\"/>\n      <meta name=\"twitter:image\" content=\"\"/>\n    </Helmet>\n    <Router basename=\"/shapes-of-you/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        <Route exact path=\"/\" component={ShapeRegistry} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/shapes-of-you/expo-service-worker.js', { scope: '/shapes-of-you/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}