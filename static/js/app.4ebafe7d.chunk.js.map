{"version":3,"sources":["assets/icon.png","src/components/SparqlEndpointsDisplay.tsx","src/components/NavBar.tsx","src/components/Footer.tsx","src/pages/SemanticIndex.tsx","src/pages/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/shapes-of-you/shapes-of-you/App.css?048e","App.css","node_modules/moment/locale sync /^/.//.*$"],"names":["module","exports","useStyles","makeStyles","theme","paperSearch","padding","display","alignItems","width","marginRight","spacing","searchInput","marginLeft","fontSize","flex","link","textDecoration","color","palette","primary","main","secondary","SparqlEndpointsDisplay","classes","useTheme","useWebId","React","useState","webid","sparql_endpoints_array","search","state","setState","stateRef","useRef","updateState","useCallback","update","current","useEffect","axios","get","endpointToQuery","encodeURIComponent","get_sparql_endpoints_query","then","res","results_array","data","results","bindings","map","result","push","sparql_endpoint","value","catch","error","console","log","Container","className","Typography","List","key","ListItem","ListItemAvatar","Avatar","ListItemText","href","target","rel","menuButton","common","white","margin","solidButton","backgroundColor","borderRadius","dark","cursor","linkButton","textTransform","linkLogo","paperPadding","NavBar","open","setOpen","anchorEl","setAnchorEl","AppBar","title","position","Toolbar","variant","to","Tooltip","src","iconImage","style","height","alt","Button","onClick","event","currentTarget","prev","Popper","ClickAwayListener","onClickAway","Paper","elevation","AuthButton","popup","darkLink","light","whiteLink","footer","marginTop","Copyright","align","Footer","maxWidth","textAlign","marginBottom","SemanticIndex","webId","shapes_files_list","repositories_hash","repositories_autocomplete","repos_overview_chart","files_overview_chart","checkbox_shacl","checkbox_shex","checkbox_sparql","checkbox_owl","checkbox_skos","checkbox_obo","checkbox_openapi","show_pwa_alert","page","shapes_per_page","show_info_card","window","matchMedia","matches","shape_types_mappings","labels","datasets","label","sparql_resources_overview","shape_type","repos_count","files_count","getFilesQuery","project_final_array","row","Object","keys","countRepositoriesQuery","repo_description","repository","count","shapeFileCount","description","location","replace","put","createSolidFile","handleCheckboxes","name","checked","filtered_files","filter","shapes_file","length","find","repo","includes","file_description","shape_file_description","sparqlEndpoint","query","toLowerCase","indexOf","shapeFileUri","shapes","join","filtered_repos","item","i","ar","Alert","onClose","LoggedIn","Value","LoggedOut","Card","CardHeader","action","IconButton","aria-label","subheader","CardContent","Grid","container","xs","md","options","chart_options","Box","component","InputBase","inputProps","placeholder","onChange","TextField","id","e","type","Autocomplete","multiple","option","getOptionLabel","split","renderOption","Fragment","renderInput","params","FormGroup","FormControlLabel","control","Checkbox","CircularProgress","slice","project","toString","object","fontStyle","noun","suffix","parseInt","pluralize","shapeLabel","Chip","Pagination","Math","floor","val","justifyContent","data_array","scales","yAxes","ticks","beginAtZero","suggestedMax","max","xAxes","legend","plugins","render","settingsForm","saveButton","fullWidth","normalFont","smallerFont","alignLeft","paperTitle","fontWeight","About","dialogOpen","project_license","language_autocomplete","createMuiTheme","typography","website_description","App","Helmet","content","itemProp","property","basename","View","exact","path","navigator","addEventListener","serviceWorker","register","scope","info","api","__esModule","default","locals","___CSS_LOADER_API_IMPORT___","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve"],"mappings":"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","file":"static/js/app.4ebafe7d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","  import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText, Avatar } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport OpenAPIIcon from '@material-ui/icons/Adjust';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport axios from 'axios';\nimport { Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels';\n\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { LoggedIn, LoggedOut, Value, useWebId, useLDflexValue, useLDflexList } from '@solid/react';\nimport { Like } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\n// import { data } from \"@solid/query-ldflex\";\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SparqlEndpointsDisplay() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const webId = useWebId();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    sparql_endpoints_array: [],\n    search: '',\n    // repositories_hash: [],\n    // repositories_autocomplete: [],\n    // repos_overview_chart: {},\n    // files_overview_chart: {},\n    // checkbox_shacl: true,\n    // checkbox_shex: true,\n    // checkbox_sparql: true,\n    // checkbox_owl: true,\n    // checkbox_skos: true,\n    // checkbox_obo: true,\n    // checkbox_openapi: true,\n    // show_pwa_alert: true,\n    // page: 1,\n    // shapes_per_page: 100,\n    // show_info_card: true,\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n\n  // componentDidMount: Query SPARQL endpoint to get the SPARQL endpoints infos\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(get_sparql_endpoints_query))\n      .then(res => {\n        const results_array = res.data.results.bindings;\n        let sparql_endpoints_array = []\n        results_array.map((result: any): any =>  {\n          // @ts-ignore\n          sparql_endpoints_array.push(result.sparql_endpoint.value);\n        })\n        updateState({ sparql_endpoints_array: sparql_endpoints_array })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n  }, [])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value })\n  }\n  \n  // Could not find good dynamic faceted search, best is https://github.com/ebi-gene-expression-group/scxa-faceted-search-results\n  // Each faceted search filter can be added here (on the shapes files array)\n  // const filtered_files = state.shapes_files_list.filter( (shapes_file: any) =>{\n  //   if (shapes_file) {\n  //     if (shapes_file.label) {\n  //       // Filter by repo: show shapes if no repo selected, or if its repo is in list of selected repos\n  //       if (state.repositories_autocomplete.length == 0 || state.repositories_autocomplete.find((repo: string) => repo.includes(shapes_file.repository))) {\n  //         // Filter depending on shape type checkboxes:\n  //         if ((state.checkbox_shex === true && shapes_file.shape_type == 'http://www.w3.org/ns/shex#Schema')\n  //         || (state.checkbox_sparql === true && shapes_file.shape_type == 'http://www.w3.org/ns/shacl#SPARQLFunction')\n  //         || (state.checkbox_shacl === true && shapes_file.shape_type == 'http://www.w3.org/ns/shacl#Shape')\n  //         || (state.checkbox_owl === true && shapes_file.shape_type == 'http://www.w3.org/2002/07/owl#Ontology')\n  //         || (state.checkbox_obo === true && shapes_file.shape_type == 'http://semanticscience.org/resource/SIO_000623')\n  //         || (state.checkbox_skos === true && shapes_file.shape_type == 'http://www.w3.org/2004/02/skos/core#ConceptScheme')\n  //         || (state.checkbox_openapi === true && shapes_file.shape_type == 'https://schema.org/WebAPI')\n  //         ) {\n  //           // Filter using the search text, on all properties and metadata of the file:\n  //           let file_description = '';\n  //           if (shapes_file.repo_description) file_description = file_description + ' ' + shapes_file.repo_description;\n  //           if (shapes_file.shape_file_description) file_description = file_description + ' ' + shapes_file.shape_file_description;\n  //           if (shapes_file.sparqlEndpoint) file_description = file_description + ' ' + shapes_file.sparqlEndpoint;\n  //           if (shapes_file.query) file_description = file_description + ' ' + shapes_file.query;\n  //           return (shapes_file.label.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1 \n  //             || shapes_file.shapeFileUri.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n  //             || shapes_file.shapes && shapes_file.shapes.join(' ').toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n  //             || shapes_file.repository.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n  //             || file_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n  //           )\n  //         }\n  //       }\n  //     }\n  //   }\n  // })\n\n\n  // Define rendering of the page:\n  return(\n    <Container className='mainContainer'>\n      <Typography>\n        List of active SPARQL endpoints defined in SPARQL queries metadata\n      </Typography>\n      <List>\n        {state.sparql_endpoints_array.map(function(sparql_endpoint: any, key: number){\n          return <ListItem>\n            <ListItemAvatar>\n              <Avatar>\n                <CheckCircleIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText>\n              <b><a href={sparql_endpoint} className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">{sparql_endpoint}</a></b>\n            </ListItemText>\n          </ListItem>\n        })}\n      </List>\n    </Container>\n  )\n}\n\n// SPARQL select query which returns the count of repositories and shapes files per semantic resources types\nconst get_sparql_endpoints_query = `PREFIX schema: <https://schema.org/>\nSELECT DISTINCT * WHERE { \n  ?sparql_endpoint a schema:EntryPoint .\n} \n`\n","import React from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, Button, Popper, ClickAwayListener, Paper } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport GrlcApiIcon from '@material-ui/icons/Send';\nimport SparqlIcon from '@material-ui/icons/Share';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\n// import InfoIcon from '@material-ui/icons/Info';\n// import DashboardIcon from '@material-ui/icons/Dashboard';\n// import CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\n// import MenuBookIcon from '@material-ui/icons/MenuBook';\n// import WarningIcon from '@material-ui/icons/Warning';\n\nimport { AuthButton, Value } from '@solid/react';\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\nimport SparqlEndpointsDisplay from \"./SparqlEndpointsDisplay\";\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white,\n    margin: theme.spacing(0, 1)\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none',\n    margin: theme.spacing(0, 1)\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(0, 2)\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // Popper for settings\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleClick = (event: any) => {\n    console.log('Click button!');\n    setAnchorEl(anchorEl ? null : event.currentTarget);\n    setOpen((prev) => !prev);\n  };\n  const handleClickAway = () => {\n    setOpen(false);\n    setAnchorEl(anchorEl ? null : anchorEl);\n    console.log('Click away!');\n  };\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='Shapes of you homepage'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        <Tooltip title='Access the grlc OpenAPI (which query the SPARQL endpoint)'>\n          <Button className={classes.menuButton} target=\"_blank\" rel=\"noopener noreferrer\"\n          href=\"http://grlc.io/api-git/vemonet/shapes-of-you\">\n            <GrlcApiIcon style={{ marginRight: theme.spacing(1)}} />\n            API docs\n          </Button>\n        </Tooltip>\n        <Tooltip title='Query the SPARQL endpoint with YASGUI'>\n          <Button className={classes.menuButton} target=\"_blank\" rel=\"noopener noreferrer\"\n          href=\"http://yasgui.triply.cc/#query=PREFIX%20rdfs%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%3E%0APREFIX%20dc%3A%20%3Chttp%3A%2F%2Fpurl.org%2Fdc%2Felements%2F1.1%2F%3E%0APREFIX%20dcterms%3A%20%3Chttp%3A%2F%2Fpurl.org%2Fdc%2Fterms%2F%3E%0APREFIX%20schema%3A%20%3Chttps%3A%2F%2Fschema.org%2F%3E%0APREFIX%20sh%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshacl%23%3E%0APREFIX%20shex%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshex%23%3E%0APREFIX%20void%3A%20%3Chttp%3A%2F%2Frdfs.org%2Fns%2Fvoid%23%3E%0ASELECT%20DISTINCT%20%3Fshape_type%20(count(distinct%20%3Frepository)%20AS%20%3Frepos_count)%20(count(distinct%20%3Fshape_file)%20AS%20%3Ffile_count)%0AWHERE%20%7B%20%0A%20%20%20%20%3Fshape_file%20a%20schema%3ASoftwareSourceCode%20%3B%0A%20%20%20%20%20%20%20%20a%20%3Fshape_type%20%3B%0A%20%20%20%20%20%20%20%20dc%3Asource%20%3Frepository%20.%0A%20%20%20%20FILTER(%3Fshape_type%20!%3D%20schema%3ASoftwareSourceCode)%0A%7D%20GROUP%20BY%20%3Fshape_type&endpoint=https%3A%2F%2Fgraphdb.dumontierlab.com%2Frepositories%2Fshapes-registry&requestMethod=GET&tabTitle=Query&headers=%7B%7D&contentTypeConstruct=application%2Fn-triples%2C*%2F*%3Bq%3D0.9&contentTypeSelect=application%2Fsparql-results%2Bjson%2C*%2F*%3Bq%3D0.9&outputFormat=table\">\n            <SparqlIcon style={{ marginRight: theme.spacing(1)}} />\n            Query with SPARQL\n          </Button>\n        </Tooltip>\n        <Tooltip  title='Application settings'>\n          <Button className={classes.menuButton} onClick={handleClick}>\n            <CheckCircleIcon />\n            SPARQL endpoints\n          </Button>\n        </Tooltip>\n        <Popper open={open} anchorEl={anchorEl}>\n          <ClickAwayListener onClickAway={handleClickAway}>\n            <Paper elevation={4} className={classes.paperPadding}>\n              <SparqlEndpointsDisplay />\n            </Paper>\n          </ClickAwayListener>\n        </Popper>\n\n        <div className=\"flexGrow\"></div>\n\n        <a href=\"https://github.com/vemonet/shapes-of-you/actions?query=workflow%3A%22Index+shapes%22\"\n          className={classes.linkButton} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Tooltip title='Checkout the last workflow runs to index shapes.'>\n            <img src=\"https://github.com/vemonet/shapes-of-you/workflows/Index%20shapes/badge.svg\" />\n          </Tooltip>\n        </a>\n        <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\"\n          className={classes.linkButton} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Tooltip title='Reports for the files which failed to process, and that need to be fixed by their owners. Also known as the semantic web of shame'>\n            <img src=\"https://img.shields.io/badge/📎%20Index%20shapes-reports-ffa000\" />\n          </Tooltip>\n        </a>\n        {/* <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\" \n            target=\"_blank\" rel=\"noopener noreferrer\" className={classes.linkButton}>\n          <Tooltip title='Reports for the files which failed to process, and that need to be fixed by their owners. Also known as the semantic web of shame'>\n            <Button className={classes.menuButton}>\n              <AssignmentIcon />\n              &nbsp;Index reports\n            </Button>\n          </Tooltip>\n        </a> */}\n        {/* <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <Tooltip  title='Go to https://github.com/vemonet/shapes-of-you'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/vemonet/shapes-of-you\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <Tooltip title='Login with SOLID'> */}\n        <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/>\n        {/* </Tooltip> */}\n        {/* <AuthButton popup=\"https://solidcommunity.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Vincent Emonet\n      </a>{' '}\n      {'2021'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" style={{ marginBottom: theme.spacing(1)}}>\n            Built for you, to explore the semantic space ✨️ website under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/vemonet/shapes-of-you/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}\n\n// Set state in functional style:\n// const [state, setState] = React.useState({search: '', name: 'Vincent'});\n// console.log(state.search);\n// // Set search without chaging name\n// setState({...state, search: 'yo'})\n// const onNameChange = React.useCallback((filterName) => {\n//   console.log('callback', state.name);\n// },\n// [state.name]);\n// // Tells callback to reload when change to state.name\n\n// React.useEffect(() => {\n//   console.log('componentDID mount');\n//   return () => {\n//     console.log('willMount');\n//   }\n// }, []) \n// Empty dep list: will only run when componentDidMount","import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText, Avatar } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport OpenAPIIcon from '@material-ui/icons/Adjust';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Alert from '@material-ui/lab/Alert';\n\nimport axios from 'axios';\nimport { Doughnut, Pie, Bar, HorizontalBar } from 'react-chartjs-2';\nimport 'chartjs-plugin-labels';\n\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { LoggedIn, LoggedOut, Value, useWebId, useLDflexValue, useLDflexList } from '@solid/react';\nimport { Like } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\n// import { data } from \"@solid/query-ldflex\";\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SemanticIndex() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const webId = useWebId();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    shapes_files_list: [],\n    search: '',\n    repositories_hash: [],\n    repositories_autocomplete: [],\n    repos_overview_chart: {},\n    files_overview_chart: {},\n    checkbox_shacl: true,\n    checkbox_shex: true,\n    checkbox_sparql: true,\n    checkbox_owl: true,\n    checkbox_skos: true,\n    checkbox_obo: true,\n    checkbox_openapi: true,\n    show_pwa_alert: true,\n    page: 1,\n    shapes_per_page: 100,\n    show_info_card: true,\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n\n  // componentDidMount: Query SPARQL endpoint to get the shapes files infos\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n\n    // Check if PWA, and propose to install it if not!\n    if (window.matchMedia('(display-mode: standalone)').matches) {  \n      updateState({ show_pwa_alert: false })\n    }  \n\n    // Check SOLID pod for a shapes preference file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n    const shape_types_mappings = {\n      'http://www.w3.org/ns/shacl#Shape': 'SHACL',\n      'http://www.w3.org/2002/07/owl#Ontology': 'OWL',\n      'http://www.w3.org/ns/shex#Schema': 'ShEx',\n      'http://www.w3.org/ns/shacl#SPARQLFunction': 'SPARQL',\n      'http://www.w3.org/2004/02/skos/core#ConceptScheme': 'SKOS',\n      'http://semanticscience.org/resource/SIO_000623': 'OBO',\n      'https://schema.org/WebAPI': 'OpenAPI',\n    }\n\n    let repos_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of repositories per resource type',\n        data: [ ],\n        backgroundColor: ['#4caf50','#9575cd', '#ffeb3b', '#64b5f6', '#ff7043', '#1565c0']\n        // hoverBackgroundColor: ['#4caf50','#FF6384','#36A2EB','#FFCE56', '#0277bd', '#ef6c00']\n    }]}\n    let files_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of files per resource type',\n        data: [ ],\n        backgroundColor: ['#4caf50','#9575cd', '#ffeb3b', '#64b5f6', '#ff7043', '#1565c0']\n        // hoverBackgroundColor: ['#4caf50','#FF6384','#36A2EB','#FFCE56', '#0277bd', '#ef6c00']\n    }]}\n\n    // sparql_resources_overview\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(sparql_resources_overview))\n      .then(res => {\n        const results_array = res.data.results.bindings;\n        results_array.map((result: any): any =>  {\n          // @ts-ignore\n          repos_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n          // @ts-ignore\n          repos_overview_chart.datasets[0].data.push(result.repos_count.value);\n          // @ts-ignore\n          files_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n          // @ts-ignore\n          files_overview_chart.datasets[0].data.push(result.files_count.value);\n        })\n        console.log(repos_overview_chart)\n        updateState({\n          repos_overview_chart: repos_overview_chart,\n          files_overview_chart: files_overview_chart\n        })\n      })\n\n    // Query directly using Axios\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(getFilesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n        // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n        // const projects_converted_hash = { ...sparqlResultArray }\n        // let projects_hash: any = {}\n        // // Iterate over projects\n        // Object.keys(projects_converted_hash).forEach(function(project) {\n        //   const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n        //   // Use the project URI as key in the hash\n        //   if (!projects_hash[projectName]){\n        //     projects_hash[projectName] = {shapes: []}\n        //   }\n        //   // Iterate over project properties\n        //   Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n        //     const propertyHash = projects_converted_hash[project][property]\n        //     if (propertyHash) {\n        //       if (property == 'shapes') {\n        //         // Exception for shapes which is a list\n        //         let shape_label = propertyHash.value;\n        //         if (shape_label.length > 100) {\n        //           const n = shape_label.lastIndexOf('#');\n        //           shape_label = shape_label.substring(n + 1);\n        //         }\n        //         if (shape_label.length > 150) {\n        //           shape_label = shape_label.substring(0, 150)\n        //         }\n        //         projects_hash[projectName][property].push(shape_label);\n        //       } else {\n        //         projects_hash[projectName][property] = propertyHash.value \n        //       }\n        //     }\n        //   })\n        // })\n        // Convert back to array for filtering\n        // const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n        const project_final_array: any = sparqlResultArray.map((row: any) => {\n          // console.log(row);\n          Object.keys(row).map((key) => row[key] = row[key]['value']);\n          return row\n          // Object.keys(row).map((key) => key['value']);\n        }); \n        console.log('project_final_array');\n        console.log(project_final_array);\n        // sparqlResultArray\n        updateState({shapes_files_list: project_final_array})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Get all shapes in files (3m2)\n    // axios.get(endpointToQuery + `?query=` + encodeURIComponent(getShapesQuery))\n    //   .then(res => {\n    //     const sparqlResultArray = res.data.results.bindings;\n\n    //     // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n    //     const projects_converted_hash = { ...sparqlResultArray }\n    //     let projects_hash: any = {}\n    //     // Iterate over projects\n    //     Object.keys(projects_converted_hash).forEach(function(project) {\n    //       const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n    //       // Use the project URI as key in the hash\n    //       if (!projects_hash[projectName]){\n    //         projects_hash[projectName] = {shapes: []}\n    //       }\n    //       // Iterate over project properties\n    //       Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n    //         const propertyHash = projects_converted_hash[project][property]\n    //         if (propertyHash) {\n    //           if (property == 'shapes') {\n    //             // Exception for shapes which is a list\n    //             let shape_label = propertyHash.value;\n    //             if (shape_label.length > 100) {\n    //               const n = shape_label.lastIndexOf('#');\n    //               shape_label = shape_label.substring(n + 1);\n    //             }\n    //             if (shape_label.length > 150) {\n    //               shape_label = shape_label.substring(0, 150)\n    //             }\n    //             projects_hash[projectName][property].push(shape_label);\n    //           } else {\n    //             projects_hash[projectName][property] = propertyHash.value \n    //           }\n    //         }\n    //       })\n    //     })\n    //     // Convert back to array for filtering\n    //     const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n    //     updateState({shapes_files_list: project_final_array})\n    //   })\n    //   .catch(error => {\n    //     console.log(error)\n    //   })\n\n    // Get repositories and their files counts\n    let repositories_hash: any = []\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(countRepositoriesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        sparqlResultArray.map((result: any) =>  {\n          // repositories_hash[result.repository.value] = {\n          let repo_description = '';\n          if (result.repo_description) {\n            repo_description = result.repo_description.value;\n          }\n          repositories_hash.push({\n            label: result.repository.value,\n            count: result.shapeFileCount.value,\n            description: repo_description,\n          })\n        });\n\n        updateState({repositories_hash: repositories_hash})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Query with the Comunica engine\n    // Not working on SPARQL endpoint, only on the examples they provide\n    // https://comunica.dev/docs/query/getting_started/query_app/\n    // const comunicaEngine = newEngine();\n    // comunicaEngine.query(`\n    //   SELECT ?s ?o WHERE {\n    //    ?s a ?o .\n    //   } LIMIT 100`, {\n    //   sources: ['https://dbpedia.org/sparql'],\n    // }).then((res: any) => {\n    //   console.log(res);\n    //   res.bindingsStream.on('data', (binding: any) => {\n    //     // console.log(binding.get('?s').value);\n    //     // console.log(binding.get('?s').termType);\n    //     // console.log(binding.get('?o').value);\n    //   });\n    // });\n\n    if (webId) {\n      createSolidFile(webId);\n    }\n\n  }, [webId])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  function createSolidFile(webId: string) {\n    // console.log(webId);\n    // const location = webId + \"/public/shapes-of-you/preferences.ttl\";\n    const location = webId.replace(\"profile/card#me\", \"public/shapes-of-you/preferences.ttl\");\n    // console.log('Try to create file ' + location);\n    return data[location].put();\n  }\n\n  const pluralize = (count: any, noun: string, suffix = 's') =>\n  `${count} ${noun}${parseInt(count) !== 1 ? suffix : ''}`;\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value })\n  }\n\n  const handleCheckboxes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ [event.target.name]: event.target.checked });\n  }\n\n  function handleAutocompleteRepositories(event: any, value: string[]) {\n    updateState({ repositories_autocomplete: value})\n  }\n  \n  // Could not find good dynamic faceted search, best is https://github.com/ebi-gene-expression-group/scxa-faceted-search-results\n  // Each faceted search filter can be added here (on the shapes files array)\n  const filtered_files = state.shapes_files_list.filter( (shapes_file: any) =>{\n    if (shapes_file) {\n      if (shapes_file.label) {\n        // Filter by repo: show shapes if no repo selected, or if its repo is in list of selected repos\n        if (state.repositories_autocomplete.length == 0 || state.repositories_autocomplete.find((repo: string) => repo.includes(shapes_file.repository))) {\n          // Filter depending on shape type checkboxes:\n          if ((state.checkbox_shex === true && shapes_file.shape_type == 'http://www.w3.org/ns/shex#Schema')\n          || (state.checkbox_sparql === true && shapes_file.shape_type == 'http://www.w3.org/ns/shacl#SPARQLFunction')\n          || (state.checkbox_shacl === true && shapes_file.shape_type == 'http://www.w3.org/ns/shacl#Shape')\n          || (state.checkbox_owl === true && shapes_file.shape_type == 'http://www.w3.org/2002/07/owl#Ontology')\n          || (state.checkbox_obo === true && shapes_file.shape_type == 'http://semanticscience.org/resource/SIO_000623')\n          || (state.checkbox_skos === true && shapes_file.shape_type == 'http://www.w3.org/2004/02/skos/core#ConceptScheme')\n          || (state.checkbox_openapi === true && shapes_file.shape_type == 'https://schema.org/WebAPI')\n          ) {\n            // Filter using the search text, on all properties and metadata of the file:\n            let file_description = '';\n            if (shapes_file.repo_description) file_description = file_description + ' ' + shapes_file.repo_description;\n            if (shapes_file.shape_file_description) file_description = file_description + ' ' + shapes_file.shape_file_description;\n            if (shapes_file.sparqlEndpoint) file_description = file_description + ' ' + shapes_file.sparqlEndpoint;\n            if (shapes_file.query) file_description = file_description + ' ' + shapes_file.query;\n            return (shapes_file.label.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1 \n              || shapes_file.shapeFileUri.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n              || shapes_file.shapes && shapes_file.shapes.join(' ').toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n              || shapes_file.repository.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n              || file_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n            )\n          }\n        }\n      }\n    }\n  })\n\n  // If no repo filter, then we use the filtered list to have the repo filtered\n  // If a repo is selected we show full list, \n  // since filtering on filtered_files would show only the selected repo\n  // Return unique list of filtered repos\n  let filtered_repos: any = []\n  if (state.repositories_autocomplete.length == 0) {\n    filtered_repos = filtered_files.map( (shapes_file: any) =>{\n      return shapes_file.repository\n    }).filter((item, i, ar) => ar.indexOf(item) === i)\n  } else {\n    filtered_repos = state.shapes_files_list.map( (shapes_file: any) =>{\n      return shapes_file.repository\n    }).filter((item, i, ar) => ar.indexOf(item) === i)\n  }\n\n  // Define rendering of the page:\n  return(\n    <Container className='mainContainer'>\n      {/* <Typography variant=\"h4\" style={{textAlign: 'center'}}>\n        💠 Shapes of You\n      </Typography> */}\n\n      {state.show_pwa_alert &&\n        <Alert onClose={() => {updateState({ show_pwa_alert: false}) }} style={{marginBottom: theme.spacing(2)}}> \n          This web page is a Progressive Web App (PWA), it can be installed as a regular smartphone app, or desktop app on a laptop in a simple click! \n          <br/>On Google Chrome click the + button to the right in the URL bar. Checkout <a href=\"https://medium.com/progressivewebapps/how-to-install-a-pwa-to-your-device-68a8d37fadc1\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">this article for more details</a> about installing on various platforms.\n        </Alert>\n      }\n\n      <LoggedIn>\n        <Typography style={{textAlign: 'center', margin: theme.spacing(2, 0)}}>\n          Welcome to your semantic resources index <Value src=\"user.name\"/>!\n        </Typography>\n        {/* <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          {webId}\n        </Typography> */}\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          Hopefully, soon you will be able to bookmark your favourites resources using your SOLID account! 🔖\n        </Typography>\n      </LoggedIn>\n      {/* <LoggedOut>\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          An index of publicly available semantic resources\n        </Typography>\n      </LoggedOut> */}\n\n      <LoggedOut>\n        {state.show_info_card &&\n          <Card >\n            <CardHeader\n              // avatar={\n              //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              //     R\n              //   </Avatar>\n              // }\n              action={\n                <IconButton aria-label=\"settings\" onClick={() => { updateState({ show_info_card: false}) }}>\n                  <CloseIcon />\n                </IconButton>\n              }\n              title=\"💠 Shapes of You\"\n              subheader=\"An index of publicly available semantic resources\"\n            />\n            <CardContent>\n              <Typography style={{marginBottom: theme.spacing(2)}}>\n                Shapes of you is the best place to search and explore existing semantic shapes, ontologies, vocabularies and queries. Searching an ontology for datasets? Needing to validate RDF using SHACL or ShEx? Finding SPARQL queries about drugs? There might be a shape out there waiting for you! You can also explore shapes to find inspirations. You might even find a grlc API serving data relevant to your projects, who knows? Linked Open Data are full of surprises.\n              </Typography>\n\n              <Typography style={{marginBottom: theme.spacing(2)}}>\n                To insure their validity, all indexed files has been parsed using the corresponding python package (rdflib, obonet). You can check the list of files which failed to load in our <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\" className={classes.link}>reports</a>. Feel free to fix them if you are the owner!\n              </Typography>\n\n              {/* <a href=\"https://github.com/vemonet/shapes-of-you/actions?query=workflow%3A%22Index+shapes%22\" target=\"_blank\" rel=\"noopener noreferrer\">\n                <img src=\"https://github.com/vemonet/shapes-of-you/workflows/Index%20shapes/badge.svg\" \n                style={{marginBottom: theme.spacing(2)}} />\n              </a> */}\n\n              {/* <Typography>\n                Add the tag <code>shacl-shapes</code> or <code>shex</code> or <code>grlc</code> to your GitHub repository, we automatically index all SPARQL queries (<code>.rq</code>, <code>.sparql</code>), ShEx (<code>.shex</code>), SHACL files (<code>.ttl</code>, <code>.rdf</code>, <code>.jsonld</code>, <code>.trig</code>, <code>.nq</code>, etc) containing at least one <code>sh:NodeShape</code> from all repositories everyday at 1:00 and 13:00 🕐\n              </Typography> */}\n              <Typography>\n                Add one of those topics to your <a href=\"https://github.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> repository, or mention it in your project description on <a href=\"https://gitlab.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitLab</a> and <a href=\"https://gitee.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">Gitee</a>,&nbsp;\n                we automatically index files from public repositories everyday 🕐\n              </Typography>\n              <List>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <DeviceHubIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.w3.org/OWL/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OWL</a> ontologies</b>: add the topic <code>owl</code>, we index RDF files, with all <code>owl:Class</code> they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <MenuBookIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.w3.org/TR/swbp-skos-core-spec/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SKOS</a> vocabularies</b>: add the topic <code>skos</code>, we index RDF files, with all <code>skos:Concept</code> they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <CheckCircleIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                  > \n                    <b><a href=\"https://www.w3.org/TR/shacl/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SHACL</a> shapes</b>: add the topic <code>shacl-shapes</code>, we index RDF files, with all <code>sh:NodeShape</code> they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <BubbleChartIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://shex.io/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">ShEx</a> expressions</b>: add the topic <code>shex</code>, we index <code>.shex</code> files, and ShEx shapes defined in RDF files (but no metadata described in ShEx)\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <CodeIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.w3.org/TR/sparql11-query/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SPARQL</a> queries</b>: add the topic <code>grlc</code>, we index <code>.rq</code> and <code>.sparql</code> files, and parse <a href=\"http://grlc.io\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">grlc.io</a> APIs metadata, complying with the <a href=\"https://github.com/the-open-university/basil/wiki/Introduction\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">BASIL convention</a>\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <GavelIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"http://www.obofoundry.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OBO</a> ontologies</b>: add the topic <code>obo</code>, we index <code>.obo</code> files, with parse all terms they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <OpenAPIIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.openapis.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OpenAPI</a> specifications</b>: add the topic <code>openapi</code>, we index <code>.yml</code>, <code>.yaml</code> and <code>.json</code> files, and parse the spec to retrieve API metadata\n                  </ListItemText>\n                </ListItem>\n              </List>\n            </CardContent>\n          </Card>\n        }\n      </LoggedOut>\n\n      { state.repos_overview_chart['datasets'] && state.files_overview_chart['datasets'] &&\n        <Grid container spacing={3} style={{textAlign: 'center', marginTop: theme.spacing(2)}}>\n          <Grid item xs={12} md={6}>\n            <Paper style={{padding: theme.spacing(2, 2)}}>\n              <Typography variant=\"h6\" style={{marginBottom: theme.spacing(1)}}>Number of repositories per shape type</Typography>\n              <Bar data={state.repos_overview_chart} options={chart_options(state.repos_overview_chart['datasets'][0]['data'])}/>\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Paper style={{padding: theme.spacing(2, 2)}}>\n              <Typography variant=\"h6\" style={{marginBottom: theme.spacing(1)}}>Number of files per shape type</Typography>\n              <Bar data={state.files_overview_chart} options={chart_options(state.files_overview_chart['datasets'][0]['data'])}/>\n            </Paper>\n          </Grid>\n        </Grid>\n      }\n\n      {/* <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}></Box> */}\n      <Paper elevation={6} style={{padding: theme.spacing(3, 2), margin: theme.spacing(3, 0)}}>\n        <Typography variant=\"h5\">\n          {filtered_files.length} files in&nbsp;\n          {filtered_repos.length} repositories \n          {/* {(state.repositories_autocomplete.length > 0 && state.repositories_autocomplete.length) || Object.keys(state.repositories_hash).length} Shapes repositories  */}\n        </Typography>\n\n        {/* Filtering options */}\n        <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}>\n          {/* Search box */}\n          <Paper component=\"form\" className={classes.paperSearch}>\n            <InputBase\n              className={classes.searchInput} inputProps={{ 'aria-label': 'search' }}\n              placeholder={\"🔎 Search shapes\"}\n              onChange={searchChange}\n            />\n            <IconButton aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n\n          <TextField\n            id=\"shapes-per-page\"\n            value={state.shapes_per_page}\n            onChange={(e: any) => {updateState({shapes_per_page: e.target.value})}}\n            label=\"Files per page\"\n            type=\"number\"\n            variant=\"outlined\"\n            // style={{ backgroundColor: '#ffffff' }}\n          />\n        </Box>\n\n        {/* Autocomplete to filter by repositories */}\n        <Autocomplete\n          multiple\n          value={state.repositories_autocomplete}\n          onChange={handleAutocompleteRepositories}\n          id=\"autocomplete-repositories\"\n          options={state.repositories_hash.filter( (repo: any) =>{ return (filtered_repos.indexOf(repo.label) > -1) })\n            .map((option: any) => option.label+ \",\" + option.count + \",\" + option.description)}\n          getOptionLabel={(option) => option.split(\",\")[0].replace('https://github.com/', '')}\n          renderOption={(option: any) => (\n            <React.Fragment>\n              {option.split(\",\")[0].replace('https://github.com/', '')} ({option.split(\",\")[1]} files) \n              {option.split(\",\")[2] && \n                <React.Fragment>\n                  &nbsp;- {option.split(\",\")[2]}\n                </React.Fragment>\n              }\n            </React.Fragment>\n          )}\n          renderInput={params => <TextField {...params} \n            label=\"📁 Filter by repositories\" \n            variant=\"outlined\" \n            // style={{ backgroundColor: '#ffffff' }}\n            // onInputChange={handleAutocompleteRepositories}\n            // size='small'\n            // InputProps={{\n            //   className: classes.whiteColor\n            // }}\n            // ListboxProps={{\n            //   className: classes.whiteColor,\n            // }}\n            // getOptionLabel={option => option.title}\n            // style={{ width: '60ch' }}\n          />}\n        />\n\n        <FormGroup style={{marginTop: theme.spacing(2)}} row>\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_shacl}\n                onChange={handleCheckboxes}\n                name=\"checkbox_shacl\"\n                color=\"primary\"\n              /> }\n            label=\"SHACL\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_shex}\n                onChange={handleCheckboxes}\n                name=\"checkbox_shex\"\n                color=\"primary\"\n              /> }\n            label=\"ShEx\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_sparql}\n                onChange={handleCheckboxes}\n                name=\"checkbox_sparql\"\n                color=\"primary\"\n              /> }\n            label=\"SPARQL\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_owl}\n                onChange={handleCheckboxes}\n                name=\"checkbox_owl\"\n                color=\"primary\"\n              /> }\n            label=\"OWL\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_skos}\n                onChange={handleCheckboxes}\n                name=\"checkbox_skos\"\n                color=\"primary\"\n              /> }\n            label=\"SKOS\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_obo}\n                onChange={handleCheckboxes}\n                name=\"checkbox_obo\"\n                color=\"primary\"\n              /> }\n            label=\"OBO\"\n          />\n          <FormControlLabel\n            control={\n              <Checkbox\n                checked={state.checkbox_openapi}\n                onChange={handleCheckboxes}\n                name=\"checkbox_openapi\"\n                color=\"primary\"\n              /> }\n            label=\"OpenAPI\"\n          />\n        </FormGroup>\n\n      </Paper>\n\n      {state.shapes_files_list.length < 1 && (\n        <div style={{textAlign: 'center'}}>\n          <CircularProgress style={{padding: theme.spacing(10, 10)}} />\n        </div>\n      )}\n\n      {/* Display Shapes files */}\n      {filtered_files.slice(((state.page - 1)*(state.shapes_per_page)), ((state.page)*(state.shapes_per_page) - 1)).map(function(project: any, key: number){\n        return <Paper key={key.toString()} elevation={2} style={{padding: theme.spacing(2, 2), margin: theme.spacing(2, 0)}}>\n          <Typography variant=\"h6\">\n            File:&nbsp;\n            <b><a href={project.shapeFileUri} className={classes.link}>{project.label}</a></b>\n            {project.query && project.sparqlEndpoint &&\n              // Add YASGUI link if relevant\n              // https://yasgui.triply.cc/#query=  &endpoint=\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query) + '&endpoint=' + project.sparqlEndpoint}\n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SendIcon />\n                  &nbsp;Query on YASGUI\n                </Button>\n              </a>\n            }\n            {project.query && !project.sparqlEndpoint &&\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query)} \n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SearchIcon />\n                  &nbsp;See on YASGUI\n                </Button>\n              </a>\n            }\n            <LoggedIn>\n              <Like object={project.shapeFileUri}>the Shape</Like>\n            </LoggedIn>\n          </Typography>\n          {/* shape_file_description */}\n          {project.shape_file_description &&\n            <Typography style={{fontStyle: 'italic', margin: theme.spacing(1, 0)}}>\n              {project.shape_file_description}\n            </Typography>\n          }\n          <Typography style={{margin: theme.spacing(1, 0)}}>\n            {/* In repository:&nbsp; */}\n            <a href={project.repository} className={classes.link}>\n              📁&nbsp;{project.repository.replace('https://github.com/', '')}\n            </a>\n            {project.repo_description &&\n              <>\n                &nbsp;-&nbsp;{project.repo_description}\n              </>\n            }\n          </Typography>\n          {project.shapes &&\n            <>\n              <Typography style={{marginTop: theme.spacing(1)}}>\n                Contains {pluralize(project.shapes.length, 'Shape')}:\n              </Typography>\n              {project.shapes.map((shapeLabel: string, key: number) => {\n                // Limit shape label size to 150 chars\n                return <Chip label={shapeLabel} color='primary' key={key.toString()}\n                    style={{margin: theme.spacing(1, 1)}}/>\n                // <Tooltip title={shapeLabel} key={key.toString()}>\n                // </Tooltip>\n              })}\n            </>\n          }\n        </Paper>\n      })}\n      <Pagination count={Math.floor(filtered_files.length / state.shapes_per_page) + 1} \n        color=\"primary\" onChange={(event,val)=> updateState({page: val})} \n        style={{ display:'flex', justifyContent: 'center' }}\n      />\n    </Container>\n  )\n}\n\n// SPARQL select query to get all shapes files without the list of their shapes (much faster)\nconst getFilesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        dc:source ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri dc:description ?shape_file_description }\n}`\n\n// SPARQL select query to get all shapes files and the list of their shapes\nconst getShapesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        dc:source ?repository ;\n        dcterms:hasPart ?shapes .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri dc:description ?shape_file_description }\n}`\n// } LIMIT 1000`\n\n// SPARQL select query to get all GitHub repos, their description and the count of shapes file in it\nconst countRepositoriesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nSELECT ?repository (count(?shapeFileUri) AS ?shapeFileCount) ?repo_description WHERE { \n  ?shapeFileUri a <https://schema.org/SoftwareSourceCode> ;\n    rdfs:label ?label ;\n    dc:source ?repository .\n  OPTIONAL { ?repository rdfs:comment ?repo_description }\n} GROUP BY ?repository ?repo_description\n`\n\n// SPARQL select query which returns the count of repositories and shapes files per semantic resources types\nconst sparql_resources_overview = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT ?shape_type (count(distinct ?repository) AS ?repos_count) (count(distinct ?shape_file) AS ?files_count)\nWHERE { \n    ?shape_file a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        dc:source ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n} GROUP BY ?shape_type\n`\n\nfunction chart_options(data_array: any) {\n  return {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          suggestedMax: Math.max(...data_array) + 50\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    // maintainAspectRatio: false,\n    plugins: {\n      labels: {\n        // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'\n        render: 'value',\n        // fontSize: 12,\n\n        // font color, can be color array for each data or function for dynamic color, default is defaultFontColor\n        // fontColor: '#fff',\n        // // draw text shadows under labels, default is false\n        // textShadow: true,\n        // text shadow intensity, default is 6\n        // shadowBlur: 10,\n        // // text shadow X offset, default is 3\n        // shadowOffsetX: -5,\n        // // text shadow Y offset, default is 3\n        // shadowOffsetY: 5,\n        // // text shadow color, default is 'rgba(0,0,0,0.3)'\n        // shadowColor: 'rgba(255,0,0,0.75)',\n        // position to draw label, available value is 'default', 'border' and 'outside'\n        // bar chart ignores this\n        // default is 'default'\n        // position: 'outside',\n\n        // set images when `render` is 'image'\n        // images: [\n        //   {\n        //     src: 'image.png',\n        //     width: 16,\n        //     height: 16\n        //   }\n        // ]\n      }\n    }\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button } from \"@material-ui/core\";\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\n\n// import { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\n// import GetAppIcon from '@material-ui/icons/GetApp';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n// import { Graph } from \"perfect-graph\";\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/vemonet/shapes-of-you/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/vemonet/shapes-of-you/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { View } from \"react-native\";\nimport { Router, Route } from \"./src/components/react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport SemanticIndex from \"./src/pages/SemanticIndex\";\nimport About from \"./src/pages/About\";\n// import blue from '@material-ui/core/colors/blue';\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    // Blue\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    // Green\n    secondary: { light: '#4caf50', main: '#7e57c2', dark: '#00600f' },\n    // main: blue[700]\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst website_name = \"Shapes of you\"\nconst website_description = \"Index for publicly available semantic resources (OWL & OBO ontologies, SKOS RDF vocabularies, SHACL & ShEx shapes, SPARQL queries) stored in Git repositories (GitHub, GitLab, Gitee)\";\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Helmet>\n      <title>Shapes of you</title>\n      <meta name=\"description\" content={website_description}/>\n\n      {/* Google / Search Engine Tags */}\n      <meta itemProp=\"name\" content={website_name}/>\n      <meta itemProp=\"description\" content={website_description}/>\n      <meta itemProp=\"image\" content=\"\"/>\n\n      {/* Facebook Meta Tags */}\n      <meta property=\"og:url\" content=\"https://index.semanticscience.org\"/>\n      <meta property=\"og:type\" content=\"website\"/>\n      <meta property=\"og:title\" content={website_name}/>\n      <meta property=\"og:description\" content={website_description}/>\n      <meta property=\"og:image\" content=\"\"/>\n\n      {/* Twitter Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n      <meta name=\"twitter:title\" content={website_name}/>\n      <meta name=\"twitter:description\" content={website_description}/>\n      <meta name=\"twitter:image\" content=\"\"/>\n    </Helmet>\n    {/* <Router basename=\"/shapes-of-you/\"> */}\n    <Router basename=\"/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        <Route exact path=\"/\" component={SemanticIndex} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var map = {\n\t\"./af\": 261,\n\t\"./af.js\": 261,\n\t\"./ar\": 262,\n\t\"./ar-dz\": 263,\n\t\"./ar-dz.js\": 263,\n\t\"./ar-kw\": 264,\n\t\"./ar-kw.js\": 264,\n\t\"./ar-ly\": 265,\n\t\"./ar-ly.js\": 265,\n\t\"./ar-ma\": 266,\n\t\"./ar-ma.js\": 266,\n\t\"./ar-sa\": 267,\n\t\"./ar-sa.js\": 267,\n\t\"./ar-tn\": 268,\n\t\"./ar-tn.js\": 268,\n\t\"./ar.js\": 262,\n\t\"./az\": 269,\n\t\"./az.js\": 269,\n\t\"./be\": 270,\n\t\"./be.js\": 270,\n\t\"./bg\": 271,\n\t\"./bg.js\": 271,\n\t\"./bm\": 272,\n\t\"./bm.js\": 272,\n\t\"./bn\": 273,\n\t\"./bn-bd\": 274,\n\t\"./bn-bd.js\": 274,\n\t\"./bn.js\": 273,\n\t\"./bo\": 275,\n\t\"./bo.js\": 275,\n\t\"./br\": 276,\n\t\"./br.js\": 276,\n\t\"./bs\": 277,\n\t\"./bs.js\": 277,\n\t\"./ca\": 278,\n\t\"./ca.js\": 278,\n\t\"./cs\": 279,\n\t\"./cs.js\": 279,\n\t\"./cv\": 280,\n\t\"./cv.js\": 280,\n\t\"./cy\": 281,\n\t\"./cy.js\": 281,\n\t\"./da\": 282,\n\t\"./da.js\": 282,\n\t\"./de\": 283,\n\t\"./de-at\": 284,\n\t\"./de-at.js\": 284,\n\t\"./de-ch\": 285,\n\t\"./de-ch.js\": 285,\n\t\"./de.js\": 283,\n\t\"./dv\": 286,\n\t\"./dv.js\": 286,\n\t\"./el\": 287,\n\t\"./el.js\": 287,\n\t\"./en-au\": 288,\n\t\"./en-au.js\": 288,\n\t\"./en-ca\": 289,\n\t\"./en-ca.js\": 289,\n\t\"./en-gb\": 290,\n\t\"./en-gb.js\": 290,\n\t\"./en-ie\": 291,\n\t\"./en-ie.js\": 291,\n\t\"./en-il\": 292,\n\t\"./en-il.js\": 292,\n\t\"./en-in\": 293,\n\t\"./en-in.js\": 293,\n\t\"./en-nz\": 294,\n\t\"./en-nz.js\": 294,\n\t\"./en-sg\": 295,\n\t\"./en-sg.js\": 295,\n\t\"./eo\": 296,\n\t\"./eo.js\": 296,\n\t\"./es\": 297,\n\t\"./es-do\": 298,\n\t\"./es-do.js\": 298,\n\t\"./es-mx\": 299,\n\t\"./es-mx.js\": 299,\n\t\"./es-us\": 300,\n\t\"./es-us.js\": 300,\n\t\"./es.js\": 297,\n\t\"./et\": 301,\n\t\"./et.js\": 301,\n\t\"./eu\": 302,\n\t\"./eu.js\": 302,\n\t\"./fa\": 303,\n\t\"./fa.js\": 303,\n\t\"./fi\": 304,\n\t\"./fi.js\": 304,\n\t\"./fil\": 305,\n\t\"./fil.js\": 305,\n\t\"./fo\": 306,\n\t\"./fo.js\": 306,\n\t\"./fr\": 307,\n\t\"./fr-ca\": 308,\n\t\"./fr-ca.js\": 308,\n\t\"./fr-ch\": 309,\n\t\"./fr-ch.js\": 309,\n\t\"./fr.js\": 307,\n\t\"./fy\": 310,\n\t\"./fy.js\": 310,\n\t\"./ga\": 311,\n\t\"./ga.js\": 311,\n\t\"./gd\": 312,\n\t\"./gd.js\": 312,\n\t\"./gl\": 313,\n\t\"./gl.js\": 313,\n\t\"./gom-deva\": 314,\n\t\"./gom-deva.js\": 314,\n\t\"./gom-latn\": 315,\n\t\"./gom-latn.js\": 315,\n\t\"./gu\": 316,\n\t\"./gu.js\": 316,\n\t\"./he\": 317,\n\t\"./he.js\": 317,\n\t\"./hi\": 318,\n\t\"./hi.js\": 318,\n\t\"./hr\": 319,\n\t\"./hr.js\": 319,\n\t\"./hu\": 320,\n\t\"./hu.js\": 320,\n\t\"./hy-am\": 321,\n\t\"./hy-am.js\": 321,\n\t\"./id\": 322,\n\t\"./id.js\": 322,\n\t\"./is\": 323,\n\t\"./is.js\": 323,\n\t\"./it\": 324,\n\t\"./it-ch\": 325,\n\t\"./it-ch.js\": 325,\n\t\"./it.js\": 324,\n\t\"./ja\": 326,\n\t\"./ja.js\": 326,\n\t\"./jv\": 327,\n\t\"./jv.js\": 327,\n\t\"./ka\": 328,\n\t\"./ka.js\": 328,\n\t\"./kk\": 329,\n\t\"./kk.js\": 329,\n\t\"./km\": 330,\n\t\"./km.js\": 330,\n\t\"./kn\": 331,\n\t\"./kn.js\": 331,\n\t\"./ko\": 332,\n\t\"./ko.js\": 332,\n\t\"./ku\": 333,\n\t\"./ku.js\": 333,\n\t\"./ky\": 334,\n\t\"./ky.js\": 334,\n\t\"./lb\": 335,\n\t\"./lb.js\": 335,\n\t\"./lo\": 336,\n\t\"./lo.js\": 336,\n\t\"./lt\": 337,\n\t\"./lt.js\": 337,\n\t\"./lv\": 338,\n\t\"./lv.js\": 338,\n\t\"./me\": 339,\n\t\"./me.js\": 339,\n\t\"./mi\": 340,\n\t\"./mi.js\": 340,\n\t\"./mk\": 341,\n\t\"./mk.js\": 341,\n\t\"./ml\": 342,\n\t\"./ml.js\": 342,\n\t\"./mn\": 343,\n\t\"./mn.js\": 343,\n\t\"./mr\": 344,\n\t\"./mr.js\": 344,\n\t\"./ms\": 345,\n\t\"./ms-my\": 346,\n\t\"./ms-my.js\": 346,\n\t\"./ms.js\": 345,\n\t\"./mt\": 347,\n\t\"./mt.js\": 347,\n\t\"./my\": 348,\n\t\"./my.js\": 348,\n\t\"./nb\": 349,\n\t\"./nb.js\": 349,\n\t\"./ne\": 350,\n\t\"./ne.js\": 350,\n\t\"./nl\": 351,\n\t\"./nl-be\": 352,\n\t\"./nl-be.js\": 352,\n\t\"./nl.js\": 351,\n\t\"./nn\": 353,\n\t\"./nn.js\": 353,\n\t\"./oc-lnc\": 354,\n\t\"./oc-lnc.js\": 354,\n\t\"./pa-in\": 355,\n\t\"./pa-in.js\": 355,\n\t\"./pl\": 356,\n\t\"./pl.js\": 356,\n\t\"./pt\": 357,\n\t\"./pt-br\": 358,\n\t\"./pt-br.js\": 358,\n\t\"./pt.js\": 357,\n\t\"./ro\": 359,\n\t\"./ro.js\": 359,\n\t\"./ru\": 360,\n\t\"./ru.js\": 360,\n\t\"./sd\": 361,\n\t\"./sd.js\": 361,\n\t\"./se\": 362,\n\t\"./se.js\": 362,\n\t\"./si\": 363,\n\t\"./si.js\": 363,\n\t\"./sk\": 364,\n\t\"./sk.js\": 364,\n\t\"./sl\": 365,\n\t\"./sl.js\": 365,\n\t\"./sq\": 366,\n\t\"./sq.js\": 366,\n\t\"./sr\": 367,\n\t\"./sr-cyrl\": 368,\n\t\"./sr-cyrl.js\": 368,\n\t\"./sr.js\": 367,\n\t\"./ss\": 369,\n\t\"./ss.js\": 369,\n\t\"./sv\": 370,\n\t\"./sv.js\": 370,\n\t\"./sw\": 371,\n\t\"./sw.js\": 371,\n\t\"./ta\": 372,\n\t\"./ta.js\": 372,\n\t\"./te\": 373,\n\t\"./te.js\": 373,\n\t\"./tet\": 374,\n\t\"./tet.js\": 374,\n\t\"./tg\": 375,\n\t\"./tg.js\": 375,\n\t\"./th\": 376,\n\t\"./th.js\": 376,\n\t\"./tk\": 377,\n\t\"./tk.js\": 377,\n\t\"./tl-ph\": 378,\n\t\"./tl-ph.js\": 378,\n\t\"./tlh\": 379,\n\t\"./tlh.js\": 379,\n\t\"./tr\": 380,\n\t\"./tr.js\": 380,\n\t\"./tzl\": 381,\n\t\"./tzl.js\": 381,\n\t\"./tzm\": 382,\n\t\"./tzm-latn\": 383,\n\t\"./tzm-latn.js\": 383,\n\t\"./tzm.js\": 382,\n\t\"./ug-cn\": 384,\n\t\"./ug-cn.js\": 384,\n\t\"./uk\": 385,\n\t\"./uk.js\": 385,\n\t\"./ur\": 386,\n\t\"./ur.js\": 386,\n\t\"./uz\": 387,\n\t\"./uz-latn\": 388,\n\t\"./uz-latn.js\": 388,\n\t\"./uz.js\": 387,\n\t\"./vi\": 389,\n\t\"./vi.js\": 389,\n\t\"./x-pseudo\": 390,\n\t\"./x-pseudo.js\": 390,\n\t\"./yo\": 391,\n\t\"./yo.js\": 391,\n\t\"./zh-cn\": 392,\n\t\"./zh-cn.js\": 392,\n\t\"./zh-hk\": 393,\n\t\"./zh-hk.js\": 393,\n\t\"./zh-mo\": 394,\n\t\"./zh-mo.js\": 394,\n\t\"./zh-tw\": 395,\n\t\"./zh-tw.js\": 395\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 701;"],"sourceRoot":""}