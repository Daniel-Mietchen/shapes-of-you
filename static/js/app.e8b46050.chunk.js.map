{"version":3,"sources":["assets/icon.png","src/pages/Yasgui.tsx","src/components/QueryYasguiButton.tsx","src/components/SparqlEndpointsDisplay.tsx","src/components/NavBar.tsx","src/components/Footer.tsx","src/pages/About.tsx","src/pages/SemanticIndex.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/shapes-of-you/shapes-of-you/App.css?048e","App.css","node_modules/moment/locale sync /^/.//.*$"],"names":["module","exports","makeStyles","theme","link","textDecoration","color","palette","primary","main","secondary","paperPadding","padding","spacing","YasguiPage","props","React","useEffect","endpoint","query","sparql_endpoint","Yasgui","defaults","requestConfig","document","getElementById","copyEndpointOnNewTab","addTab","Tab","getDefaults","yasqe","value","window","scrollTo","get_sparql_endpoints_query","axios","get","endpointToQuery","encodeURIComponent","then","res","yasgui","results_array","data","results","bindings","queries_obj","map","result","file_label","Object","keys","name","substring","catch","error","console","log","Container","id","useStyles","QueryYasguiButton","useTheme","useState","open","setOpen","anchorEl","setAnchorEl","handleClick","event","body","prev","handleClickAway","Button","variant","style","margin","onClick","Popper","onKeyDown","e","key","width","position","top","popperOptions","ClickAwayListener","onClickAway","Card","CardHeader","action","IconButton","aria-label","title","subheader","paddingBottom","CardContent","paperSearch","display","alignItems","marginRight","searchInput","marginLeft","fontSize","flex","SparqlEndpointsDisplay","classes","sparql_endpoints_obj","search","state","setState","stateRef","useRef","updateState","useCallback","update","current","endpoint_url","query_obj","query_file","file_description","push","length","textAlign","CircularProgress","List","ListItem","ListItemAvatar","ListItemText","href","className","target","rel","queries","menuButton","common","white","solidButton","backgroundColor","borderRadius","dark","cursor","linkButton","textTransform","linkLogo","NavBar","AppBar","Toolbar","to","Tooltip","src","iconImage","height","alt","AuthButton","popup","darkLink","light","whiteLink","footer","marginTop","Copyright","Typography","align","Footer","maxWidth","marginBottom","About","show_info_card","aria-expanded","Collapse","in","timeout","unmountOnExit","Avatar","SemanticIndex","webId","useWebId","global_shapes_array","expanded_files","webid","shapes_files_list","repositories_hash","repositories_autocomplete","repos_overview_chart","files_overview_chart","type_checkboxes","SPARQL","OWL","SKOS","OBO","SHACL","ShEx","RML","R2RML","Nanopub","OpenAPI","Dataset","search_repos_only","show_pwa_alert","page","shapes_per_page","shape_types_mappings","getFileLabel","file_type","icon","chart_colors","labels","datasets","label","sparql_resources_overview","shape_type","repos_count","files_count","getFilesQuery","sparqlResultArray","file_url","shapeFileUri","file_obj","search_description","shape_file_description","description","sparqlEndpoint","repo_url","repository","repo_index","findIndex","obj","url","repo_description","countRepositoriesQuery","count","shapeFileCount","location","replace","put","createSolidFile","handleCheckboxes","checked","handleExpandClick","currentTarget","filtered_files","filter","repo","toLowerCase","indexOf","reduce","filtered","filtered_repo","files","file","type","LoggedIn","Value","Grid","container","item","xs","md","Paper","options","scales","yAxes","ticks","beginAtZero","xAxes","legend","plugins","datalabels","ChartDataLabels","elevation","Box","component","InputBase","inputProps","placeholder","onChange","TextField","FormGroup","row","checkbox","FormControlLabel","control","Checkbox","size","checkboxes","slice","repo_obj","toString","CardActions","disableSpacing","source","renderers","paragraph","Pagination","Math","floor","val","justifyContent","createMuiTheme","typography","website_description","App","Helmet","content","itemProp","property","basename","View","exact","path","navigator","addEventListener","serviceWorker","register","scope","info","api","__esModule","default","i","locals","___CSS_LOADER_API_IMPORT___","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","code","resolve"],"mappings":"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","file":"static/js/app.e8b46050.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","import React from \"react\";\n// import { useLocation } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Container } from \"@material-ui/core\";\nimport axios from 'axios';\n\nimport Yasgui from \"@triply/yasgui\";\nimport \"@triply/yasgui/build/yasgui.min.css\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n}));\n\nexport default function YasguiPage(props: any) {\n  // const classes = useStyles();\n  // const theme = useTheme();\n  // useLocation hook to get URL params\n  // let location = useLocation();\n\n  React.useEffect(() => {\n    // Get params from URL\n    // const params = new URLSearchParams(location.search + location.hash);\n    // let sparql_endpoint: any = params.get('endpoint');\n    \n    if (props.endpoint && props.query) {\n      // If endpoint and query provided we add 1 tab for this query to query this endpoint\n      const sparql_endpoint = props.endpoint\n      Yasgui.defaults.requestConfig.endpoint = sparql_endpoint;\n      // @ts-ignore If endpoint and query provided\n      let yasgui: any = new Yasgui(document.getElementById('yasguiDiv'), {\n        requestConfig: { endpoint: sparql_endpoint },\n        endpoint: sparql_endpoint,\n        copyEndpointOnNewTab: true,\n      });\n      yasgui.addTab(\n        true, // set as active tab\n        { ...Yasgui.Tab.getDefaults(), yasqe: { value: props.query }}\n      );\n      window.scrollTo(0, 0)\n\n    } else if (props.endpoint) {\n      // If only the endpoint is provided, we import all queries for this endpoint\n      let sparql_endpoint: any = props.endpoint\n      const get_sparql_endpoints_query = `PREFIX schema: <https://schema.org/>\n        PREFIX void: <http://rdfs.org/ns/void#>\n        PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\n        SELECT DISTINCT * WHERE { \n          ?sparql_endpoint a schema:EntryPoint .\n          ?query_file void:sparqlEndpoint ?sparql_endpoint ;\n            rdfs:label ?file_label ;\n            schema:query ?query .\n          FILTER (?sparql_endpoint = <` + sparql_endpoint + `>)\n          OPTIONAL { ?query_file rdfs:comment ?file_description }\n        }`\n      const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n      axios.get(endpointToQuery + `?query=` + encodeURIComponent(get_sparql_endpoints_query))\n        .then((res: any) => {\n          Yasgui.defaults.requestConfig.endpoint = sparql_endpoint;\n          // @ts-ignore Set YASGUI to serve all queries of the selected endpoint\n          let yasgui: any = new Yasgui(document.getElementById('yasguiDiv'), {\n            requestConfig: { endpoint: sparql_endpoint },\n            endpoint: sparql_endpoint,\n            copyEndpointOnNewTab: true,\n          });\n\n          const results_array = res.data.results.bindings;\n          let queries_obj: any = {}\n          results_array.map((result: any): any =>  {\n            // let endpoint_obj = {'endpoint': result.sparql_endpoint.value}\n            queries_obj[result.file_label.value] = result.query.value\n          })\n          // let tab: any = yasgui.getTab();\n          // tab.close();\n          // Add tab to yasgui for each file\n          Object.keys(queries_obj).map((file_label: any) => {\n            // if (!yasgui.getTab(file_label)) {\n            yasgui.addTab(\n              true, // set as active tab\n              { ...Yasgui.Tab.getDefaults(), name: file_label.substring(0,30),\n                yasqe: { value: queries_obj[file_label] }}\n            );\n          })\n          window.scrollTo(0, 0)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n\n    } else if (props.query) {\n      // @ts-ignore Add tab if only query provided\n      let yasgui: any = new Yasgui(document.getElementById('yasguiDiv'), {});\n      yasgui.addTab(\n        true, // set as active tab\n        { ...Yasgui.Tab.getDefaults(), yasqe: { value: props.query }}\n      );\n      window.scrollTo(0, 0)\n    }\n  })\n\n  return (\n    <Container>\n      <div id=\"yasguiDiv\"></div>\n    </Container>\n  )\n}\n","import React from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Button, Card, CardContent, CardHeader, ClickAwayListener, IconButton, Popper } from \"@material-ui/core\";\nimport SendIcon from '@material-ui/icons/Send';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Yasgui from \"../pages/Yasgui\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n}));\n\nexport default function QueryYasguiButton(props: any) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // Settings for Popper\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl]: any = React.useState(null);\n  const handleClick = (event: any) => {\n    // setAnchorEl(anchorEl ? null : event.currentTarget);\n    setAnchorEl(anchorEl ? null : document.body);\n    setOpen((prev) => !prev);\n  };\n  const handleClickAway = () => {\n    setOpen(false);\n    setAnchorEl(anchorEl ? null : anchorEl);\n  };\n  const id = open ? 'simple-popper' : undefined;\n\n  // const yasgui_query_url ='/yasgui?endpoint=' + props.endpoint;\n\n  return (\n    <>\n      { !props.endpoint && !props.query &&\n        <>\n        </>\n      }\n      { props.endpoint &&\n        <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}} onClick={handleClick}>\n          <SendIcon />\n          &nbsp;Query with YASGUI\n        </Button>\n      }\n      { !props.endpoint && props.query &&\n        <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}} onClick={handleClick}>\n          <SearchIcon />\n          &nbsp;See with YASGUI\n        </Button>\n      }\n      <Popper open={open} anchorEl={anchorEl}\n        onKeyDown={(e) => {\n            if (e.key === \"Escape\") handleClickAway()\n        }}\n        style={{width: '99%', position: 'absolute', top: '0'}}\n        popperOptions={{'positionFixed': true}}\n        >\n        <ClickAwayListener onClickAway={handleClickAway}>\n          <Card >\n              <CardHeader\n                action={\n                  <IconButton aria-label=\"settings\" onClick={handleClickAway}>\n                    <CloseIcon />\n                  </IconButton>\n                }\n                title=\"Query SPARQL endpoints with YASGUI ✨️\"\n                subheader='To reduce the number of YASGUI tabs, right click on a tab, and select \"Close other tabs\"'\n                style={{paddingBottom: '0px'}}\n              />\n            <CardContent>\n              <Yasgui endpoint={props.endpoint} query={props.query} />\n            </CardContent>\n          </Card>\n        </ClickAwayListener>\n      </Popper>\n    </>\n  )\n}","  import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Container, CircularProgress } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText } from \"@material-ui/core\";\nimport axios from 'axios';\n\nimport QueryYasguiButton from \"./QueryYasguiButton\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SparqlEndpointsDisplay() {\n  const classes = useStyles();\n  const theme = useTheme();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    sparql_endpoints_obj: {},\n    search: '',\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n\n  // At start: query SPARQL endpoint to get the SPARQL endpoints infos\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(get_sparql_endpoints_query))\n      .then(res => {\n        const results_array = res.data.results.bindings;\n        let sparql_endpoints_obj: any = {}\n        results_array.map((result: any): any =>  {\n          let endpoint_obj = {'endpoint': result.sparql_endpoint.value}\n          // @ts-ignore\n          // sparql_endpoints_array.push([{\n          //   'endpoint': result.sparql_endpoint.value\n          // }]);\n          const endpoint_url = result.sparql_endpoint.value\n          if (!sparql_endpoints_obj[endpoint_url]) {\n            sparql_endpoints_obj[endpoint_url] = {\n              'url': endpoint_url,\n              'queries': []\n            }\n          }\n          let query_obj = {'url': result.query_file.value}\n          if (result.file_description) query_obj['description'] = result.file_description.value\n          if (result.query) query_obj['query'] = result.query.value\n          sparql_endpoints_obj[endpoint_url]['queries'].push(query_obj)\n          result.query_file.value\n        })\n        console.log(sparql_endpoints_obj)\n        updateState({ sparql_endpoints_obj: sparql_endpoints_obj })\n      })\n      .catch(error => {\n        console.log(error)\n      })\n  }, [])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n  \n  // Define rendering of the page:\n  return(\n    <Container>\n      {Object.keys(state.sparql_endpoints_obj).length < 1 && (\n        <div style={{textAlign: 'center'}}>\n          <CircularProgress style={{padding: theme.spacing(10, 10)}} />\n        </div>\n      )}\n\n      {Object.keys(state.sparql_endpoints_obj).length >= 1 && (\n        <List>\n          {Object.keys(state.sparql_endpoints_obj).map(function(sparql_endpoint: any, key: number){\n            return <ListItem key={key}>\n              <ListItemAvatar>\n                <QueryYasguiButton endpoint={sparql_endpoint} />\n              </ListItemAvatar>\n              <ListItemText>\n                <b><a href={sparql_endpoint} className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">{sparql_endpoint}</a></b> - {state.sparql_endpoints_obj[sparql_endpoint].queries.length} SPARQL queries\n              </ListItemText>\n            </ListItem>\n          })}\n        </List>\n      )}\n    </Container>\n  )\n}\n\n// SPARQL select query which returns the count of repositories and shapes files per semantic resources types\nconst get_sparql_endpoints_query = `PREFIX schema: <https://schema.org/>\nPREFIX void: <http://rdfs.org/ns/void#>\nPREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nSELECT DISTINCT * WHERE { \n  ?sparql_endpoint a schema:EntryPoint .\n  ?query_file void:sparqlEndpoint ?sparql_endpoint .\n  OPTIONAL { ?query_file schema:query ?query }\n  OPTIONAL { ?query_file rdfs:comment ?file_description }\n}\n`\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, Popper, ClickAwayListener, Card, CardContent, CardHeader, IconButton } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport GrlcApiIcon from '@material-ui/icons/Send';\nimport ActiveEndpointsIcon from '@material-ui/icons/OfflineBolt';\n\nimport { AuthButton, Value } from '@solid/react';\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\nimport SparqlEndpointsDisplay from \"./SparqlEndpointsDisplay\";\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white,\n    margin: theme.spacing(0, 1)\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none',\n    margin: theme.spacing(0, 1)\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(0, 2)\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    // margin: theme.spacing(2, 2),\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  // Settings for Popper\n  const [open, setOpen] = React.useState(false);\n  const [anchorEl, setAnchorEl]: any = React.useState(null);\n  const handleClick = (event: any) => {\n    // setAnchorEl(anchorEl ? null : event.currentTarget);\n    setAnchorEl(anchorEl ? null : document.body);\n    setOpen((prev) => !prev);\n  };\n  const handleClickAway = () => {\n    setOpen(false);\n    setAnchorEl(anchorEl ? null : anchorEl);\n  };\n  const id = open ? 'simple-popper' : undefined;\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='Shapes of you homepage'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        <Tooltip title='Access the grlc OpenAPI (which query the SPARQL endpoint)'>\n          <Button className={classes.menuButton} target=\"_blank\" rel=\"noopener noreferrer\"\n          href=\"http://grlc.io/api-git/vemonet/shapes-of-you/subdir/api\">\n            <GrlcApiIcon style={{ marginRight: theme.spacing(1)}} />\n            API docs\n          </Button>\n        </Tooltip>\n        {/* <Tooltip title='Query the SPARQL endpoint with YASGUI'>\n          <Button className={classes.menuButton} target=\"_blank\" rel=\"noopener noreferrer\"\n          href=\"/yasgui?endpoint=https://graphdb.dumontierlab.com/repositories/shapes-registry\">\n            <SparqlIcon style={{ marginRight: theme.spacing(1)}} />\n            Query with SPARQL\n          </Button>\n        </Tooltip> */}\n        <Tooltip  title='List of active SPARQL endpoints, and their associated queries'>\n          <Button className={classes.menuButton} onClick={handleClick}>\n            <ActiveEndpointsIcon style={{ marginRight: theme.spacing(1)}} />\n            Active endpoints\n          </Button>\n        </Tooltip>\n        <Popper open={open} anchorEl={anchorEl} \n          onKeyDown={(e) => {\n            if (e.key === \"Escape\") handleClickAway()\n          }}\n          style={{width: '99%', position: 'absolute', top: '0'}}\n          popperOptions={{'positionFixed': true}}>\n          <ClickAwayListener onClickAway={handleClickAway}>\n            <Card >\n                <CardHeader\n                  action={\n                    <IconButton aria-label=\"settings\" onClick={handleClickAway}>\n                      <CloseIcon />\n                    </IconButton>\n                  }\n                  title=\"⚡️ List of active SPARQL endpoints extracted from queries metadata\"\n                  subheader='Each endpoint has been tested to make sure they are active. We automatically import all SPARQL queries in YASGUI for the endpoint you select'\n                  style={{paddingBottom: '0px'}}\n                />\n              <CardContent>\n                <SparqlEndpointsDisplay />\n              </CardContent>\n            </Card>\n          </ClickAwayListener>\n        </Popper>\n\n        <div className=\"flexGrow\"></div>\n\n        <a href=\"https://github.com/vemonet/shapes-of-you/actions?query=workflow%3A%22Index+shapes%22\"\n          className={classes.linkButton} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Tooltip title='Checkout the indexing workflow runs status'>\n            <img src=\"https://github.com/vemonet/shapes-of-you/workflows/Index%20shapes/badge.svg\" />\n          </Tooltip>\n        </a>\n        <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\"\n          className={classes.linkButton} target=\"_blank\" rel=\"noopener noreferrer\">\n          <Tooltip title='Reports for the files which failed to process, and that need to be fixed by their owners. Also known as the semantic web of shame'>\n            <img src=\"https://img.shields.io/badge/📎%20Index%20shapes-reports-ffa000\" />\n          </Tooltip>\n        </a>\n        <Tooltip  title='Go to https://github.com/vemonet/shapes-of-you'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/vemonet/shapes-of-you\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <Tooltip title='Login with SOLID'> */}\n        <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/>\n        {/* </Tooltip> */}\n        {/* <AuthButton popup=\"https://solidcommunity.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Vincent Emonet\n      </a>{' '}\n      {'2021'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" style={{ marginBottom: theme.spacing(1)}}>\n            Built for you, to explore the semantic space ✨ website under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/vemonet/shapes-of-you/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}\n\n// Set state in functional style:\n// const [state, setState] = React.useState({search: '', name: 'Vincent'});\n// console.log(state.search);\n// // Set search without chaging name\n// setState({...state, search: 'yo'})\n// const onNameChange = React.useCallback((filterName) => {\n//   console.log('callback', state.name);\n// },\n// [state.name]);\n// // Tells callback to reload when change to state.name\n\n// React.useEffect(() => {\n//   console.log('componentDID mount');\n//   return () => {\n//     console.log('willMount');\n//   }\n// }, []) \n// Empty dep list: will only run when componentDidMount","import React from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader, Collapse, CardActions, List, ListItem, ListItemAvatar, Avatar, ListItemText } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport OpenAPIIcon from '@material-ui/icons/Adjust';\nimport RmlIcon from '@material-ui/icons/AllInclusive';\nimport R2rmlIcon from '@material-ui/icons/Storage';\nimport NanopubIcon from '@material-ui/icons/Chat';\nimport DatasetIcon from '@material-ui/icons/Archive';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\n\n// import { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\n// import GetAppIcon from '@material-ui/icons/GetApp';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n// import { Graph } from \"perfect-graph\";\n\nconst useStyles = makeStyles(theme => ({\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const theme = useTheme();\n  \n  const [state, setState] = React.useState({\n    show_info_card: false,\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  return(\n    <Card >\n        <CardHeader\n          action={\n            <IconButton style={{fontSize: '16px'}}\n              onClick={() => { updateState({ show_info_card: !state.show_info_card}) }}\n              name='show_info_card'\n              aria-expanded={state.show_info_card}\n              aria-label=\"show about\"\n            >\n              About&nbsp;\n              {!state.show_info_card &&\n                <ExpandMoreIcon />\n              }\n              {state.show_info_card &&\n                <ExpandLessIcon />\n              }\n            </IconButton>\n          }\n          title=\"💠 Shapes of You\"\n          subheader=\"An index of publicly available semantic resources\"\n        />\n\n\n        <Collapse in={state.show_info_card} timeout=\"auto\" unmountOnExit>\n          <CardContent>\n            <Typography style={{marginBottom: theme.spacing(2)}}>\n              Shapes of you is the best place to search and explore existing semantic shapes, ontologies, vocabularies and queries. Searching an ontology for datasets? Needing to validate RDF using SHACL or ShEx? Finding SPARQL queries about drugs? There might be a shape out there waiting for you! You can also explore shapes to find inspirations. You might even find a grlc API serving data relevant to your projects, who knows? Linked Open Data are full of surprises.\n            </Typography>\n\n            <Typography style={{marginBottom: theme.spacing(2)}}>\n              To insure their validity, all indexed files has been parsed using the corresponding python package (rdflib, obonet, prance). You can check the list of files which failed to load in our <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\" className={classes.link}>reports</a>. Feel free to fix them if you are the owner!\n            </Typography>\n\n            {/* <a href=\"https://github.com/vemonet/shapes-of-you/actions?query=workflow%3A%22Index+shapes%22\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src=\"https://github.com/vemonet/shapes-of-you/workflows/Index%20shapes/badge.svg\" \n              style={{marginBottom: theme.spacing(2)}} />\n            </a> */}\n\n            {/* <Typography>\n              Add the tag <code>shacl-shapes</code> or <code>shex</code> or <code>grlc</code> to your GitHub repository, we automatically index all SPARQL queries (<code>.rq</code>, <code>.sparql</code>), ShEx (<code>.shex</code>), SHACL files (<code>.ttl</code>, <code>.rdf</code>, <code>.jsonld</code>, <code>.trig</code>, <code>.nq</code>, etc) containing at least one <code>sh:NodeShape</code> from all repositories everyday at 1:00 and 13:00 🕐\n            </Typography> */}\n            <Typography>\n              Add one of those topics to your <a href=\"https://github.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> repository, or mention it in your project description on <a href=\"https://gitlab.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitLab</a> and <a href=\"https://gitee.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">Gitee</a>,&nbsp;\n              we automatically index files from public repositories everyday 🕐\n            </Typography>\n            <List>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <DeviceHubIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://www.w3.org/OWL/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OWL</a> ontologies</b>: add the topic <code>owl</code>, we index RDF files, with all <code>owl:Class</code> they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <MenuBookIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://www.w3.org/TR/swbp-skos-core-spec/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SKOS</a> vocabularies</b>: add the topic <code>skos</code>, we index RDF files, with all <code>skos:Concept</code> they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <CheckCircleIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText\n                > \n                  <b><a href=\"https://www.w3.org/TR/shacl/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SHACL</a> shapes</b>: add the topic <code>shacl-shapes</code>, we index RDF files, with all <code>sh:NodeShape</code> they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <BubbleChartIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://shex.io/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">ShEx</a> expressions</b>: add the topic <code>shex</code>, we index <code>.shex</code> files, and ShEx shapes defined in RDF files (but no metadata described in ShEx)\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <CodeIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://www.w3.org/TR/sparql11-query/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SPARQL</a> queries</b>: add the topic <code>grlc</code>, we index <code>.rq</code> and <code>.sparql</code> files, and parse <a href=\"http://grlc.io\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">grlc.io</a> APIs metadata, complying with the <a href=\"https://github.com/the-open-university/basil/wiki/Introduction\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">BASIL convention</a>\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <RmlIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://rml.io/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">RML</a> mappings</b>: add the topic <code>rml</code>, we index RDF files, with all <code>r2rml:SubjectMap</code> and <code>rml:LogicalSource</code> they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <R2rmlIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://www.w3.org/TR/r2rml/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">R2RML</a> mappings</b>: add the topic <code>r2rml</code>, we index RDF files, with all <code>r2rml:SubjectMap</code> they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <NanopubIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"http://nanopub.org/wordpress/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">Nanopublication</a> templates</b>: add the topic <code>nanopub</code>, we index RDF files, with all <code>nt:AssertionTemplates</code> and inputs they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <GavelIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"http://www.obofoundry.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OBO</a> ontologies</b>: add the topic <code>obo</code>, we index <code>.obo</code> files, and parse all terms they contain\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <OpenAPIIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                  <b><a href=\"https://www.openapis.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OpenAPI</a> specifications</b>: add the topic <code>openapi</code>, we index <code>.yml</code>, <code>.yaml</code> and <code>.json</code> files, and parse the spec to retrieve API metadata\n                </ListItemText>\n              </ListItem>\n              <ListItem>\n                <ListItemAvatar>\n                  <Avatar>\n                    <DatasetIcon />\n                  </Avatar>\n                </ListItemAvatar>\n                <ListItemText>\n                <b><a href=\"https://www.w3.org/TR/vocab-dcat-3/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">DCAT</a> datasets</b>: add the topic <code>dataset</code>, we index RDF files, with all <code>dcat:Dataset</code> they contain\n                </ListItemText>\n              </ListItem>\n            </List>\n          </CardContent>\n        </Collapse>\n      </Card>\n  )\n}","import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader, Collapse, CardActions } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import Alert from '@material-ui/lab/Alert';\n\nimport ReactMarkdown from 'react-markdown'\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\n\n\nimport QueryYasguiButton from \"../components/QueryYasguiButton\";\nimport About from \"./About\";\n\nimport { LoggedIn, LoggedOut, Value, useWebId, useLDflexValue, useLDflexList } from '@solid/react';\nimport { Like } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\n// import { data } from \"@solid/query-ldflex\";\n// import SolidStar from \"./SolidStar\";\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SemanticIndex() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const webId = useWebId();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    global_shapes_array: [],\n    expanded_files: {},\n    webid: '',\n    shapes_files_list: [],\n    search: '',\n    repositories_hash: [],\n    repositories_autocomplete: [],\n    repos_overview_chart: {},\n    files_overview_chart: {},\n    type_checkboxes: {\n      SPARQL: true,\n      OWL: true,\n      SKOS: true,\n      OBO: true,\n      SHACL: true,\n      ShEx: true,\n      RML: true,\n      R2RML: true,\n      Nanopub: true,\n      OpenAPI: true,\n      Dataset: true,\n    },\n    search_repos_only: false,\n    show_pwa_alert: false,\n    page: 1,\n    shapes_per_page: 20,\n    show_info_card: false,\n  });\n  const stateRef = React.useRef(state);\n  // Avoid conflict when async calls\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n  const shape_types_mappings = {\n    'http://www.w3.org/ns/shacl#Shape': 'SHACL',\n    'http://www.w3.org/2002/07/owl#Ontology': 'OWL',\n    'http://www.w3.org/ns/shex#Schema': 'ShEx',\n    'http://www.w3.org/ns/shacl#SPARQLFunction': 'SPARQL',\n    'http://www.w3.org/2004/02/skos/core#ConceptScheme': 'SKOS',\n    'http://semanticscience.org/resource/SIO_000623': 'OBO',\n    'https://schema.org/APIReference': 'OpenAPI',\n    'http://www.w3.org/ns/r2rml#TriplesMap': 'R2RML',\n    'http://semweb.mmlab.be/ns/rml#LogicalSource': 'RML',\n    'https://w3id.org/np/o/ntemplate/AssertionTemplate': 'Nanopub',\n    'http://www.w3.org/ns/dcat#Dataset': 'Dataset'\n  }\n\n  function getFileLabel(file_type: string) {\n    let icon = '📄';\n    if (shape_types_mappings[file_type] == 'OWL' || file_type == 'OWL') icon = '🦉'\n    if (shape_types_mappings[file_type] == 'ShEx' || file_type == 'ShEx') icon = '✴️'\n    if (shape_types_mappings[file_type] == 'SHACL' || file_type == 'SHACL') icon = '💠'\n    if (shape_types_mappings[file_type] == 'RML' || file_type == 'RML') icon = '🦜'\n    if (shape_types_mappings[file_type] == 'R2RML' || file_type == 'R2RML') icon = '🗄'\n    if (shape_types_mappings[file_type] == 'OBO' || file_type == 'OBO') icon = '🧪'\n    if (shape_types_mappings[file_type] == 'OpenAPI' || file_type == 'OpenAPI') icon = '📬'\n    if (shape_types_mappings[file_type] == 'SPARQL' || file_type == 'SPARQL') icon = '✨️'\n    if (shape_types_mappings[file_type] == 'SKOS' || file_type == 'SKOS') icon = '📕'\n    if (shape_types_mappings[file_type] == 'Nanopub' || file_type == 'Nanopub') icon = '🗞'\n    if (shape_types_mappings[file_type] == 'Dataset' || file_type == 'Dataset') icon = '💽'\n    return icon;\n  }\n\n  const chart_colors = ['#4caf50','#9575cd', '#bcaaa4', '#ef6c00', '#26c6da',\n    '#1565c0', '#aed581', '#4caf50', '#ffeb3b', '#ffb74d', '#ce93d8', '#4db6ac']\n\n  // At start: query SPARQL endpoint to get the shapes files infos (componentDidMount)\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n\n    // Check if PWA, and hide message if already installed\n    // if (window.matchMedia('(display-mode: standalone)').matches) {  \n    //   updateState({ show_pwa_alert: false })\n    // }\n\n    // Check SOLID pod for a shapes preference file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n    let repos_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of repositories per resource type',\n        data: [ ],\n        backgroundColor: chart_colors\n        // hoverBackgroundColor: ['#4caf50']\n    }]}\n    let files_overview_chart = {\n      labels: [],\n      datasets: [{\n        label: 'Number of files per resource type',\n        data: [ ],\n        backgroundColor: chart_colors\n    }]}\n\n    // Get stats about shapes types\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(sparql_resources_overview))\n      .then(res => {\n        const results_array: any = res.data.results.bindings;\n        results_array.map((result: any): any =>  {\n          // @ts-ignore\n          repos_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n          // @ts-ignore\n          repos_overview_chart.datasets[0].data.push(result.repos_count.value);\n          // @ts-ignore\n          files_overview_chart.labels.push(shape_types_mappings[result.shape_type.value]);\n          // @ts-ignore\n          files_overview_chart.datasets[0].data.push(result.files_count.value);\n        })\n        console.log(repos_overview_chart.labels)\n        updateState({\n          repos_overview_chart: repos_overview_chart,\n          files_overview_chart: files_overview_chart\n        })\n      })\n\n    // Get all files\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(getFilesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n        let global_shapes_array: any = []\n        // Iterates over shapes files\n        sparqlResultArray.map((result: any): any =>  {\n          // Create shape file entry\n          const file_url = result.shapeFileUri.value;\n          let file_obj: any = {\n            'url': file_url,\n            'type': result.shape_type.value,\n            'label': result.label.value,\n          }\n          let search_description = file_url + ' ' + result.label.value\n          if (result.shape_file_description) {\n            file_obj.description = result.shape_file_description.value;\n            search_description = search_description + ' ' + result.shape_file_description.value\n          }\n          if (result.sparqlEndpoint) {\n            file_obj.sparqlEndpoint = result.sparqlEndpoint.value;\n            search_description = search_description + ' ' + result.sparqlEndpoint.value\n          }\n          if (result.query) {\n            file_obj.query = result.query.value;\n            search_description = search_description + ' ' + result.query.value\n          }\n\n          // Get repo in array if exist\n          const repo_url = result.repository.value;\n          // let repo_entry  = global_shapes_array.find((item: any) => item.url === repo_url);\n          let repo_index = global_shapes_array.findIndex(((obj: any) => obj.url == repo_url));\n          if (repo_index == -1) {\n            // Add repository to global repos array if not present\n            let repo_description = ''\n            if (result.repo_description) repo_description = result.repo_description.value;\n            repo_index = global_shapes_array.push({\n              'url': repo_url,\n              'description': repo_description,\n              'files': [],\n              'search_description': ''\n            }) - 1\n          }\n          // Add shapes file to repo entry\n          global_shapes_array[repo_index]['files'].push(file_obj)\n          global_shapes_array[repo_index]['search_description'] = global_shapes_array[repo_index]['search_description'] + search_description\n\n        })\n        console.log(global_shapes_array)\n        updateState({global_shapes_array: global_shapes_array})\n\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // TODO: Get all shapes in files. Disabled, too big: 3m2. \n    // Considering doing a separated \"deep search\" for shapes parts\n    // axios.get(endpointToQuery + `?query=` + encodeURIComponent(getShapesQuery))\n    //   .then(res => {\n    //     const sparqlResultArray = res.data.results.bindings;\n    //     // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n    //     const projects_converted_hash = { ...sparqlResultArray }\n    //     let projects_hash: any = {}\n    //     // Iterate over projects\n    //     Object.keys(projects_converted_hash).forEach(function(project) {\n    //       const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n    //       // Use the project URI as key in the hash\n    //       if (!projects_hash[projectName]){\n    //         projects_hash[projectName] = {shapes: []}\n    //       }\n    //       // Iterate over project properties\n    //       Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n    //         const propertyHash = projects_converted_hash[project][property]\n    //         if (propertyHash) {\n    //           if (property == 'shapes') {\n    //             // Exception for shapes which is a list\n    //             let shape_label = propertyHash.value;\n    //             if (shape_label.length > 100) {\n    //               const n = shape_label.lastIndexOf('#');\n    //               shape_label = shape_label.substring(n + 1);\n    //             }\n    //             if (shape_label.length > 150) {\n    //               shape_label = shape_label.substring(0, 150)\n    //             }\n    //             projects_hash[projectName][property].push(shape_label);\n    //           } else {\n    //             projects_hash[projectName][property] = propertyHash.value \n    //           }\n    //         }\n    //       })\n    //     })\n    //     // Convert back to array for filtering\n    //     const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n    //     updateState({shapes_files_list: project_final_array})\n    //   })\n    //   .catch(error => {\n    //     console.log(error)\n    //   })\n\n    // Get repositories and their files counts\n    let repositories_hash: any = []\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(countRepositoriesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        sparqlResultArray.map((result: any) =>  {\n          // repositories_hash[result.repository.value] = {\n          let repo_description = '';\n          if (result.repo_description) {\n            repo_description = result.repo_description.value;\n          }\n          repositories_hash.push({\n            label: result.repository.value,\n            count: result.shapeFileCount.value,\n            description: repo_description,\n          })\n        });\n\n        updateState({repositories_hash: repositories_hash})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Query with the Comunica engine. Not working on SPARQL endpoint, only on the examples they provide\n    // https://comunica.dev/docs/query/getting_started/query_app/\n    // const comunicaEngine = newEngine();\n    // comunicaEngine.query(`\n    //   SELECT ?s ?o WHERE {\n    //    ?s a ?o .\n    //   } LIMIT 100`, {\n    //   sources: ['https://dbpedia.org/sparql'],\n    // }).then((res: any) => {\n    //   console.log(res);\n    //   res.bindingsStream.on('data', (binding: any) => {\n    //     // console.log(binding.get('?s').value);\n    //     // console.log(binding.get('?s').termType);\n    // }); });\n\n    if (webId) {\n      createSolidFile(webId);\n    }\n\n  }, [webId])\n  // This useless array needs to be added for React to understand he needs to use the state inside\n\n  function createSolidFile(webId: string) {\n    // console.log(webId);\n    // const location = webId + \"/public/shapes-of-you/preferences.ttl\";\n    const location = webId.replace(\"profile/card#me\", \"public/shapes-of-you/preferences.ttl\");\n    // console.log('Try to create file ' + location);\n    return data[location].put();\n  }\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value })\n  }\n\n  const handleCheckboxes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({type_checkboxes: {...state.type_checkboxes, [event.target.name]: event.target.checked} });\n  }\n\n  const handleExpandClick = (e: any) => {\n    updateState({expanded_files: {...state.expanded_files, [e.currentTarget.name]: !state.expanded_files[e.currentTarget.name]} });\n  };\n\n  // function handleAutocompleteRepositories(event: any, value: string[]) {\n  //   updateState({ repositories_autocomplete: value})\n  // }\n  // const pluralize = (count: any, noun: string, suffix = 's') =>\n  // `${count} ${noun}${parseInt(count) !== 1 ? suffix : ''}`;\n  \n  // Filtering for faceted search\n  // https://medium.com/poka-techblog/simplify-your-javascript-use-map-reduce-and-filter-bd02c593cc2d\n  const filtered_files = state.global_shapes_array\n    .filter((repo: any) => {\n      // First filter by repo/files descriptions, the search_description field allow to search also in files at this level\n      let search_description = repo.url + ' ';\n      if (repo.description) search_description = search_description + ' ' + repo.description;\n      if (repo.search_description) search_description = search_description + ' ' + repo.search_description;\n      return search_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n    })\n    .reduce((filtered: any, repo: any) => {\n      // Then filter files in the repo\n      let filtered_repo: any = {}\n      // Filter files for search input\n      filtered_repo.files = repo.files.filter((file: any) => {\n        let search_description = repo.url + ' ';\n        if (file.label) search_description = search_description + ' ' + file.label;\n        if (file.description) search_description = search_description + ' ' + file.description;\n        if (repo.description) search_description = search_description + ' ' + repo.description;\n        // Filter depending on shape type checkboxes:\n        if ((state.type_checkboxes['ShEx'] === true && file.type == 'http://www.w3.org/ns/shex#Schema')\n        || (state.type_checkboxes['SPARQL'] === true && file.type == 'http://www.w3.org/ns/shacl#SPARQLFunction')\n        || (state.type_checkboxes['SHACL'] === true && file.type == 'http://www.w3.org/ns/shacl#Shape')\n        || (state.type_checkboxes['OWL'] === true && file.type == 'http://www.w3.org/2002/07/owl#Ontology')\n        || (state.type_checkboxes['OBO'] === true && file.type == 'http://semanticscience.org/resource/SIO_000623')\n        || (state.type_checkboxes['SKOS'] === true && file.type == 'http://www.w3.org/2004/02/skos/core#ConceptScheme')\n        || (state.type_checkboxes['R2RML'] === true && file.type == 'http://www.w3.org/ns/r2rml#TriplesMap')\n        || (state.type_checkboxes['RML'] === true && file.type == 'http://semweb.mmlab.be/ns/rml#LogicalSource')\n        || (state.type_checkboxes['OpenAPI'] === true && file.type == 'https://schema.org/APIReference')\n        || (state.type_checkboxes['Dataset'] === true && file.type == 'http://www.w3.org/ns/dcat#Dataset')\n        || (state.type_checkboxes['Nanopub'] === true && file.type == 'https://w3id.org/np/o/ntemplate/AssertionTemplate')\n        ) {\n          if (state.search && !state.search_repos_only) {\n            return search_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n          } else {\n            // If no search provided, we only filter by type \n            return true\n          }\n        }\n      });\n      filtered_repo.url = repo.url;\n      if (repo.description) filtered_repo.description = repo.description;\n      filtered.push(filtered_repo)\n      return filtered;\n    }, [])\n    .filter((repo: any) => {\n      // Remove repos with no files\n      if (repo.files.length > 0) return true\n    });\n\n  // Define rendering of the page:\n  return(\n    <Container style={{marginTop: theme.spacing(4), marginBottom: theme.spacing(3)}}>\n      <LoggedIn>\n        <Typography style={{textAlign: 'center', margin: theme.spacing(2, 2)}}>\n          Welcome to your semantic resources index <Value src=\"user.name\"/>!\n        </Typography>\n        {/* <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          {webId}\n        </Typography> */}\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          Hopefully, soon you will be able to bookmark your favourites resources using your SOLID account! 🔖\n        </Typography>\n      </LoggedIn>\n\n      <About />\n\n      { state.repos_overview_chart['datasets'] && state.files_overview_chart['datasets'] &&\n        <Grid container spacing={3} style={{textAlign: 'center', marginTop: theme.spacing(2)}}>\n          <Grid item xs={12} md={6}>\n            <Paper style={{padding: theme.spacing(2, 2)}}>\n              <Typography variant=\"h6\" style={{marginBottom: theme.spacing(1)}}>Number of repositories per resource type</Typography>\n              <Bar data={state.repos_overview_chart} \n                options={chart_options(state.repos_overview_chart['datasets'][0]['data'])}\n                plugins={[ChartDataLabels]}\n              />\n            </Paper>\n          </Grid>\n          <Grid item xs={12} md={6}>\n            <Paper style={{padding: theme.spacing(2, 2)}}>\n              <Typography variant=\"h6\" style={{marginBottom: theme.spacing(1)}}>Number of files per resource type</Typography>\n              <Bar data={state.files_overview_chart} options={chart_options(state.files_overview_chart['datasets'][0]['data'])}/>\n            </Paper>\n          </Grid>\n        </Grid>\n      }\n\n      <Paper elevation={6} style={{padding: theme.spacing(3, 2), margin: theme.spacing(3, 0)}}>\n        <Typography variant=\"h5\">\n          {filtered_files.reduce((filtered: any, repo: any) => filtered + repo.files.length, 0)} files in&nbsp;\n          {Object.keys(filtered_files).length} repositories \n        </Typography>\n\n        {/* Filtering options */}\n        <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}>\n          {/* Search box */}\n          <Paper component=\"form\" className={classes.paperSearch}>\n            <InputBase\n              className={classes.searchInput} inputProps={{ 'aria-label': 'search input' }}\n              placeholder={\"🔎 Quick search\"}\n              onChange={searchChange}\n            />\n            <IconButton aria-label=\"search button\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n\n          <TextField\n            id=\"shapes-per-page\"\n            value={state.shapes_per_page}\n            onChange={(e: any) => {updateState({shapes_per_page: e.target.value})}}\n            label=\"Repos per page\"\n            type=\"number\"\n            variant=\"outlined\"\n            // style={{ backgroundColor: '#ffffff' }}\n          />\n        </Box>\n\n        {/* Display checkboxes to filter on shape type */}\n        <FormGroup style={{marginTop: theme.spacing(2)}} row>\n          {Object.keys(state.type_checkboxes).map((checkbox: any, key: number) => {\n            return <FormControlLabel key={key}\n              control={\n                <Checkbox\n                  checked={state.type_checkboxes[checkbox]}\n                  onChange={handleCheckboxes}\n                  name={checkbox}\n                  color=\"primary\"\n                /> }\n              label={checkbox + \" \" + getFileLabel(checkbox)}\n            />\n          })}\n          {/* Button to check and uncheck all checkboxes */}\n          <Button size=\"small\" variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}\n            onClick={() => {\n              let checkboxes: any = {}\n              Object.keys(state.type_checkboxes).map((type: any) => {\n                checkboxes[type] = false;\n              })\n              updateState({ type_checkboxes: checkboxes });\n            }}>\n            <CheckBoxOutlineBlankIcon />&nbsp;\n            Uncheck all\n          </Button>\n          <Button size=\"small\" variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}\n            onClick={() => {\n              let checkboxes: any = {}\n              Object.keys(state.type_checkboxes).map((type: any) => {\n                checkboxes[type] = true;\n              })\n              updateState({ type_checkboxes: checkboxes });\n            }}>\n            <CheckBoxIcon />&nbsp;\n            Check all\n          </Button>\n          <FormControlLabel control={\n              <Checkbox\n                checked={state.search_repos_only}\n                onChange={() => { updateState({ search_repos_only: !state.search_repos_only }); }}\n                name='search_repos_only'\n                color=\"primary\"\n              /> }\n            label={\"Disable file filter ☕️ \"}\n          />\n        </FormGroup>\n      </Paper>\n\n      {Object.keys(state.global_shapes_array).length < 1 && (\n        <div style={{textAlign: 'center'}}>\n          <CircularProgress style={{padding: theme.spacing(10, 10)}} />\n        </div>\n      )}\n\n      {/* Display Shapes files */}\n      {filtered_files\n          .slice(((state.page - 1)*(state.shapes_per_page)), ((state.page)*(state.shapes_per_page) - 1))\n          .map(function(repo_obj: any, key: number){\n        return <Card key={key.toString()} elevation={2} style={{padding: theme.spacing(1, 1), margin: theme.spacing(2, 0)}}>\n          <CardContent style={{paddingBottom: theme.spacing(0), margin: theme.spacing(0, 0)}}>\n            <Typography >\n              <a href={repo_obj.url} className={classes.link}>\n                📁&nbsp;{repo_obj.url.replace('https://github.com/', '')}\n              </a>\n              {repo_obj.description &&\n                <>\n                  &nbsp;-&nbsp;{repo_obj.description}\n                </>\n              }\n            </Typography>\n\n          </CardContent>\n\n          <CardActions disableSpacing style={{padding: theme.spacing(0, 1), margin: theme.spacing(0, 0)}}>\n            <IconButton style={{fontSize: '16px'}}\n              onClick={handleExpandClick}\n              name={repo_obj.url}\n              aria-expanded={state.expanded_files[repo_obj.url]}\n              aria-label=\"show about\"\n            >\n              {repo_obj.files.length} files\n              {!state.expanded_files[repo_obj.url] &&\n                <ExpandMoreIcon />\n              }\n              {state.expanded_files[repo_obj.url] &&\n                <ExpandLessIcon />\n              }\n            </IconButton>\n          </CardActions>\n\n          <Collapse in={state.expanded_files[repo_obj.url]} timeout=\"auto\" unmountOnExit>\n            <CardContent>\n              {/* TODO: also filter files? */}\n              {repo_obj.files.map(function(file_obj: any, key: number){\n                return <Card key={key.toString()} style={{padding: theme.spacing(1, 1), margin: theme.spacing(1, 0)}}>\n                  <Typography style={{margin: theme.spacing(1, 0)}}>\n                    <a href={file_obj.url} className={classes.link}>\n                      {getFileLabel(file_obj.type)} {file_obj.label}\n                    </a>\n                    <QueryYasguiButton endpoint={file_obj.sparqlEndpoint} query={file_obj.query} />\n                    {file_obj.description &&\n                      // Limit description to 1500 chars\n                      <div style={{margin: theme.spacing(1, 0)}}>\n                        <ReactMarkdown \n                          source={file_obj.description.substring(0, 1000)}\n                          renderers={{ paragraph: Typography }}\n                        />\n                      </div>\n\n                    }\n                  </Typography>\n                </Card>\n              })}\n            </CardContent>\n          </Collapse>\n\n          {/* Older codeblocks to get shapes for each files */}\n          {/* <Typography variant=\"h6\">\n            File:&nbsp;\n            <b><a href={project.shapeFileUri} className={classes.link}>{project.label}</a></b>\n            {project.query && project.sparqlEndpoint &&\n              // Add YASGUI link if relevant\n              // https://yasgui.triply.cc/#query=  &endpoint=\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query) + '&endpoint=' + project.sparqlEndpoint}\n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SendIcon />\n                  &nbsp;Query on YASGUI\n                </Button>\n              </a>\n            }\n            {project.query && !project.sparqlEndpoint &&\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query)} \n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SearchIcon />\n                  &nbsp;See on YASGUI\n                </Button>\n              </a>\n            }\n            <LoggedIn>\n              <Like object={project.shapeFileUri}>the Shape</Like>\n            </LoggedIn>\n          </Typography>\n          {project.shape_file_description &&\n            <Typography style={{fontStyle: 'italic', margin: theme.spacing(1, 0)}}>\n              {project.shape_file_description}\n            </Typography>\n          }\n          {project.shapes &&\n            <>\n              <Typography style={{marginTop: theme.spacing(1)}}>\n                Contains {pluralize(project.shapes.length, 'Shape')}:\n              </Typography>\n              {project.shapes.map((shapeLabel: string, key: number) => {\n                // Limit shape label size to 150 chars\n                return <Chip label={shapeLabel} color='primary' key={key.toString()}\n                    style={{margin: theme.spacing(1, 1)}}/>\n                // <Tooltip title={shapeLabel} key={key.toString()}>\n                // </Tooltip>\n              })}\n            </>\n          } */}\n\n          {/* Alert for PWA */}\n          {/* {state.show_pwa_alert &&\n          <Alert onClose={() => {updateState({ show_pwa_alert: false}) }} style={{marginBottom: theme.spacing(2)}}> \n            This web page is a Progressive Web App (PWA), it can be installed as a regular smartphone app, or desktop app on a laptop in a simple click! \n            <br/>On Google Chrome click the + button to the right in the URL bar. Checkout <a href=\"https://medium.com/progressivewebapps/how-to-install-a-pwa-to-your-device-68a8d37fadc1\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">this article for more details</a> about installing on various platforms.\n          </Alert>\n          } */}\n\n          {/* Autocomplete to filter by repositories or resource type */}\n          {/* <Autocomplete\n            multiple\n            value={state.repositories_autocomplete}\n            onChange={handleAutocompleteRepositories}\n            id=\"autocomplete-repositories\"\n            options={state.repositories_hash.filter( (repo: any) =>{ return (filtered_repos.indexOf(repo.label) > -1) })\n              .map((option: any) => option.label+ \",\" + option.count + \",\" + option.description)}\n            getOptionLabel={(option) => option.split(\",\")[0].replace('https://github.com/', '')}\n            renderOption={(option: any) => (\n              <React.Fragment>\n                {option.split(\",\")[0].replace('https://github.com/', '')} ({option.split(\",\")[1]} files) \n                {option.split(\",\")[2] && \n                  <React.Fragment>\n                    &nbsp;- {option.split(\",\")[2]}\n                  </React.Fragment>\n                }\n              </React.Fragment>\n            )}\n            renderInput={params => <TextField {...params} \n              label=\"📁 Filter by repositories\" \n              variant=\"outlined\" \n              // style={{ backgroundColor: '#ffffff' }}\n              // onInputChange={handleAutocompleteRepositories}\n              // size='small'\n              // InputProps={{\n              //   className: classes.whiteColor\n              // }}\n              // ListboxProps={{\n              //   className: classes.whiteColor,\n              // }}\n              // getOptionLabel={option => option.title}\n              // style={{ width: '60ch' }}\n            />}\n          /> */}\n        </Card>\n      })}\n      <Pagination count={Math.floor(Object.keys(filtered_files).length / state.shapes_per_page) + 1} \n        color=\"primary\" onChange={(event,val)=> updateState({page: val})} \n        style={{ display:'flex', justifyContent: 'center' }}\n      />\n    </Container>\n  )\n}\n\n// SPARQL select query to get all shapes files without the list of their shapes (much faster)\nconst getFilesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        schema:codeRepository ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri rdfs:comment ?shape_file_description }\n}`\n\n// SPARQL select query to get all shapes files and the list of their shapes\nconst getShapesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        schema:codeRepository ?repository ;\n        dcterms:hasPart ?shapes .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri rdfs:comment ?shape_file_description }\n}`\n// } LIMIT 1000`\n\n// SPARQL select query to get all GitHub repos, their description and the count of shapes file in it\nconst countRepositoriesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nSELECT ?repository (count(?shapeFileUri) AS ?shapeFileCount) ?repo_description WHERE { \n  ?shapeFileUri a <https://schema.org/SoftwareSourceCode> ;\n    rdfs:label ?label ;\n    schema:codeRepository ?repository .\n  OPTIONAL { ?repository rdfs:comment ?repo_description }\n} GROUP BY ?repository ?repo_description\n`\n\n// SPARQL select query which returns the count of repositories and shapes files per semantic resources types\nconst sparql_resources_overview = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT ?shape_type (count(distinct ?repository) AS ?repos_count) (count(distinct ?shape_file) AS ?files_count)\nWHERE { \n    ?shape_file a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        schema:codeRepository ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n} GROUP BY ?shape_type\n`\n\nfunction chart_options(data_array: any) {\n  return {\n    scales: {\n      yAxes: [{\n        ticks: {\n          beginAtZero: true,\n          // suggestedMax: Math.max(...data_array) + 50\n        }\n      }],\n      xAxes: [{\n        ticks: {\n          beginAtZero: true\n        }\n      }]\n    },\n    legend: {\n      display: false\n    },\n    // maintainAspectRatio: false,\n    plugins: {\n      datalabels: {\n        display: true,\n        color: 'black'\n      },\n      // labels: {\n      //   // render 'label', 'value', 'percentage', 'image' or custom function, default is 'percentage'\n      //   render: 'value',\n      //   overlap: true,\n      //   // fontSize: 12,\n\n      //   // font color, can be color array for each data or function for dynamic color, default is defaultFontColor\n      //   // fontColor: '#fff',\n      //   // // draw text shadows under labels, default is false\n      //   // textShadow: true,\n      //   // text shadow intensity, default is 6\n      //   // shadowBlur: 10,\n      //   // // text shadow X offset, default is 3\n      //   // shadowOffsetX: -5,\n      //   // // text shadow Y offset, default is 3\n      //   // shadowOffsetY: 5,\n      //   // // text shadow color, default is 'rgba(0,0,0,0.3)'\n      //   // shadowColor: 'rgba(255,0,0,0.75)',\n      //   // position to draw label, available value is 'default', 'border' and 'outside'\n      //   // bar chart ignores this\n      //   // default is 'default'\n      //   position: 'border',\n\n      //   // set images when `render` is 'image'\n      //   // images: [\n      //   //   {\n      //   //     src: 'image.png',\n      //   //     width: 16,\n      //   //     height: 16\n      //   //   }\n      //   // ]\n      // }\n    }\n  }\n}\n","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { View } from \"react-native\";\nimport { Route, Link, BrowserRouter as Router, Switch } from \"react-router-dom\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport SemanticIndex from \"./src/pages/SemanticIndex\";\nimport About from \"./src/pages/About\";\nimport Yasgui from \"./src/pages/Yasgui\";\n// import blue from '@material-ui/core/colors/blue';\n// import { Router, Route } from \"./src/components/react-router\";\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    // Primary Blue, and secondary Green\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    secondary: { light: '#4caf50', main: '#7e57c2', dark: '#00600f' },\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst website_name = \"Shapes of you\"\nconst website_description = \"Index for publicly available semantic resources (OWL & OBO ontologies, SKOS RDF vocabularies, SHACL & ShEx shapes, SPARQL queries, RML & R2RML mappings) stored in Git repositories (GitHub, GitLab, Gitee)\";\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Helmet>\n      <title>Shapes of you</title>\n      <meta name=\"description\" content={website_description}/>\n\n      {/* Google / Search Engine Tags */}\n      <meta itemProp=\"name\" content={website_name}/>\n      <meta itemProp=\"description\" content={website_description}/>\n      <meta itemProp=\"image\" content=\"\"/>\n\n      {/* Facebook Meta Tags */}\n      <meta property=\"og:url\" content=\"https://index.semanticscience.org\"/>\n      <meta property=\"og:type\" content=\"website\"/>\n      <meta property=\"og:title\" content={website_name}/>\n      <meta property=\"og:description\" content={website_description}/>\n      <meta property=\"og:image\" content=\"\"/>\n\n      {/* Twitter Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n      <meta name=\"twitter:title\" content={website_name}/>\n      <meta name=\"twitter:description\" content={website_description}/>\n      <meta name=\"twitter:image\" content=\"\"/>\n    </Helmet>\n    <Router basename=\"/\">\n      <Switch>\n        <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n          <NavBar />\n\n          <Route exact path=\"/\" component={SemanticIndex} />\n          <Route exact path=\"/yasgui\" component={Yasgui} />\n          <Route exact path=\"/about\" component={About} />\n          {/* <Route component={SemanticIndex} /> */}\n          \n          <Footer />\n        </View>\n      </Switch>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \"/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\"); */\\n\\n.flexGrow {\\n  flex-grow: 1; \\n}\\n\\n/* For codeblocks */\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","var map = {\n\t\"./af\": 299,\n\t\"./af.js\": 299,\n\t\"./ar\": 300,\n\t\"./ar-dz\": 301,\n\t\"./ar-dz.js\": 301,\n\t\"./ar-kw\": 302,\n\t\"./ar-kw.js\": 302,\n\t\"./ar-ly\": 303,\n\t\"./ar-ly.js\": 303,\n\t\"./ar-ma\": 304,\n\t\"./ar-ma.js\": 304,\n\t\"./ar-sa\": 305,\n\t\"./ar-sa.js\": 305,\n\t\"./ar-tn\": 306,\n\t\"./ar-tn.js\": 306,\n\t\"./ar.js\": 300,\n\t\"./az\": 307,\n\t\"./az.js\": 307,\n\t\"./be\": 308,\n\t\"./be.js\": 308,\n\t\"./bg\": 309,\n\t\"./bg.js\": 309,\n\t\"./bm\": 310,\n\t\"./bm.js\": 310,\n\t\"./bn\": 311,\n\t\"./bn-bd\": 312,\n\t\"./bn-bd.js\": 312,\n\t\"./bn.js\": 311,\n\t\"./bo\": 313,\n\t\"./bo.js\": 313,\n\t\"./br\": 314,\n\t\"./br.js\": 314,\n\t\"./bs\": 315,\n\t\"./bs.js\": 315,\n\t\"./ca\": 316,\n\t\"./ca.js\": 316,\n\t\"./cs\": 317,\n\t\"./cs.js\": 317,\n\t\"./cv\": 318,\n\t\"./cv.js\": 318,\n\t\"./cy\": 319,\n\t\"./cy.js\": 319,\n\t\"./da\": 320,\n\t\"./da.js\": 320,\n\t\"./de\": 321,\n\t\"./de-at\": 322,\n\t\"./de-at.js\": 322,\n\t\"./de-ch\": 323,\n\t\"./de-ch.js\": 323,\n\t\"./de.js\": 321,\n\t\"./dv\": 324,\n\t\"./dv.js\": 324,\n\t\"./el\": 325,\n\t\"./el.js\": 325,\n\t\"./en-au\": 326,\n\t\"./en-au.js\": 326,\n\t\"./en-ca\": 327,\n\t\"./en-ca.js\": 327,\n\t\"./en-gb\": 328,\n\t\"./en-gb.js\": 328,\n\t\"./en-ie\": 329,\n\t\"./en-ie.js\": 329,\n\t\"./en-il\": 330,\n\t\"./en-il.js\": 330,\n\t\"./en-in\": 331,\n\t\"./en-in.js\": 331,\n\t\"./en-nz\": 332,\n\t\"./en-nz.js\": 332,\n\t\"./en-sg\": 333,\n\t\"./en-sg.js\": 333,\n\t\"./eo\": 334,\n\t\"./eo.js\": 334,\n\t\"./es\": 335,\n\t\"./es-do\": 336,\n\t\"./es-do.js\": 336,\n\t\"./es-mx\": 337,\n\t\"./es-mx.js\": 337,\n\t\"./es-us\": 338,\n\t\"./es-us.js\": 338,\n\t\"./es.js\": 335,\n\t\"./et\": 339,\n\t\"./et.js\": 339,\n\t\"./eu\": 340,\n\t\"./eu.js\": 340,\n\t\"./fa\": 341,\n\t\"./fa.js\": 341,\n\t\"./fi\": 342,\n\t\"./fi.js\": 342,\n\t\"./fil\": 343,\n\t\"./fil.js\": 343,\n\t\"./fo\": 344,\n\t\"./fo.js\": 344,\n\t\"./fr\": 345,\n\t\"./fr-ca\": 346,\n\t\"./fr-ca.js\": 346,\n\t\"./fr-ch\": 347,\n\t\"./fr-ch.js\": 347,\n\t\"./fr.js\": 345,\n\t\"./fy\": 348,\n\t\"./fy.js\": 348,\n\t\"./ga\": 349,\n\t\"./ga.js\": 349,\n\t\"./gd\": 350,\n\t\"./gd.js\": 350,\n\t\"./gl\": 351,\n\t\"./gl.js\": 351,\n\t\"./gom-deva\": 352,\n\t\"./gom-deva.js\": 352,\n\t\"./gom-latn\": 353,\n\t\"./gom-latn.js\": 353,\n\t\"./gu\": 354,\n\t\"./gu.js\": 354,\n\t\"./he\": 355,\n\t\"./he.js\": 355,\n\t\"./hi\": 356,\n\t\"./hi.js\": 356,\n\t\"./hr\": 357,\n\t\"./hr.js\": 357,\n\t\"./hu\": 358,\n\t\"./hu.js\": 358,\n\t\"./hy-am\": 359,\n\t\"./hy-am.js\": 359,\n\t\"./id\": 360,\n\t\"./id.js\": 360,\n\t\"./is\": 361,\n\t\"./is.js\": 361,\n\t\"./it\": 362,\n\t\"./it-ch\": 363,\n\t\"./it-ch.js\": 363,\n\t\"./it.js\": 362,\n\t\"./ja\": 364,\n\t\"./ja.js\": 364,\n\t\"./jv\": 365,\n\t\"./jv.js\": 365,\n\t\"./ka\": 366,\n\t\"./ka.js\": 366,\n\t\"./kk\": 367,\n\t\"./kk.js\": 367,\n\t\"./km\": 368,\n\t\"./km.js\": 368,\n\t\"./kn\": 369,\n\t\"./kn.js\": 369,\n\t\"./ko\": 370,\n\t\"./ko.js\": 370,\n\t\"./ku\": 371,\n\t\"./ku.js\": 371,\n\t\"./ky\": 372,\n\t\"./ky.js\": 372,\n\t\"./lb\": 373,\n\t\"./lb.js\": 373,\n\t\"./lo\": 374,\n\t\"./lo.js\": 374,\n\t\"./lt\": 375,\n\t\"./lt.js\": 375,\n\t\"./lv\": 376,\n\t\"./lv.js\": 376,\n\t\"./me\": 377,\n\t\"./me.js\": 377,\n\t\"./mi\": 378,\n\t\"./mi.js\": 378,\n\t\"./mk\": 379,\n\t\"./mk.js\": 379,\n\t\"./ml\": 380,\n\t\"./ml.js\": 380,\n\t\"./mn\": 381,\n\t\"./mn.js\": 381,\n\t\"./mr\": 382,\n\t\"./mr.js\": 382,\n\t\"./ms\": 383,\n\t\"./ms-my\": 384,\n\t\"./ms-my.js\": 384,\n\t\"./ms.js\": 383,\n\t\"./mt\": 385,\n\t\"./mt.js\": 385,\n\t\"./my\": 386,\n\t\"./my.js\": 386,\n\t\"./nb\": 387,\n\t\"./nb.js\": 387,\n\t\"./ne\": 388,\n\t\"./ne.js\": 388,\n\t\"./nl\": 389,\n\t\"./nl-be\": 390,\n\t\"./nl-be.js\": 390,\n\t\"./nl.js\": 389,\n\t\"./nn\": 391,\n\t\"./nn.js\": 391,\n\t\"./oc-lnc\": 392,\n\t\"./oc-lnc.js\": 392,\n\t\"./pa-in\": 393,\n\t\"./pa-in.js\": 393,\n\t\"./pl\": 394,\n\t\"./pl.js\": 394,\n\t\"./pt\": 395,\n\t\"./pt-br\": 396,\n\t\"./pt-br.js\": 396,\n\t\"./pt.js\": 395,\n\t\"./ro\": 397,\n\t\"./ro.js\": 397,\n\t\"./ru\": 398,\n\t\"./ru.js\": 398,\n\t\"./sd\": 399,\n\t\"./sd.js\": 399,\n\t\"./se\": 400,\n\t\"./se.js\": 400,\n\t\"./si\": 401,\n\t\"./si.js\": 401,\n\t\"./sk\": 402,\n\t\"./sk.js\": 402,\n\t\"./sl\": 403,\n\t\"./sl.js\": 403,\n\t\"./sq\": 404,\n\t\"./sq.js\": 404,\n\t\"./sr\": 405,\n\t\"./sr-cyrl\": 406,\n\t\"./sr-cyrl.js\": 406,\n\t\"./sr.js\": 405,\n\t\"./ss\": 407,\n\t\"./ss.js\": 407,\n\t\"./sv\": 408,\n\t\"./sv.js\": 408,\n\t\"./sw\": 409,\n\t\"./sw.js\": 409,\n\t\"./ta\": 410,\n\t\"./ta.js\": 410,\n\t\"./te\": 411,\n\t\"./te.js\": 411,\n\t\"./tet\": 412,\n\t\"./tet.js\": 412,\n\t\"./tg\": 413,\n\t\"./tg.js\": 413,\n\t\"./th\": 414,\n\t\"./th.js\": 414,\n\t\"./tk\": 415,\n\t\"./tk.js\": 415,\n\t\"./tl-ph\": 416,\n\t\"./tl-ph.js\": 416,\n\t\"./tlh\": 417,\n\t\"./tlh.js\": 417,\n\t\"./tr\": 418,\n\t\"./tr.js\": 418,\n\t\"./tzl\": 419,\n\t\"./tzl.js\": 419,\n\t\"./tzm\": 420,\n\t\"./tzm-latn\": 421,\n\t\"./tzm-latn.js\": 421,\n\t\"./tzm.js\": 420,\n\t\"./ug-cn\": 422,\n\t\"./ug-cn.js\": 422,\n\t\"./uk\": 423,\n\t\"./uk.js\": 423,\n\t\"./ur\": 424,\n\t\"./ur.js\": 424,\n\t\"./uz\": 425,\n\t\"./uz-latn\": 426,\n\t\"./uz-latn.js\": 426,\n\t\"./uz.js\": 425,\n\t\"./vi\": 427,\n\t\"./vi.js\": 427,\n\t\"./x-pseudo\": 428,\n\t\"./x-pseudo.js\": 428,\n\t\"./yo\": 429,\n\t\"./yo.js\": 429,\n\t\"./zh-cn\": 430,\n\t\"./zh-cn.js\": 430,\n\t\"./zh-hk\": 431,\n\t\"./zh-hk.js\": 431,\n\t\"./zh-mo\": 432,\n\t\"./zh-mo.js\": 432,\n\t\"./zh-tw\": 433,\n\t\"./zh-tw.js\": 433\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 816;"],"sourceRoot":""}