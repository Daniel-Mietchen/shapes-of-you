{"version":3,"sources":["assets/icon.png","src/components/NavBar.tsx","src/components/Footer.tsx","src/pages/SemanticIndex.tsx","src/pages/About.tsx","App.tsx","web-build/register-service-worker.js","webpack:////home/runner/work/shapes-of-you/shapes-of-you/App.css?048e","App.css"],"names":["module","exports","useStyles","makeStyles","theme","menuButton","color","palette","common","white","margin","spacing","solidButton","backgroundColor","primary","main","borderRadius","padding","dark","cursor","linkButton","textTransform","textDecoration","linkLogo","alignItems","display","NavBar","classes","useTheme","AppBar","title","position","Toolbar","variant","to","className","Tooltip","src","iconImage","style","height","width","marginRight","alt","Button","target","rel","href","AuthButton","popup","darkLink","light","whiteLink","footer","marginTop","Copyright","Typography","align","Footer","Container","maxWidth","textAlign","marginBottom","paperSearch","searchInput","marginLeft","fontSize","flex","link","secondary","SemanticIndex","webId","useWebId","React","useState","webid","shapes_files_list","search","repositories_hash","repositories_autocomplete","category_pie","checkbox_shacl","checkbox_shex","checkbox_sparql","checkbox_owl","checkbox_skos","checkbox_obo","checkbox_openapi","page","shapes_per_page","show_info_card","state","setState","stateRef","useRef","updateState","useCallback","update","current","useEffect","endpointToQuery","axios","get","encodeURIComponent","getFilesQuery","then","res","project_final_array","data","results","bindings","map","row","Object","keys","key","console","log","catch","error","countRepositoriesQuery","result","repo_description","value","push","label","repository","count","shapeFileCount","description","location","replace","put","createSolidFile","handleCheckboxes","event","name","checked","filtered_files","filter","shapes_file","length","find","repo","includes","shape_type","file_description","shape_file_description","sparqlEndpoint","query","toLowerCase","indexOf","shapeFileUri","shapes","join","filtered_repos","item","i","ar","LoggedIn","Value","LoggedOut","Card","CardHeader","action","IconButton","aria-label","onClick","subheader","CardContent","List","ListItem","ListItemAvatar","Avatar","ListItemText","Paper","elevation","Box","component","InputBase","inputProps","placeholder","onChange","FormGroup","FormControlLabel","control","Checkbox","TextField","id","e","type","Autocomplete","multiple","options","option","getOptionLabel","split","renderOption","Fragment","renderInput","params","CircularProgress","slice","project","toString","object","fontStyle","noun","suffix","parseInt","pluralize","shapeLabel","Chip","Pagination","Math","floor","val","justifyContent","settingsForm","saveButton","fullWidth","normalFont","smallerFont","alignLeft","paperPadding","paperTitle","fontWeight","About","open","dialogOpen","project_license","language_autocomplete","createMuiTheme","typography","website_description","App","Helmet","content","itemProp","property","basename","View","exact","path","navigator","window","addEventListener","serviceWorker","register","scope","info","api","__esModule","default","locals","___CSS_LOADER_API_IMPORT___"],"mappings":"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","file":"static/js/app.cfd5528e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon.72626586.png\";","import React from \"react\";\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport { Link } from \"react-router-dom\";\n\nimport { AppBar, Toolbar, Button } from '@material-ui/core';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport GrlcApiIcon from '@material-ui/icons/Send';\nimport SparqlIcon from '@material-ui/icons/Share';\n// import InfoIcon from '@material-ui/icons/Info';\n// import DashboardIcon from '@material-ui/icons/Dashboard';\n// import CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder';\n// import MenuBookIcon from '@material-ui/icons/MenuBook';\n// import WarningIcon from '@material-ui/icons/Warning';\n\nimport { AuthButton, Value } from '@solid/react';\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\n\nconst useStyles = makeStyles(theme => ({\n  menuButton: {\n    color: theme.palette.common.white,\n    margin: theme.spacing(0, 1)\n  },\n  solidButton: {\n    backgroundColor: theme.palette.primary.main,\n    color: '#fff',\n    borderRadius: '6px',\n    // boxShadow: '0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08)',\n    padding: '7px 14px',\n    '&:hover': {  \n      backgroundColor: theme.palette.primary.dark,\n      cursor: 'pointer'\n    }\n  },\n  linkButton: {\n    textTransform: 'none',\n    textDecoration: 'none'\n  },\n  linkLogo: {\n    // Seems to fit the 48px navbar height...\n    // height: '48px',\n    alignItems: 'center',\n    display: 'flex',\n    margin: theme.spacing(0, 2)\n  },\n}))\n  \nexport default function NavBar() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n    <AppBar title=\"\" position='static'>\n      <Toolbar variant='dense'>\n        <Link to=\"/\" className={classes.linkLogo}>\n          <Tooltip title='Shapes of you homepage'>\n            <img src={iconImage} style={{height: '2em', width: '2em', marginRight: '10px'}} alt=\"Logo\" />\n          </Tooltip>\n        </Link>\n        <Tooltip title='Access the grlc OpenAPI (which query the SPARQL endpoint)'>\n          <Button className={classes.menuButton} target=\"_blank\" rel=\"noopener noreferrer\"\n          href=\"http://grlc.io/api-git/vemonet/shapes-of-you\">\n            <GrlcApiIcon style={{ marginRight: theme.spacing(1)}} />\n            API\n          </Button>\n        </Tooltip>\n        <Tooltip title='Query the SPARQL endpoint with YASGUI'>\n          <Button className={classes.menuButton} target=\"_blank\" rel=\"noopener noreferrer\"\n          href=\"http://yasgui.triply.cc/#query=PREFIX%20rdfs%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%3E%0APREFIX%20dc%3A%20%3Chttp%3A%2F%2Fpurl.org%2Fdc%2Felements%2F1.1%2F%3E%0APREFIX%20dcterms%3A%20%3Chttp%3A%2F%2Fpurl.org%2Fdc%2Fterms%2F%3E%0APREFIX%20schema%3A%20%3Chttps%3A%2F%2Fschema.org%2F%3E%0APREFIX%20sh%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshacl%23%3E%0APREFIX%20shex%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshex%23%3E%0APREFIX%20void%3A%20%3Chttp%3A%2F%2Frdfs.org%2Fns%2Fvoid%23%3E%0ASELECT%20DISTINCT%20*%20WHERE%20%7B%20%0A%20%20%20%20%3FshapeFileUri%20a%20schema%3ASoftwareSourceCode%20%3B%0A%20%20%20%20%20%20%20%20a%20%3Fshape_type%20%3B%0A%20%20%20%20%20%20%20%20rdfs%3Alabel%20%3Flabel%20%3B%0A%20%20%20%20%20%20%20%20dc%3Asource%20%3Frepository%20.%0A%20%20%20%20FILTER(%3Fshape_type%20!%3D%20schema%3ASoftwareSourceCode)%0A%20%20%20%20OPTIONAL%20%7B%20%3Frepository%20rdfs%3Acomment%20%3Frepo_description%20%7D%0A%20%20%20%20OPTIONAL%20%7B%20%3FshapeFileUri%20schema%3Aquery%20%3Fquery%20%7D%0A%20%20%20%20OPTIONAL%20%7B%20%3FshapeFileUri%20void%3AsparqlEndpoint%20%3FsparqlEndpoint%20%7D%0A%20%20%20%20OPTIONAL%20%7B%20%3FshapeFileUri%20dc%3Adescription%20%3Fshape_file_description%20%7D%0A%7D&endpoint=https%3A%2F%2Fgraphdb.dumontierlab.com%2Frepositories%2Fshapes-registry&requestMethod=GET&tabTitle=Query&headers=%7B%7D&contentTypeConstruct=application%2Fn-triples%2C*%2F*%3Bq%3D0.9&contentTypeSelect=application%2Fsparql-results%2Bjson%2C*%2F*%3Bq%3D0.9&outputFormat=table&endpoint=https%3A%2F%2Fgraphdb.dumontierlab.com%2Frepositories%2Fshapes-registry&requestMethod=GET&tabTitle=Query&headers=%7B%7D&contentTypeConstruct=application%2Fn-triples%2C*%2F*%3Bq%3D0.9&contentTypeSelect=application%2Fsparql-results%2Bjson%2C*%2F*%3Bq%3D0.9&outputFormat=tablehttp://yasgui.triply.cc/#query=PREFIX%20rdfs%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2F2000%2F01%2Frdf-schema%23%3E%0APREFIX%20dc%3A%20%3Chttp%3A%2F%2Fpurl.org%2Fdc%2Felements%2F1.1%2F%3E%0APREFIX%20dcterms%3A%20%3Chttp%3A%2F%2Fpurl.org%2Fdc%2Fterms%2F%3E%0APREFIX%20schema%3A%20%3Chttps%3A%2F%2Fschema.org%2F%3E%0APREFIX%20sh%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshacl%23%3E%0APREFIX%20shex%3A%20%3Chttp%3A%2F%2Fwww.w3.org%2Fns%2Fshex%23%3E%0APREFIX%20void%3A%20%3Chttp%3A%2F%2Frdfs.org%2Fns%2Fvoid%23%3E%0ASELECT%20DISTINCT%20*%20WHERE%20%7B%20%0A%20%20%20%20%3FshapeFileUri%20a%20schema%3ASoftwareSourceCode%20%3B%0A%20%20%20%20%20%20%20%20a%20%3Fshape_type%20%3B%0A%20%20%20%20%20%20%20%20rdfs%3Alabel%20%3Flabel%20%3B%0A%20%20%20%20%20%20%20%20dc%3Asource%20%3Frepository%20.%0A%20%20%20%20FILTER(%3Fshape_type%20!%3D%20schema%3ASoftwareSourceCode)%0A%20%20%20%20OPTIONAL%20%7B%20%3Frepository%20rdfs%3Acomment%20%3Frepo_description%20%7D%0A%20%20%20%20OPTIONAL%20%7B%20%3FshapeFileUri%20schema%3Aquery%20%3Fquery%20%7D%0A%20%20%20%20OPTIONAL%20%7B%20%3FshapeFileUri%20void%3AsparqlEndpoint%20%3FsparqlEndpoint%20%7D%0A%20%20%20%20OPTIONAL%20%7B%20%3FshapeFileUri%20dc%3Adescription%20%3Fshape_file_description%20%7D%0A%7D&endpoint=https%3A%2F%2Fgraphdb.dumontierlab.com%2Frepositories%2Fshapes-registry&requestMethod=GET&tabTitle=Query&headers=%7B%7D&contentTypeConstruct=application%2Fn-triples%2C*%2F*%3Bq%3D0.9&contentTypeSelect=application%2Fsparql-results%2Bjson%2C*%2F*%3Bq%3D0.9&outputFormat=table\">\n            <SparqlIcon style={{ marginRight: theme.spacing(1)}} />\n            SPARQL\n          </Button>\n        </Tooltip>\n        {/* <Link to=\"/create-doap\" className={classes.linkButton}>\n          <Tooltip title='Create a DOAP description for your project'>\n            <Button className={classes.menuButton}>\n              <CreateNewFolderIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <div className=\"flexGrow\"></div>\n        <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\" \n            target=\"_blank\" rel=\"noopener noreferrer\" className={classes.linkButton}>\n          <Tooltip title='Reports for the files which failed to process, and that need to be fixed by their owners. Also known as the semantic web of shame'>\n            <Button className={classes.menuButton}>\n              <AssignmentIcon />\n              &nbsp;Import reports\n            </Button>\n          </Tooltip>\n        </a>\n        {/* <Link to=\"/about\" className={classes.linkButton}>\n          <Tooltip title='About the Institute of Data Science'>\n            <Button className={classes.menuButton}>\n              <InfoIcon />\n            </Button>\n          </Tooltip>\n        </Link> */}\n        <Tooltip  title='Go to https://github.com/vemonet/shapes-of-you'>\n          <Button className={classes.menuButton} target=\"_blank\"\n          href=\"https://github.com/vemonet/shapes-of-you\" rel=\"noopener noreferrer\">\n            <GitHubIcon />\n          </Button>\n        </Tooltip>\n        {/* <Tooltip title='Login with SOLID'> */}\n        <AuthButton title='Login with SOLID' className={classes.solidButton} popup=\"https://inrupt.net/common/popup.html\"/>\n        {/* </Tooltip> */}\n        {/* <AuthButton popup=\"https://solidcommunity.net/common/popup.html\"/> */}\n      </Toolbar>\n    </AppBar>\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  darkLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.light,\n      textDecoration: 'none',\n    },\n  },\n  whiteLink: {\n    textDecoration: 'none',\n    color: 'inherit',\n    '&:hover': {\n      color: theme.palette.primary.dark,\n      textDecoration: 'none',\n    },\n  },\n  footer: {\n    padding: theme.spacing(2),\n    marginTop: 'auto',\n    color: 'white',\n    backgroundColor: theme.palette.primary.main,\n  },\n}));\n\nfunction Copyright() {\n  const classes = useStyles();\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <a className={classes.darkLink} target=\"_blank\" rel=\"noopener noreferrer\"\n      href=\"https://maastrichtuniversity.nl/ids\">\n        Vincent Emonet\n      </a>{' '}\n      {'2021'}\n    </Typography>\n  );\n}\n\nexport default function Footer() {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  return (\n      <footer className={classes.footer}>\n        <Container maxWidth=\"md\" style={{textAlign: 'center'}}>\n          <Typography variant=\"body2\" style={{ marginBottom: theme.spacing(1)}}>\n            Built for you, to explore the semantic space ✨️ website under the&nbsp;\n            <a className={classes.whiteLink} target=\"_blank\" rel=\"noopener noreferrer\"\n            href=\"https://github.com/vemonet/shapes-of-you/blob/main/LICENSE\">\n              MIT license\n            </a>\n            {/* <img src={require('../assets/images/mit_license.png')} /> */}\n          </Typography>\n          <Copyright />\n        </Container>\n      </footer>\n  );\n}\n\n// Set state in functional style:\n// const [state, setState] = React.useState({search: '', name: 'Vincent'});\n// console.log(state.search);\n// // Set search without chaging name\n// setState({...state, search: 'yo'})\n// const onNameChange = React.useCallback((filterName) => {\n//   console.log('callback', state.name);\n// },\n// [state.name]);\n// // Tells callback to reload when change to state.name\n\n// React.useEffect(() => {\n//   console.log('componentDID mount');\n//   return () => {\n//     console.log('willMount');\n//   }\n// }, []) \n// Empty dep list: will only run when componentDidMount","import React from 'react';\nimport { makeStyles,  useTheme } from '@material-ui/core/styles';\nimport { Typography, Container, Box, Button, Chip, Tooltip, Grid, Paper, CircularProgress, Card, CardContent, CardHeader } from \"@material-ui/core\";\nimport { IconButton, InputBase } from \"@material-ui/core\";\nimport { List, ListItem, ListItemAvatar, ListItemText, Avatar } from \"@material-ui/core\";\nimport SearchIcon from '@material-ui/icons/Search';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport CodeIcon from '@material-ui/icons/Code';\nimport BubbleChartIcon from '@material-ui/icons/BubbleChart';\nimport SendIcon from '@material-ui/icons/Send';\nimport MenuBookIcon from '@material-ui/icons/MenuBook';\nimport DeviceHubIcon from '@material-ui/icons/DeviceHub';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport OpenAPIIcon from '@material-ui/icons/Adjust';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport axios from 'axios';\n\nimport { FormGroup, FormControlLabel, Checkbox, TextField } from \"@material-ui/core\";\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport { LoggedIn, LoggedOut, Value, useWebId, useLDflexValue, useLDflexList } from '@solid/react';\nimport { Like } from '@solid/react';\nimport data from \"@solid/query-ldflex\";\n// import { data } from \"@solid/query-ldflex\";\n// import SolidStar from \"./SolidStar\";\n\n// import {newEngine} from '@comunica/actor-init-sparql';\n// import {ActorInitSparql} from '@comunica/actor-init-sparql/lib/ActorInitSparql-browser';\n// import {IQueryOptions, newEngineDynamicArged} from \"@comunica/actor-init-sparql/lib/QueryDynamic\";\n\nconst useStyles = makeStyles(theme => ({\n  paperSearch: {\n    padding: '2px 4px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '35ch',\n    marginRight: theme.spacing(3)\n  },\n  searchInput: {\n    marginLeft: theme.spacing(1),\n    fontSize: '16px',\n    flex: 1,\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.palette.primary.main,\n    '&:hover': {\n      color: theme.palette.secondary.main,\n      textDecoration: 'none',\n    },\n  },\n}))\n\nexport default function SemanticIndex() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const webId = useWebId();\n  // const solid_name = useLDflexValue('user.name') || 'unknown';\n  \n  const [state, setState] = React.useState({\n    webid: '',\n    shapes_files_list: [],\n    search: '',\n    repositories_hash: [],\n    repositories_autocomplete: [],\n    category_pie: {},\n    checkbox_shacl: true,\n    checkbox_shex: true,\n    checkbox_sparql: true,\n    checkbox_owl: true,\n    checkbox_skos: true,\n    checkbox_obo: true,\n    checkbox_openapi: true,\n    page: 1,\n    shapes_per_page: 100,\n    show_info_card: true,\n  });\n  const stateRef = React.useRef(state);\n\n  // Avoid conflict when async calls\n  // Can be done with another lib (cf. Turgay)\n  const updateState = React.useCallback((update) => {\n    stateRef.current = {...stateRef.current, ...update};\n    setState(stateRef.current);\n  }, [setState]);\n\n\n  // componentDidMount: Query SPARQL endpoint to get the shapes files infos\n  React.useEffect(() => {\n    const endpointToQuery = 'https://graphdb.dumontierlab.com/repositories/shapes-registry';\n\n    // Check SOLID pod for a shapes preference file\n    // https://github.com/solid/react-components/blob/master/demo/app.jsx\n    // https://solid.github.io/react-components/\n\n    // Query directly using Axios\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(getFilesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n        // const projects_converted_hash = { ...sparqlResultArray }\n        // let projects_hash: any = {}\n        // // Iterate over projects\n        // Object.keys(projects_converted_hash).forEach(function(project) {\n        //   const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n        //   // Use the project URI as key in the hash\n        //   if (!projects_hash[projectName]){\n        //     projects_hash[projectName] = {shapes: []}\n        //   }\n        //   // Iterate over project properties\n        //   Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n        //     const propertyHash = projects_converted_hash[project][property]\n        //     if (propertyHash) {\n        //       if (property == 'shapes') {\n        //         // Exception for shapes which is a list\n        //         let shape_label = propertyHash.value;\n        //         if (shape_label.length > 100) {\n        //           const n = shape_label.lastIndexOf('#');\n        //           shape_label = shape_label.substring(n + 1);\n        //         }\n        //         if (shape_label.length > 150) {\n        //           shape_label = shape_label.substring(0, 150)\n        //         }\n        //         projects_hash[projectName][property].push(shape_label);\n        //       } else {\n        //         projects_hash[projectName][property] = propertyHash.value \n        //       }\n        //     }\n        //   })\n        // })\n        // Convert back to array for filtering\n        // const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n        const project_final_array: any = sparqlResultArray.map((row: any) => {\n          // console.log(row);\n          Object.keys(row).map((key) => row[key] = row[key]['value']);\n          return row\n          // Object.keys(row).map((key) => key['value']);\n        }); \n        console.log('project_final_array');\n        console.log(project_final_array);\n        // sparqlResultArray\n        updateState({shapes_files_list: project_final_array})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Get all shapes in files (3m2)\n    // axios.get(endpointToQuery + `?query=` + encodeURIComponent(getShapesQuery))\n    //   .then(res => {\n    //     const sparqlResultArray = res.data.results.bindings;\n\n    //     // Convert array to object: {0:\"a\", 1:\"b\", 2:\"c\"}\n    //     const projects_converted_hash = { ...sparqlResultArray }\n    //     let projects_hash: any = {}\n    //     // Iterate over projects\n    //     Object.keys(projects_converted_hash).forEach(function(project) {\n    //       const projectName = projects_converted_hash[project]['shapeFileUri']['value']\n    //       // Use the project URI as key in the hash\n    //       if (!projects_hash[projectName]){\n    //         projects_hash[projectName] = {shapes: []}\n    //       }\n    //       // Iterate over project properties\n    //       Object.keys(projects_converted_hash[project]).forEach(function(property: any) {\n    //         const propertyHash = projects_converted_hash[project][property]\n    //         if (propertyHash) {\n    //           if (property == 'shapes') {\n    //             // Exception for shapes which is a list\n    //             let shape_label = propertyHash.value;\n    //             if (shape_label.length > 100) {\n    //               const n = shape_label.lastIndexOf('#');\n    //               shape_label = shape_label.substring(n + 1);\n    //             }\n    //             if (shape_label.length > 150) {\n    //               shape_label = shape_label.substring(0, 150)\n    //             }\n    //             projects_hash[projectName][property].push(shape_label);\n    //           } else {\n    //             projects_hash[projectName][property] = propertyHash.value \n    //           }\n    //         }\n    //       })\n    //     })\n    //     // Convert back to array for filtering\n    //     const project_final_array: any = Object.keys(projects_hash).map((key) => projects_hash[key]);\n    //     updateState({shapes_files_list: project_final_array})\n    //   })\n    //   .catch(error => {\n    //     console.log(error)\n    //   })\n\n    // Get repositories and their files counts\n    let repositories_hash: any = []\n    axios.get(endpointToQuery + `?query=` + encodeURIComponent(countRepositoriesQuery))\n      .then(res => {\n        const sparqlResultArray = res.data.results.bindings;\n\n        sparqlResultArray.map((result: any) =>  {\n          // repositories_hash[result.repository.value] = {\n          let repo_description = '';\n          if (result.repo_description) {\n            repo_description = result.repo_description.value;\n          }\n          repositories_hash.push({\n            label: result.repository.value,\n            count: result.shapeFileCount.value,\n            description: repo_description,\n          })\n        });\n\n        updateState({repositories_hash: repositories_hash})\n      })\n      .catch(error => {\n        console.log(error)\n      })\n\n    // Query with the Comunica engine\n    // Not working on SPARQL endpoint, only on the examples they provide\n    // https://comunica.dev/docs/query/getting_started/query_app/\n    // const comunicaEngine = newEngine();\n    // comunicaEngine.query(`\n    //   SELECT ?s ?o WHERE {\n    //    ?s a ?o .\n    //   } LIMIT 100`, {\n    //   sources: ['https://dbpedia.org/sparql'],\n    // }).then((res: any) => {\n    //   console.log(res);\n    //   res.bindingsStream.on('data', (binding: any) => {\n    //     // console.log(binding.get('?s').value);\n    //     // console.log(binding.get('?s').termType);\n    //     // console.log(binding.get('?o').value);\n    //   });\n    // });\n\n    if (webId) {\n      createSolidFile(webId);\n    }\n\n  }, [webId])\n  // This useless array needs to be added for React to understand he needs to use the state inside...\n\n  function createSolidFile(webId: string) {\n    // console.log(webId);\n    // const location = webId + \"/public/shapes-of-you/preferences.ttl\";\n    const location = webId.replace(\"profile/card#me\", \"public/shapes-of-you/preferences.ttl\");\n    // console.log('Try to create file ' + location);\n    return data[location].put();\n  }\n\n  const pluralize = (count: any, noun: string, suffix = 's') =>\n  `${count} ${noun}${parseInt(count) !== 1 ? suffix : ''}`;\n\n  const searchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ search: event.target.value })\n  }\n\n  const handleCheckboxes = (event: React.ChangeEvent<HTMLInputElement>) => {\n    updateState({ [event.target.name]: event.target.checked });\n  }\n\n  function handleAutocompleteRepositories(event: any, value: string[]) {\n    updateState({ repositories_autocomplete: value})\n  }\n  \n  // Could not find good dynamic faceted search, best is https://github.com/ebi-gene-expression-group/scxa-faceted-search-results\n  // Each faceted search filter can be added here (on the shapes files array)\n  const filtered_files = state.shapes_files_list.filter( (shapes_file: any) =>{\n    if (shapes_file) {\n      if (shapes_file.label) {\n        // Filter by repo: show shapes if no repo selected, or if its repo is in list of selected repos\n        if (state.repositories_autocomplete.length == 0 || state.repositories_autocomplete.find((repo: string) => repo.includes(shapes_file.repository))) {\n          // Filter depending on shape type checkboxes:\n          if ((state.checkbox_shex === true && shapes_file.shape_type == 'http://www.w3.org/ns/shex#Schema')\n          || (state.checkbox_sparql === true && shapes_file.shape_type == 'http://www.w3.org/ns/shacl#SPARQLFunction')\n          || (state.checkbox_shacl === true && shapes_file.shape_type == 'http://www.w3.org/ns/shacl#Shape')\n          || (state.checkbox_owl === true && shapes_file.shape_type == 'http://www.w3.org/2002/07/owl#Ontology')\n          || (state.checkbox_obo === true && shapes_file.shape_type == 'http://semanticscience.org/resource/SIO_000623')\n          || (state.checkbox_skos === true && shapes_file.shape_type == 'http://www.w3.org/2004/02/skos/core#ConceptScheme')\n          || (state.checkbox_openapi === true && shapes_file.shape_type == 'https://schema.org/WebAPI')\n          ) {\n            // Filter using the search text, on all properties and metadata of the file:\n            let file_description = '';\n            if (shapes_file.repo_description) file_description = file_description + ' ' + shapes_file.repo_description;\n            if (shapes_file.shape_file_description) file_description = file_description + ' ' + shapes_file.shape_file_description;\n            if (shapes_file.sparqlEndpoint) file_description = file_description + ' ' + shapes_file.sparqlEndpoint;\n            if (shapes_file.query) file_description = file_description + ' ' + shapes_file.query;\n            return (shapes_file.label.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1 \n              || shapes_file.shapeFileUri.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n              || shapes_file.shapes && shapes_file.shapes.join(' ').toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n              || shapes_file.repository.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n              || file_description.toLowerCase().indexOf( state.search.toLowerCase() ) !== -1\n            )\n          }\n        }\n      }\n    }\n  })\n\n  // If no repo filter, then we use the filtered list to have the repo filtered\n  // If a repo is selected we show full list, \n  // since filtering on filtered_files would show only the selected repo\n  // Return unique list of filtered repos\n  let filtered_repos: any = []\n  if (state.repositories_autocomplete.length == 0) {\n    filtered_repos = filtered_files.map( (shapes_file: any) =>{\n      return shapes_file.repository\n    }).filter((item, i, ar) => ar.indexOf(item) === i)\n  } else {\n    filtered_repos = state.shapes_files_list.map( (shapes_file: any) =>{\n      return shapes_file.repository\n    }).filter((item, i, ar) => ar.indexOf(item) === i)\n  }\n\n  // Define rendering of the page:\n  return(\n    <Container className='mainContainer'>\n      {/* <Typography variant=\"h4\" style={{textAlign: 'center'}}>\n        💠 Shapes of You\n      </Typography> */}\n      <LoggedIn>\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          Welcome to your semantic resources index <Value src=\"user.name\"/>!\n        </Typography>\n        {/* <Typography style={{textAlign: 'center', marginBottom: theme.spacing(2)}}>\n          {webId}\n        </Typography> */}\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          Hopefully, soon you will be able to bookmark your favourites resources using your SOLID account! 🔖\n        </Typography>\n      </LoggedIn>\n      {/* <LoggedOut>\n        <Typography style={{textAlign: 'center', marginBottom: theme.spacing(3)}}>\n          An index of publicly available semantic resources\n        </Typography>\n      </LoggedOut> */}\n\n      <LoggedOut>\n        {state.show_info_card &&\n          <Card >\n            <CardHeader\n              // avatar={\n              //   <Avatar aria-label=\"recipe\" className={classes.avatar}>\n              //     R\n              //   </Avatar>\n              // }\n              action={\n                <IconButton aria-label=\"settings\" onClick={() => { updateState({ show_info_card: false}) }}>\n                  <CloseIcon />\n                </IconButton>\n              }\n              title=\"💠 Shapes of You\"\n              subheader=\"An index of publicly available semantic resources\"\n            />\n            <CardContent>\n              <Typography style={{marginBottom: theme.spacing(2)}}>\n                Shapes of you is the best place to <b>search and explore existing semantic shapes, ontologies, vocabularies and queries</b>. Do you need to validate RDF using SHACL or ShEx? Or do you want to find SPARQL queries about drugs? There might be a shape out there waiting for you! You can also explore shapes to find inspirations. You might even find a grlc API serving data relevant to your projects, who knows? Linked Open Data are full of surprise!\n              </Typography>\n\n              <Typography style={{marginBottom: theme.spacing(2)}}>\n                To insure their validity, all indexed files has been parsed using the corresponding python package (rdflib, obonet). You can check the list of files which failed to load in our <a href=\"https://github.com/vemonet/shapes-of-you/tree/report\" className={classes.link}>reports</a>. Feel free to fix them if you are the owner!\n              </Typography>\n\n              {/* <a href=\"https://github.com/vemonet/shapes-of-you/actions?query=workflow%3A%22Index+shapes%22\">\n                <img src=\"https://github.com/vemonet/shapes-of-you/workflows/Index%20shapes/badge.svg\" \n                style={{marginBottom: theme.spacing(2)}} />\n              </a> */}\n\n              {/* <Typography>\n                Add the tag <code>shacl-shapes</code> or <code>shex</code> or <code>grlc</code> to your GitHub repository, we automatically index all SPARQL queries (<code>.rq</code>, <code>.sparql</code>), ShEx (<code>.shex</code>), SHACL files (<code>.ttl</code>, <code>.rdf</code>, <code>.jsonld</code>, <code>.trig</code>, <code>.nq</code>, etc) containing at least one <code>sh:NodeShape</code> from all repositories everyday at 1:00 and 13:00 🕐\n              </Typography> */}\n              <Typography>\n                Add one of those topics to your <a href=\"https://github.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a> repository, or mention it in your project description on <a href=\"https://gitlab.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitLab</a> and <a href=\"https://gitee.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">Gitee</a>,&nbsp;\n                we automatically index files from public repositories everyday 🕐\n              </Typography>\n              <List>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <DeviceHubIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.w3.org/OWL/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OWL</a> ontologies</b>: add the topic <code>owl</code>, we index RDF files, with all <code>owl:Class</code> they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <MenuBookIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.w3.org/TR/swbp-skos-core-spec/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SKOS</a> vocabularies</b>: add the topic <code>skos</code>, we index RDF files, with all <code>skos:Concept</code> they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <CheckCircleIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText\n                  > \n                    <b><a href=\"https://www.w3.org/TR/shacl/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SHACL</a> shapes</b>: add the topic <code>shacl-shapes</code>, we index RDF files, with all <code>sh:NodeShape</code> they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <BubbleChartIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://shex.io/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">ShEx</a> expressions</b>: add the topic <code>shex</code>, we index <code>.shex</code> files, and ShEx shapes defined in RDF files (but no metadata described in ShEx)\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <CodeIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.w3.org/TR/sparql11-query/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">SPARQL</a> queries</b>: add the topic <code>grlc</code>, we index <code>.rq</code> and <code>.sparql</code> files, and parse <a href=\"http://grlc.io\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">grlc.io</a> APIs metadata, complying with the <a href=\"https://github.com/the-open-university/basil/wiki/Introduction\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">BASIL convention</a>\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <GavelIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"http://www.obofoundry.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OBO</a> ontologies</b>: add the topic <code>obo</code>, we index <code>.obo</code> files, with parse all terms they contain\n                  </ListItemText>\n                </ListItem>\n                <ListItem>\n                  <ListItemAvatar>\n                    <Avatar>\n                      <OpenAPIIcon />\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <b><a href=\"https://www.openapis.org/\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">OpenAPI</a> specifications</b>: add the topic <code>openapi</code>, we index <code>.yml</code>, <code>.yaml</code> and <code>.json</code> files, and parse the spec to retrieve API metadata\n                  </ListItemText>\n                </ListItem>\n              </List>\n            </CardContent>\n          </Card>\n        }\n      </LoggedOut>\n\n      {/* <Typography style={{marginBottom: theme.spacing(2)}}>\n        We also index the same topics in <a href=\"https://gitlab.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">GitLab</a> and <a href=\"https://gitee.com\" className={classes.link} target=\"_blank\" rel=\"noopener noreferrer\">Gitee</a>, there is no topic on those websites, so just mention it in your project name or description.\n      </Typography> */}\n\n      {/* <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}></Box> */}\n      <Paper elevation={6} style={{padding: theme.spacing(3, 2), margin: theme.spacing(2, 0)}}>\n        <Typography variant=\"h5\">\n          {filtered_files.length} files in&nbsp;\n          {filtered_repos.length} repositories \n          {/* {(state.repositories_autocomplete.length > 0 && state.repositories_autocomplete.length) || Object.keys(state.repositories_hash).length} Shapes repositories  */}\n        </Typography>\n\n        {/* Filtering options */}\n        <Box display=\"flex\" style={{margin: theme.spacing(2, 0)}}>\n          {/* Search box */}\n          <Paper component=\"form\" className={classes.paperSearch}>\n            <InputBase\n              className={classes.searchInput} inputProps={{ 'aria-label': 'search' }}\n              placeholder={\"🔎 Search shapes\"}\n              onChange={searchChange}\n            />\n            <IconButton aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n          </Paper>\n\n          {/* shacl/shex checkboxes */}\n          <FormGroup row>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_shacl}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_shacl\"\n                  color=\"primary\"\n                /> }\n              label=\"SHACL\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_shex}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_shex\"\n                  color=\"primary\"\n                /> }\n              label=\"ShEx\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_sparql}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_sparql\"\n                  color=\"primary\"\n                /> }\n              label=\"SPARQL\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_owl}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_owl\"\n                  color=\"primary\"\n                /> }\n              label=\"OWL\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_skos}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_skos\"\n                  color=\"primary\"\n                /> }\n              label=\"SKOS\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_obo}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_obo\"\n                  color=\"primary\"\n                /> }\n              label=\"OBO\"\n            />\n            <FormControlLabel\n              control={\n                <Checkbox\n                  checked={state.checkbox_openapi}\n                  onChange={handleCheckboxes}\n                  name=\"checkbox_openapi\"\n                  color=\"primary\"\n                /> }\n              label=\"OpenAPI\"\n            />\n          </FormGroup>\n          <TextField\n            id=\"shapes-per-page\"\n            value={state.shapes_per_page}\n            onChange={(e: any) => {updateState({shapes_per_page: e.target.value})}}\n            label=\"Files per page\"\n            type=\"number\"\n            variant=\"outlined\"\n            // style={{ backgroundColor: '#ffffff' }}\n          />\n        </Box>\n\n        {/* Autocomplete to filter by repositories */}\n        <Autocomplete\n          multiple\n          value={state.repositories_autocomplete}\n          onChange={handleAutocompleteRepositories}\n          id=\"autocomplete-repositories\"\n          options={state.repositories_hash.filter( (repo: any) =>{ return (filtered_repos.indexOf(repo.label) > -1) })\n            .map((option: any) => option.label+ \",\" + option.count + \",\" + option.description)}\n          getOptionLabel={(option) => option.split(\",\")[0].replace('https://github.com/', '')}\n          renderOption={(option: any) => (\n            <React.Fragment>\n              {option.split(\",\")[0].replace('https://github.com/', '')} ({option.split(\",\")[1]} files) \n              {option.split(\",\")[2] && \n                <React.Fragment>\n                  &nbsp;- {option.split(\",\")[2]}\n                </React.Fragment>\n              }\n            </React.Fragment>\n          )}\n          renderInput={params => <TextField {...params} \n            label=\"📁 Filter by repositories\" \n            variant=\"outlined\" \n            // style={{ backgroundColor: '#ffffff' }}\n            // onInputChange={handleAutocompleteRepositories}\n            // size='small'\n            // InputProps={{\n            //   className: classes.whiteColor\n            // }}\n            // ListboxProps={{\n            //   className: classes.whiteColor,\n            // }}\n            // getOptionLabel={option => option.title}\n            // style={{ width: '60ch' }}\n          />}\n        />\n      </Paper>\n\n      {state.shapes_files_list.length < 1 && (\n        <div style={{textAlign: 'center'}}>\n          <CircularProgress style={{padding: theme.spacing(10, 10)}} />\n        </div>\n      )}\n\n      {/* Display Shapes files */}\n      {filtered_files.slice(((state.page - 1)*(state.shapes_per_page)), ((state.page)*(state.shapes_per_page) - 1)).map(function(project: any, key: number){\n        return <Paper key={key.toString()} elevation={2} style={{padding: theme.spacing(2, 2), margin: theme.spacing(2, 0)}}>\n          <Typography variant=\"h6\">\n            File:&nbsp;\n            <b><a href={project.shapeFileUri} className={classes.link}>{project.label}</a></b>\n            {project.query && project.sparqlEndpoint &&\n              // Add YASGUI link if relevant\n              // https://yasgui.triply.cc/#query=  &endpoint=\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query) + '&endpoint=' + project.sparqlEndpoint}\n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SendIcon />\n                  &nbsp;Query on YASGUI\n                </Button>\n              </a>\n            }\n            {project.query && !project.sparqlEndpoint &&\n              <a href={'https://yasgui.triply.cc/#query=' + encodeURIComponent(project.query)} \n                className={classes.link} target='_blank'>\n                <Button variant=\"contained\" color=\"primary\" style={{margin: theme.spacing(0, 2)}}>\n                  <SearchIcon />\n                  &nbsp;See on YASGUI\n                </Button>\n              </a>\n            }\n            <LoggedIn>\n              <Like object={project.shapeFileUri}>the Shape</Like>\n            </LoggedIn>\n          </Typography>\n          {/* shape_file_description */}\n          {project.shape_file_description &&\n            <Typography style={{fontStyle: 'italic', margin: theme.spacing(1, 0)}}>\n              {project.shape_file_description}\n            </Typography>\n          }\n          <Typography style={{margin: theme.spacing(1, 0)}}>\n            {/* In repository:&nbsp; */}\n            <a href={project.repository} className={classes.link}>\n              📁&nbsp;{project.repository.replace('https://github.com/', '')}\n            </a>\n            {project.repo_description &&\n              <>\n                &nbsp;-&nbsp;{project.repo_description}\n              </>\n            }\n          </Typography>\n          {project.shapes &&\n            <>\n              <Typography style={{marginTop: theme.spacing(1)}}>\n                Contains {pluralize(project.shapes.length, 'Shape')}:\n              </Typography>\n              {project.shapes.map((shapeLabel: string, key: number) => {\n                // Limit shape label size to 150 chars\n                return <Chip label={shapeLabel} color='primary' key={key.toString()}\n                    style={{margin: theme.spacing(1, 1)}}/>\n                // <Tooltip title={shapeLabel} key={key.toString()}>\n                // </Tooltip>\n              })}\n            </>\n          }\n        </Paper>\n      })}\n      <Pagination count={Math.floor(filtered_files.length / state.shapes_per_page) + 1} \n        color=\"primary\" onChange={(event,val)=> updateState({page: val})} \n        style={{ display:'flex', justifyContent: 'center' }}\n      />\n    </Container>\n  )\n}\n\n// SPARQL select query to get all shapes files without the list of their shapes (much faster)\nconst getFilesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        dc:source ?repository .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri dc:description ?shape_file_description }\n}`\n\n// SPARQL select query to get all shapes files and the list of their shapes\nconst getShapesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nPREFIX void: <http://rdfs.org/ns/void#>\nSELECT DISTINCT * WHERE { \n    ?shapeFileUri a schema:SoftwareSourceCode ;\n        a ?shape_type ;\n        rdfs:label ?label ;\n        dc:source ?repository ;\n        dcterms:hasPart ?shapes .\n    FILTER(?shape_type != schema:SoftwareSourceCode)\n    OPTIONAL { ?repository rdfs:comment ?repo_description }\n    OPTIONAL { ?shapeFileUri schema:query ?query }\n    OPTIONAL { ?shapeFileUri void:sparqlEndpoint ?sparqlEndpoint }\n    OPTIONAL { ?shapeFileUri dc:description ?shape_file_description }\n}`\n// } LIMIT 1000`\n\n// SPARQL select query to get all GitHub repos, their description and the count of shapes file in it\nconst countRepositoriesQuery = `PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>\nPREFIX dc: <http://purl.org/dc/elements/1.1/>\nPREFIX dcterms: <http://purl.org/dc/terms/>\nPREFIX schema: <https://schema.org/>\nPREFIX sh: <http://www.w3.org/ns/shacl#>\nPREFIX shex: <http://www.w3.org/ns/shex#>\nSELECT ?repository (count(?shapeFileUri) AS ?shapeFileCount) ?repo_description WHERE { \n  ?shapeFileUri a <https://schema.org/SoftwareSourceCode> ;\n    rdfs:label ?label ;\n    dc:source ?repository .\n  OPTIONAL { ?repository rdfs:comment ?repo_description }\n} GROUP BY ?repository ?repo_description\n`\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography, Container, Paper, Button } from \"@material-ui/core\";\n\n// @ts-ignore\nimport iconImage from '../../assets/icon.png';\n\n// import { FormControl, TextField, Input, InputLabel, FormHelperText, Select } from '@material-ui/core';\n// import GetAppIcon from '@material-ui/icons/GetApp';\n// import Autocomplete from '@material-ui/lab/Autocomplete';\n// import MenuItem from '@material-ui/core/MenuItem';\n// import Snackbar from '@material-ui/core/Snackbar';\n// import MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\n// import { Graph } from \"perfect-graph\";\n\nconst useStyles = makeStyles(theme => ({\n  settingsForm: {\n    width: '100%',\n    // textAlign: 'center',\n    '& .MuiFormControl-root': {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n    '& .MuiFormHelperText-root': {\n      marginTop: theme.spacing(0),\n      marginBottom: theme.spacing(1),\n    },\n  },\n  saveButton: {\n    textTransform: 'none',\n    margin: theme.spacing(2, 2),\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  normalFont: {\n    fontSize: '14px',\n  },\n  smallerFont: {\n    fontSize: '12px',\n  },\n  alignLeft: {\n    textAlign: 'left'\n  },\n  paperPadding: {\n    padding: theme.spacing(2, 2),\n    margin: theme.spacing(2, 2),\n  },\n  paperTitle: {\n    fontWeight: 300,\n    marginBottom: theme.spacing(1),\n  }\n}))\n\n\nexport default function About() {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    open: false,\n    dialogOpen: false,\n    project_license: '',\n    language_autocomplete: [],\n  });\n  // const form_category_dropdown = React.createRef(); \n\n  return(\n    <Container className='mainContainer'>\n        {/* <Typography variant=\"h4\" style={{textAlign: 'center', marginBottom: '20px'}}>\n          About\n        </Typography> */}\n\n      {/* image: {iconImage} */}\n      {/* Color: https://perfectgraph-5c619.web.app/?path=/story/components-components--view */}\n      {/* <Graph\n        style={{ width: '100%', height: 250 }}\n        nodes={[\n          {\n            id: 1,\n            position: { x: 10, y: 10 },\n            data: {\n              name: 'Institute of Data Science',\n              image: 'https://raw.githubusercontent.com/vemonet/shapes-of-you/main/assets/icon.png',\n              story: `Develop responsible data science by design to accelerate discovery across all sectors of society.`,\n              color: 'grey'\n            }\n          },\n          {\n            id: 2,\n            position: { x: 600, y: 10 },\n            data: {\n              name: 'Maastricht University',\n              image: 'https://raw.githubusercontent.com/vemonet/shapes-of-you/main/assets/icon.png',\n              story: `The most international university in the Netherlands, stands out for its innovative education model, and multidisciplinary approach to research and education.`,\n              color: 'grey'\n            }\n          },\n        ]}\n        edges={[\n          { id: 51, source: 1, target: 2 }\n        ]}\n        renderNode={({ item: { data } }) => (\n        <Graph.ProfileTemplate\n          name={data.name}\n          image={data.image}\n          story={data.story}\n          style={{ backgroundColor: '#eceff1' }}\n        />\n      )}\n      /> */}\n      \n      \n\n    </Container>\n  )\n}","import React from \"react\";\nimport Helmet from \"react-helmet\";\nimport { View } from \"react-native\";\nimport { Router, Route } from \"./src/components/react-router\";\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport './App.css';\nimport NavBar from \"./src/components/NavBar\";\nimport Footer from \"./src/components/Footer\";\nimport SemanticIndex from \"./src/pages/SemanticIndex\";\nimport About from \"./src/pages/About\";\n// import blue from '@material-ui/core/colors/blue';\n\n// Change theme color and typography here\nconst theme = createMuiTheme({\n  palette: {\n    // Blue\n    primary: { light: '#63a4ff', main: '#1976d2', dark: '#004ba0' },\n    // Green\n    secondary: { light: '#4caf50', main: '#7e57c2', dark: '#00600f' },\n    // main: blue[700]\n    // primary: { light: blue[50], main: blue[600], dark: blue[900] },\n    // red: { light: '#f05545', main: '#b71c1c', dark: '#7f0000' },\n    // default: { light: '#fafafa', main: '#eceff1', dark: grey[600] }\n  },\n  typography: {\n    \"fontFamily\": \"\\\"Open Sans\\\", \\\"Roboto\\\", \\\"Arial\\\"\",\n    \"fontWeightLight\": 300,\n    \"fontWeightRegular\": 400,\n    \"fontWeightMedium\": 500\n    // \"fontSize\": 13\n  },\n});\n\nconst website_name = \"Shapes of you\"\nconst website_description = \"Index for publicly available semantic resources (OWL & OBO ontologies, SKOS RDF vocabularies, SHACL & ShEx shapes, SPARQL queries) stored in Git repositories (GitHub, GitLab, Gitee)\";\n\nconst App = () => (\n  <MuiThemeProvider theme={theme}>\n    <Helmet>\n      <title>Shapes of you</title>\n      <meta name=\"description\" content={website_description}/>\n\n      {/* Google / Search Engine Tags */}\n      <meta itemProp=\"name\" content={website_name}/>\n      <meta itemProp=\"description\" content={website_description}/>\n      <meta itemProp=\"image\" content=\"\"/>\n\n      {/* Facebook Meta Tags */}\n      <meta property=\"og:url\" content=\"https://index.semanticscience.org\"/>\n      <meta property=\"og:type\" content=\"website\"/>\n      <meta property=\"og:title\" content={website_name}/>\n      <meta property=\"og:description\" content={website_description}/>\n      <meta property=\"og:image\" content=\"\"/>\n\n      {/* Twitter Meta Tags */}\n      <meta name=\"twitter:card\" content=\"summary_large_image\"/>\n      <meta name=\"twitter:title\" content={website_name}/>\n      <meta name=\"twitter:description\" content={website_description}/>\n      <meta name=\"twitter:image\" content=\"\"/>\n    </Helmet>\n    {/* <Router basename=\"/shapes-of-you/\"> */}\n    <Router basename=\"/\">\n      <View style={{height: '100%', backgroundColor: '#eceff1'}}>\n        <NavBar />\n\n        <Route exact path=\"/\" component={SemanticIndex} />\n        <Route path=\"/about\" component={About} />\n        <Footer />\n      </View>\n    </Router>\n  </MuiThemeProvider>\n);\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","var api = require(\"!./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!./node_modules/css-loader/dist/cjs.js!./App.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"./node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.push([module.id, \"@import url(https://fonts.googleapis.com/css?family=Open+Sans);\"]);\n// Module\nexports.push([module.id, \".flexGrow {\\n  flex-grow: 1; \\n}\\n\\n.mainContainer {\\n  margin-top: 30px;\\n  margin-bottom: 20px;\\n}\\n\\npre, code {\\n  font-family: monospace, monospace;\\n  border-radius: 6px;\\n  padding: 2px;\\n  color: white;\\n  background-color: #455a64;\\n  /* background-color: #1976d2; */\\n}\\n  \\n/* @import url(\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\");\\nbody {\\n  margin: 0;\\n  padding: 0;\\n  text-align: center; } */\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n"],"sourceRoot":""}